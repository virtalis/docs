"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[32868],{77023:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"visionary-render-programming/reference/c-api/modules/plugins/utilities","title":"Utilities","description":"Module: Plugins","source":"@site/docs/visionary-render-programming/reference/c-api/modules/plugins/utilities.mdx","sourceDirName":"visionary-render-programming/reference/c-api/modules/plugins","slug":"/visionary-render-programming/reference/c-api/modules/plugins/utilities","permalink":"/visionary-render-programming/reference/c-api/modules/plugins/utilities","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/modules/plugins/utilities.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Utilities","summary":"Utilities to assist in plugin authoring, provided by the vrtree-linker library."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Interface","permalink":"/visionary-render-programming/reference/c-api/modules/plugins/interface"},"next":{"title":"Core","permalink":"/visionary-render-programming/reference/c-api/modules/core"}}');var s=n(74848),d=n(28453);const l={title:"Utilities",summary:"Utilities to assist in plugin authoring, provided by the vrtree-linker library."},o="Utilities",c={},t=[{value:"Functions",id:"functions",level:2},{value:"Defines",id:"defines",level:2},{value:"Functions Documentation",id:"functions-documentation",level:2},{value:"registerYield",id:"registeryield",level:3},{value:"Macros Documentation",id:"macros-documentation",level:2},{value:"define LOG_DEBUG",id:"define-log-debug",level:3},{value:"define LOG_ERROR",id:"define-log-error",level:3},{value:"define LOG_INFO",id:"define-log-info",level:3},{value:"define LOG_WARN",id:"define-log-warn",level:3},{value:"define VRPLUGIN_API_IMPL",id:"define-vrplugin-api-impl",level:3},{value:"define VRPLUGIN_API_LOGIMPL",id:"define-vrplugin-api-logimpl",level:3},{value:"define VRPLUGIN_API_PERMISSIONIMPL",id:"define-vrplugin-api-permissionimpl",level:3},{value:"define VRPLUGIN_API_STDIMPL",id:"define-vrplugin-api-stdimpl",level:3},{value:"define VRPLUGIN_API_YIELDIMPL",id:"define-vrplugin-api-yieldimpl",level:3},{value:"define VRPLUGIN_IMPORT_PERMISSION",id:"define-vrplugin-import-permission",level:3},{value:"define VRPLUGIN_INIT_PERMISSION",id:"define-vrplugin-init-permission",level:3},{value:"define VRPLUGIN_INJECT_CORE_LOG",id:"define-vrplugin-inject-core-log",level:3},{value:"define VRPLUGIN_INJECT_CORE_YIELD",id:"define-vrplugin-inject-core-yield",level:3},{value:"define VRPLUGIN_LOADVRTREE",id:"define-vrplugin-loadvrtree",level:3}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"utilities",children:"Utilities"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Module:"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/",children:"Plugins"})})]}),"\n",(0,s.jsxs)(r.p,{children:["Utilities to assist in plugin authoring, provided by the ",(0,s.jsx)(r.code,{children:"vrtree-linker"})," library."]}),"\n",(0,s.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#registeryield",children:"registerYield"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrpprogressyieldproc",children:"VRPProgressYieldProc"})," proc)",(0,s.jsx)("br",{}),"Internal implementation of ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrpprogressyieldproc",children:"VRProgressYield"})," which stores the progress function and exposes it via ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/#progress-yield",children:"progress_yield"}),"."]})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"defines",children:"Defines"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-log-debug",children:"LOG_DEBUG"})})," ",(0,s.jsx)("br",{}),"Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for debug messages."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-log-error",children:"LOG_ERROR"})})," ",(0,s.jsx)("br",{}),"Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for error messages."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-log-info",children:"LOG_INFO"})})," ",(0,s.jsx)("br",{}),"Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for info (standard) messages."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-log-warn",children:"LOG_WARN"})})," ",(0,s.jsx)("br",{}),"Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for warning messages."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-api-impl",children:"VRPLUGIN_API_IMPL"})})," ",(0,s.jsx)("br",{}),"Combines all helper impl macros."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-api-logimpl",children:"VRPLUGIN_API_LOGIMPL"})})," ",(0,s.jsx)("br",{}),"Implements the log registration functions and provides static variables to store the registered log functions, ",(0,s.jsx)(r.code,{children:"s_logFunc"})," and ",(0,s.jsx)(r.code,{children:"s_logIndentFunc"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-api-permissionimpl",children:"VRPLUGIN_API_PERMISSIONIMPL"})})," ",(0,s.jsx)("br",{}),"Implements permission registration functions and provides static variables to store the registered permission functions, ",(0,s.jsx)(r.code,{children:"s_hasPermissionFunc"})," and ",(0,s.jsx)(r.code,{children:"s_reqPermissionFunc"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-api-stdimpl",children:"VRPLUGIN_API_STDIMPL"})})," ",(0,s.jsx)("br",{}),"Implements the major and minor version query functions."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-api-yieldimpl",children:"VRPLUGIN_API_YIELDIMPL"})})," ",(0,s.jsx)("br",{}),"Implements progress yield registration function and wraps it in ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/#progress-yield",children:"progress_yield"}),"."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-import-permission",children:"VRPLUGIN_IMPORT_PERMISSION"})}),"(NAME) ",(0,s.jsx)("br",{}),"Helper macro that checks and calls the registered ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrprequestpermissionproc",children:"VRPRequestPermissionProc"})," to trigger an application license check. Inserts a ",(0,s.jsx)(r.code,{children:"return 1"})," on failure, so should be used in a function that returns an int."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-init-permission",children:"VRPLUGIN_INIT_PERMISSION"})}),"(NAME) ",(0,s.jsx)("br",{}),"Helper macro that checks the existence of the registered ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrphaspermissionproc",children:"VRPHasPermissionProc"})," and calls it. Inserts a ",(0,s.jsx)(r.code,{children:"return 1"})," on failure, so should be used in a function that returns an int."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-inject-core-log",children:"VRPLUGIN_INJECT_CORE_LOG"})})," ",(0,s.jsx)("br",{}),"Internal use for Virtalis plugins."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-inject-core-yield",children:"VRPLUGIN_INJECT_CORE_YIELD"})})," ",(0,s.jsx)("br",{}),"Internal use for Virtalis plugins."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#define-vrplugin-loadvrtree",children:"VRPLUGIN_LOADVRTREE"})})," ",(0,s.jsx)("br",{}),"Loads all the VRTree C API entry points."]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"functions-documentation",children:"Functions Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"registeryield",children:"registerYield"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"void registerYield(\r\n    VRPProgressYieldProc proc\r\n)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Internal implementation of ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrpprogressyieldproc",children:"VRProgressYield"})," which stores the progress function and exposes it via ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/#progress-yield",children:"progress_yield"}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"macros-documentation",children:"Macros Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"define-log-debug",children:"define LOG_DEBUG"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define LOG_DEBUG 3\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for debug messages."]}),"\n",(0,s.jsx)(r.h3,{id:"define-log-error",children:"define LOG_ERROR"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define LOG_ERROR 2\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for error messages."]}),"\n",(0,s.jsx)(r.h3,{id:"define-log-info",children:"define LOG_INFO"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define LOG_INFO 0\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for info (standard) messages."]}),"\n",(0,s.jsx)(r.h3,{id:"define-log-warn",children:"define LOG_WARN"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define LOG_WARN 1\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Type passed to a ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrplogproc",children:"VRPLogProc"})," for warning messages."]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-api-impl",children:"define VRPLUGIN_API_IMPL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_API_IMPL VRPLUGIN_API_STDIMPL;      \\\r\n  VRPLUGIN_API_LOGIMPL;      \\\r\n  VRPLUGIN_API_YIELDIMPL;    \\\r\n  VRPLUGIN_API_PERMISSIONIMPL\n"})}),"\n",(0,s.jsx)(r.p,{children:"Combines all helper impl macros."}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-api-logimpl",children:"define VRPLUGIN_API_LOGIMPL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_API_LOGIMPL static VRPLogProc s_logFunc = NULL;                                   \\\r\n  PLUGIN_ENTRY_POINT void VRTREE_APIENTRY VRPRegisterLog(VRPLogProc proc) { s_logFunc = proc; } \\\r\n  static VRPLogIndentProc s_logIndentFunc = NULL;                       \\\r\n  PLUGIN_ENTRY_POINT void VRTREE_APIENTRY VRPRegisterLogIndent(VRPLogIndentProc proc) { s_logIndentFunc = proc; }\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Implements the log registration functions and provides static variables to store the registered log functions, ",(0,s.jsx)(r.code,{children:"s_logFunc"})," and ",(0,s.jsx)(r.code,{children:"s_logIndentFunc"})]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-api-permissionimpl",children:"define VRPLUGIN_API_PERMISSIONIMPL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_API_PERMISSIONIMPL static VRPHasPermissionProc s_hasPermissionFunc = NULL;               \\\r\n  PLUGIN_ENTRY_POINT void VRTREE_APIENTRY VRPRegisterHasPermission(VRPHasPermissionProc proc) { s_hasPermissionFunc = proc; } \\\r\n  static VRPRequestPermissionProc s_reqPermissionFunc = NULL;           \\\r\n  PLUGIN_ENTRY_POINT void VRTREE_APIENTRY VRPRegisterRequestPermission(VRPRequestPermissionProc proc) { s_reqPermissionFunc = proc; }\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Implements permission registration functions and provides static variables to store the registered permission functions, ",(0,s.jsx)(r.code,{children:"s_hasPermissionFunc"})," and ",(0,s.jsx)(r.code,{children:"s_reqPermissionFunc"})]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-api-stdimpl",children:"define VRPLUGIN_API_STDIMPL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_API_STDIMPL PLUGIN_ENTRY_POINT int VRTREE_APIENTRY VRPGetAPIVersionMajor() { return PLUGIN_API_VERSION_MAJOR; } \\\r\n  PLUGIN_ENTRY_POINT int VRTREE_APIENTRY VRPGetAPIVersionMinor() { return PLUGIN_API_VERSION_MINOR; }\n"})}),"\n",(0,s.jsx)(r.p,{children:"Implements the major and minor version query functions."}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-api-yieldimpl",children:"define VRPLUGIN_API_YIELDIMPL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_API_YIELDIMPL PLUGIN_ENTRY_POINT void VRTREE_APIENTRY VRPRegisterProgressYield(VRPProgressYieldProc proc) { registerYield(proc); }\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Implements progress yield registration function and wraps it in ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/#progress-yield",children:"progress_yield"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-import-permission",children:"define VRPLUGIN_IMPORT_PERMISSION"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:'#define VRPLUGIN_IMPORT_PERMISSION(\r\n    NAME\r\n)\r\nif(!s_reqPermissionFunc || s_reqPermissionFunc(NAME, "Cancel Import") == 0) \\\r\n    return 1\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Helper macro that checks and calls the registered ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrprequestpermissionproc",children:"VRPRequestPermissionProc"})," to trigger an application license check. Inserts a ",(0,s.jsx)(r.code,{children:"return 1"})," on failure, so should be used in a function that returns an int."]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-init-permission",children:"define VRPLUGIN_INIT_PERMISSION"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_INIT_PERMISSION(\r\n    NAME\r\n)\r\nif(!s_hasPermissionFunc) return 1; \\\r\n  s_hasPermissionFunc(NAME)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Helper macro that checks the existence of the registered ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/plugins/interface#typedef-vrphaspermissionproc",children:"VRPHasPermissionProc"})," and calls it. Inserts a ",(0,s.jsx)(r.code,{children:"return 1"})," on failure, so should be used in a function that returns an int."]}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-inject-core-log",children:"define VRPLUGIN_INJECT_CORE_LOG"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_INJECT_CORE_LOG \n"})}),"\n",(0,s.jsx)(r.p,{children:"Internal use for Virtalis plugins."}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-inject-core-yield",children:"define VRPLUGIN_INJECT_CORE_YIELD"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_INJECT_CORE_YIELD \n"})}),"\n",(0,s.jsx)(r.p,{children:"Internal use for Virtalis plugins."}),"\n",(0,s.jsx)(r.h3,{id:"define-vrplugin-loadvrtree",children:"define VRPLUGIN_LOADVRTREE"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"#define VRPLUGIN_LOADVRTREE {                   \\\r\n  int ret = loadVrtree();                       \\\r\n  if(ret != 0)                                  \\\r\n    return ret; }\n"})}),"\n",(0,s.jsx)(r.p,{children:"Loads all the VRTree C API entry points."})]})}function p(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>o});var i=n(96540);const s={},d=i.createContext(s);function l(e){const r=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(d.Provider,{value:r},e.children)}}}]);