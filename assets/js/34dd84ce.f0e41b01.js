"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[62898],{62645:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-node","title":"Meta_HapticNode","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-node.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-node","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-node","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-node.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_HapticNode","summary":"A HapticNode is added to Meta_Assembly much the same way as Meta_Collision, and allows the assembly to be felt by haptic devices."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_HapticDevice","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-haptic-device"},"next":{"title":"Meta_HololensRemotingViewport","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-hololens-remoting-viewport"}}');var i=t(74848),r=t(28453);const d={title:"Meta_HapticNode",summary:"A HapticNode is added to Meta_Assembly much the same way as Meta_Collision, and allows the assembly to be felt by haptic devices."},c="Meta_HapticNode",o={},a=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum CollisionNodeType",id:"enum-collisionnodetype",level:3}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"meta_hapticnode",children:"Meta_HapticNode"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Module:"})," ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(s.strong,{children:"/"})," ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsxs)(s.p,{children:["A HapticNode is added to ",(0,i.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-assembly",children:"Meta_Assembly"})," much the same way as ",(0,i.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-collision",children:"Meta_Collision"}),", and allows the assembly to be felt by haptic devices."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"#include <meta_haptic.hpp>"})}),"\n",(0,i.jsx)(s.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Name"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"enum"}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Collides, Idx_Type, Idx_Enabled, Idx_Limit, Idx_Rule, Idx_Magnetic, Idx_Stiffness, Idx_Damping, Idx_Friction, Idx_Popthrough }",(0,i.jsx)("br",{}),"Property index."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"enum"}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"#enum-collisionnodetype",children:"CollisionNodeType"})})," { TYPE_TOUCH = 0, TYPE_HOTSPOT = 5 }",(0,i.jsx)("br",{}),"Values for Idx_Type."]})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(s.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Enumerator"}),(0,i.jsx)(s.th,{children:"Value"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Collides"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"bool - Is set to true while the haptic device is actively feeling this object, and false when it moves away"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Type"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"CollisionNodeType (int) - Type of haptic collision"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Enabled"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"bool - Enables haptics on this node"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Limit"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"Internal."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Rule"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"Internal."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Magnetic"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"bool - When enabled, this object can cause the haptic cursor to stick to it"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Stiffness"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"floatw - Controls how hard the surface of the object feels"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Damping"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"floatw - Controls the springiness of the surface"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Friction"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"floatw - Controls the resistance against the haptic cursor moving along the surface"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Idx_Popthrough"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"floatw - Controls how hard it is to push the cursor through the surface"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"Property index."}),"\n",(0,i.jsx)(s.h3,{id:"enum-collisionnodetype",children:"enum CollisionNodeType"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Enumerator"}),(0,i.jsx)(s.th,{children:"Value"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"TYPE_TOUCH"}),(0,i.jsx)(s.td,{children:"0"}),(0,i.jsxs)(s.td,{children:["Node is touchable by the haptic device, providing force feedback (Symbols - C: ",(0,i.jsx)(s.code,{children:'"TypeTouch"'}),", Lua: ",(0,i.jsx)(s.code,{children:"__HapticNode_TypeTouch"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"TYPE_HOTSPOT"}),(0,i.jsx)(s.td,{children:"5"}),(0,i.jsxs)(s.td,{children:["Node represents a bounding sphere, activated when the haptic cursor is inside. Triggers Touch and Break events to ",(0,i.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-event-handler",children:"Meta_EventHandler"})," (Symbols - C: ",(0,i.jsx)(s.code,{children:'"TypeHotspot"'}),", Lua: ",(0,i.jsx)(s.code,{children:"__HapticNode_TypeHotspot"}),")"]})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"Values for Idx_Type."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>c});var n=t(96540);const i={},r=n.createContext(i);function d(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);