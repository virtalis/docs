"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[5832],{92580:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"visionary-render-programming/plugins/tutorials/progress-bar","title":"Update the Progress Bar","description":"Introduction","source":"@site/docs/visionary-render-programming/plugins/tutorials/progress-bar.mdx","sourceDirName":"visionary-render-programming/plugins/tutorials","slug":"/visionary-render-programming/plugins/tutorials/progress-bar","permalink":"/visionary-render-programming/plugins/tutorials/progress-bar","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/plugins/tutorials/progress-bar.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Implement an Observer","permalink":"/visionary-render-programming/plugins/tutorials/observer"},"next":{"title":"Implement an Update Function","permalink":"/visionary-render-programming/plugins/tutorials/update-function"}}');var a=n(74848),s=n(28453),i=n(11470),o=n(19365);const l={},u="Update the Progress Bar",c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Registration",id:"registration",level:2},{value:"Yielding",id:"yielding",level:2}];function p(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"update-the-progress-bar",children:"Update the Progress Bar"})}),"\n",(0,a.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(r.p,{children:"When a plugin is performing a long operation, such as importing or exporting, Visionary Render enters a progress state, where the loading screen becomes visible. While this screen is visible, plugins may update it to keep the user informed of their progress."}),"\n",(0,a.jsx)(r.h2,{id:"registration",children:"Registration"}),"\n",(0,a.jsxs)(r.p,{children:["Native plugins are given the yield function when they are initialised, if they export a VRPRegisterProgressYieldProc called ",(0,a.jsx)(r.code,{children:"VRPRegisterProgressYield"}),". This function recieves a VRPProgressYieldProc which should be stored for the lifetime of the plugin."]}),"\n",(0,a.jsxs)(r.p,{children:["Native plugins using the ",(0,a.jsx)(r.code,{children:"vrtree-linker"})," library and its ",(0,a.jsx)(r.code,{children:"VRPLUGIN_API_STDIMPL"})," macro may call ::progress_yield, which has automatically been connected to the yield function provided to the registration function."]}),"\n",(0,a.jsx)(r.p,{children:"Lua plugins do not need to perform any registration and may call vrProgressYield."}),"\n",(0,a.jsx)(r.h2,{id:"yielding",children:"Yielding"}),"\n",(0,a.jsx)(r.p,{children:"Whether native or Lua, the yield function takes the same arguments:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"A progress value"}),"\n",(0,a.jsx)(r.li,{children:"A maximum value"}),"\n",(0,a.jsx)(r.li,{children:"A message"}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"The progress value represents the current progress, out of a total specified in the maximum value. When these are non-zero, the loading screen displays a progress bar.\r\nIf a message is provided, it replaces what was previously displayed on the loading screen. Otherwise, the message currently on the screen remains present."}),"\n",(0,a.jsx)(r.p,{children:"Lua may omit the values and provide the message as the first parameter to vrProgressYield, if no progress bar is required."}),"\n",(0,a.jsx)(r.p,{children:"It is important that long operations yield regularly to keep the application responsive and keep the user informed of the progress."}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(o.A,{value:"cpp",label:"C++",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-cpp",children:'PLUGIN_ENTRY_POINT int VRTREE_APIENTRY VRPImport(...)\r\n{\r\n  progress_yield(0, 0, "Importing objects..."); //update the message\r\n  for(size_t i = 0; i < nObjects; ++i) {\r\n    convertObjectToVR(objects[i]);\r\n    progress_yield(i, nObjects); //update the loading bar progress without changing the message\r\n  }\r\n}\n'})})}),(0,a.jsx)(o.A,{value:"lua",label:"Lua",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-lua",children:'local function import(...)\r\n  vrProgressYield("Importing objects...") --update the message\r\n  for i, v in ipairs(objects) do\r\n    convertObjectToVR(v)\r\n    vrProgressYield(i, #objects) --update the loading bar progress without changing the message\r\n  end\r\nend\n'})})})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},19365:(e,r,n)=>{n.d(r,{A:()=>i});n(96540);var t=n(34164);const a={tabItem:"tabItem_Ymn6"};var s=n(74848);function i({children:e,hidden:r,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,n),hidden:r,children:e})}},11470:(e,r,n)=>{n.d(r,{A:()=>I});var t=n(96540),a=n(34164),s=n(23104),i=n(56347),o=n(205),l=n(57485),u=n(31682),c=n(70679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return d(e).map((({props:{value:e,label:r,attributes:n,default:t}})=>({value:e,label:r,attributes:n,default:t})))}(n);return function(e){const r=(0,u.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function h({value:e,tabValues:r}){return r.some((r=>r.value===e))}function g({queryString:e=!1,groupId:r}){const n=(0,i.W6)(),a=function({queryString:e=!1,groupId:r}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,l.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(n.location.search);r.set(a,e),n.replace({...n.location,search:r.toString()})}),[a,n])]}function m(e){const{defaultValue:r,queryString:n=!1,groupId:a}=e,s=p(e),[i,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:r}){if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:s}))),[u,d]=g({queryString:n,groupId:a}),[m,f]=function({groupId:e}){const r=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,c.Dv)(r);return[n,(0,t.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:a}),v=(()=>{const e=u??m;return h({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{v&&l(v)}),[v]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,s]),tabValues:s}}var f=n(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function y({className:e,block:r,selectedValue:n,selectValue:t,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),u=e=>{const r=e.currentTarget,a=o.indexOf(r),s=i[a].value;s!==n&&(l(r),t(s))},c=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;r=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;r=o[n]??o[o.length-1];break}}r?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},e),children:i.map((({value:e,label:r,attributes:t})=>(0,b.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:u,...t,className:(0,a.A)("tabs__item",v.tabItem,t?.className,{"tabs__item--active":n===e}),children:r??e},e)))})}function x({lazy:e,children:r,selectedValue:n}){const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===n));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==n})))})}function j(e){const r=m(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",v.tabList),children:[(0,b.jsx)(y,{...r,...e}),(0,b.jsx)(x,{...r,...e})]})}function I(e){const r=(0,f.A)();return(0,b.jsx)(j,{...e,children:d(e.children)},String(r))}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var t=n(96540);const a={},s=t.createContext(a);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);