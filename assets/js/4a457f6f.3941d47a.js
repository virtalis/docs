"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[88224],{8482:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-range","title":"Meta_PropSemantics::Range","description":"Helper object for constructing a range of two vector objects.","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-range.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-range","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-range","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-range.mdx","tags":[],"version":"current","lastUpdatedAt":1730820727000,"frontMatter":{"title":"Meta_PropSemantics::Range","summary":"Helper object for constructing a range of two vector objects."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_PropSemantics::PropType","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics-prop-type"},"next":{"title":"Meta_PropSemantics","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics"}}');var t=r(74848),a=r(28453);const i={title:"Meta_PropSemantics::Range",summary:"Helper object for constructing a range of two vector objects."},c="Meta_PropSemantics::Range",l={},d=[{value:"Public Functions",id:"public-functions",level:2},{value:"Public Attributes",id:"public-attributes",level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",level:2},{value:"maxVal",id:"maxval",level:3},{value:"maxVal",id:"maxval-1",level:3},{value:"minVal",id:"minval",level:3},{value:"minVal",id:"minval-1",level:3},{value:"operator double *",id:"operator-double-",level:3},{value:"Range",id:"range",level:3},{value:"Range",id:"range-1",level:3},{value:"Range",id:"range-2",level:3},{value:"Range",id:"range-3",level:3},{value:"Range",id:"range-4",level:3},{value:"Public Attributes Documentation",id:"public-attributes-documentation",level:2},{value:"d8",id:"d8",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"meta_propsemanticsrange",children:"Meta_PropSemantics::Range"})}),"\n",(0,t.jsx)(n.p,{children:"Helper object for constructing a range of two vector objects."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"#include <meta_semantics.hpp>"})}),"\n",(0,t.jsx)(n.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Name"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["template <typename T > ",(0,t.jsx)("br",{}),"T"]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#maxval",children:"maxVal"})}),"() const",(0,t.jsx)("br",{}),"casts the single maximum value to ",(0,t.jsx)(n.code,{children:"T"})," and returns it"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["template <template< typename > class C,typename T > ",(0,t.jsx)("br",{}),"C< T >"]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#maxval",children:"maxVal"})}),"() const",(0,t.jsx)("br",{}),"casts the maximum value to vector type ",(0,t.jsx)(n.code,{children:"C<T>"})," and returns it."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["template <typename T > ",(0,t.jsx)("br",{}),"T"]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#minval",children:"minVal"})}),"() const",(0,t.jsx)("br",{}),"casts the single minimum value to ",(0,t.jsx)(n.code,{children:"T"})," and returns it"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["template <template< typename > class C,typename T > ",(0,t.jsx)("br",{}),"C< T >"]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#minval",children:"minVal"})}),"() const",(0,t.jsx)("br",{}),"casts the minimum value to vector type ",(0,t.jsx)(n.code,{children:"C<T>"})," and returns it"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#operator-double-",children:"operator double *"})}),"()"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#range",children:"Range"})}),"()"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#range",children:"Range"})}),"(double min, double max)"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#range",children:"Range"})}),"(const vtCore::vec2d & min, const vtCore::vec2d & max)"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#range",children:"Range"})}),"(const vtCore::vec3d & min, const vtCore::vec3d & max)"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#range",children:"Range"})}),"(const vtCore::vec4d & min, const vtCore::vec4d & max)"]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"public-attributes",children:"Public Attributes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Name"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"double[8]"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#d8",children:"d8"})})})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"public-functions-documentation",children:"Public Functions Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"maxval",children:"maxVal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"template <typename T >\r\ninline T maxVal() const\n"})}),"\n",(0,t.jsxs)(n.p,{children:["casts the single maximum value to ",(0,t.jsx)(n.code,{children:"T"})," and returns it"]}),"\n",(0,t.jsx)(n.h3,{id:"maxval-1",children:"maxVal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"template <template< typename > class C,\r\ntypename T >\r\ninline C< T > maxVal() const\n"})}),"\n",(0,t.jsxs)(n.p,{children:["casts the maximum value to vector type ",(0,t.jsx)(n.code,{children:"C<T>"})," and returns it."]}),"\n",(0,t.jsx)(n.h3,{id:"minval",children:"minVal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"template <typename T >\r\ninline T minVal() const\n"})}),"\n",(0,t.jsxs)(n.p,{children:["casts the single minimum value to ",(0,t.jsx)(n.code,{children:"T"})," and returns it"]}),"\n",(0,t.jsx)(n.h3,{id:"minval-1",children:"minVal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"template <template< typename > class C,\r\ntypename T >\r\ninline C< T > minVal() const\n"})}),"\n",(0,t.jsxs)(n.p,{children:["casts the minimum value to vector type ",(0,t.jsx)(n.code,{children:"C<T>"})," and returns it"]}),"\n",(0,t.jsx)(n.h3,{id:"operator-double-",children:"operator double *"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline operator double *()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"range",children:"Range"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Range()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"range-1",children:"Range"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Range(\r\n    double min,\r\n    double max\r\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"range-2",children:"Range"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Range(\r\n    const vtCore::vec2d & min,\r\n    const vtCore::vec2d & max\r\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"range-3",children:"Range"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Range(\r\n    const vtCore::vec3d & min,\r\n    const vtCore::vec3d & max\r\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"range-4",children:"Range"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Range(\r\n    const vtCore::vec4d & min,\r\n    const vtCore::vec4d & max\r\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"public-attributes-documentation",children:"Public Attributes Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"d8",children:"d8"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"double[8] d8;\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(96540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);