"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[3868],{63734:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"virtalis-hub-system-admin/setup/deploy-monitoring","title":"Deploy the Monitoring Service Stack","description":"This section covers the deployment of various monitoring services which allow a Kubernetes Administrator to monitor the health, metrics, and logs for all cluster services including Virtalis Hub.","source":"@site/docs/virtalis-hub-system-admin/setup/deploy-monitoring.mdx","sourceDirName":"virtalis-hub-system-admin/setup","slug":"/virtalis-hub-system-admin/setup/deploy-monitoring","permalink":"/virtalis-hub-system-admin/setup/deploy-monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/virtalis-hub-system-admin/setup/deploy-monitoring.mdx","tags":[],"version":"current","lastUpdatedAt":1740107398000,"frontMatter":{},"sidebar":"virtalisHubSystemAdminSidebar","previous":{"title":"Update to Latest Version","permalink":"/virtalis-hub-system-admin/setup/update"},"next":{"title":"Install the VirtalisPublish Plugin","permalink":"/virtalis-hub-system-admin/setup/publish-plugin"}}');var s=r(74848),a=r(28453);const i={},l="Deploy the Monitoring Service Stack",o={},c=[{value:"Prometheus Stack (health, metrics)",id:"prometheus-stack-health-metrics",level:3},{value:"ELK Stack (logging)",id:"elk-stack-logging",level:3},{value:"Set Up the Deployment Shell",id:"set-up-the-deployment-shell",level:2},{value:"Storage",id:"storage",level:3},{value:"Express",id:"express",level:4},{value:"Custom Parameters",id:"custom-parameters",level:4},{value:"Elasticsearch",id:"elasticsearch",level:5},{value:"Prometheus Stack",id:"prometheus-stack",level:5},{value:"Monitoring TLS",id:"monitoring-tls",level:3},{value:"Manually Creating a TLS Cert Secret",id:"manually-creating-a-tls-cert-secret",level:4},{value:"LetsEncrypt with Cert-manager",id:"letsencrypt-with-cert-manager",level:4},{value:"Create Secrets",id:"create-secrets",level:2},{value:"Installing Grafana, Alertmanager, and Prometheus",id:"installing-grafana-alertmanager-and-prometheus",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"deploy-the-monitoring-service-stack",children:"Deploy the Monitoring Service Stack"})}),"\n",(0,s.jsx)(n.p,{children:"This section covers the deployment of various monitoring services which allow a Kubernetes Administrator to monitor the health, metrics, and logs for all cluster services including Virtalis Hub."}),"\n",(0,s.jsx)(n.p,{children:"List of services to be deployed:"}),"\n",(0,s.jsx)(n.h3,{id:"prometheus-stack-health-metrics",children:"Prometheus Stack (health, metrics)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Grafana"}),"\n",(0,s.jsx)(n.li,{children:"Prometheus"}),"\n",(0,s.jsx)(n.li,{children:"Alertmanager"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"elk-stack-logging",children:"ELK Stack (logging)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"Kibana"}),"\n",(0,s.jsx)(n.li,{children:"Filebeat"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"set-up-the-deployment-shell",children:"Set Up the Deployment Shell"}),"\n",(0,s.jsx)(n.p,{children:"Export the following environment variables which will be used throughout the installation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export MONITORING_DOMAIN=<the domain monitoring services will be hosted on>\r\nexport MONITORING_NAMESPACE=monitoring\r\nexport MONITORING_TLS_SECRET=hub-tls-secret\n"})}),"\n",(0,s.jsx)(n.p,{children:"Navigate to the default Virtalis Hub installation folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cd /home/root/Hub/k8s\n"})}),"\n",(0,s.jsx)(n.p,{children:"Export the following if Grafana will be configured to use AAD for authentication:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export GRAFANA_AAD_VALUES='-f misc/prometheus/values-grafana-aad.yaml'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a new namespace:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl create namespace "${MONITORING_NAMESPACE}"\r\nkubectl label ns "${MONITORING_NAMESPACE}" release=prometheus-stack\n'})}),"\n",(0,s.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,s.jsx)(n.h4,{id:"express",children:"Express"}),"\n",(0,s.jsx)(n.p,{children:"If you only want to modify the storage class and leave all other parameters such as size as default, export these variables out:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export MONITORING_SC=<name of storage class>\r\n\r\nexport ELASTICSEARCH_SC_ARGS="--set \\\r\nvolumeClaimTemplate.storageClassName=${MONITORING_SC}"\r\n\r\nexport PROMETHEUS_SC_ARGS="\r\n--set alertmanager.alertmanagerSpec.storage.\\\r\nvolumeClaimTemplate.spec.storageClassName=${MONITORING_SC}\r\n--set prometheus.prometheusSpec.storageSpec.\\\r\nvolumeClaimTemplate.spec.storageClassName=${MONITORING_SC}\r\n--set grafana.persistence.storageClassName=${MONITORING_SC}\r\n"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"custom-parameters",children:"Custom Parameters"}),"\n",(0,s.jsx)(n.p,{children:"Here is a list of different monitoring services and how to customize their storage."}),"\n",(0,s.jsx)(n.h5,{id:"elasticsearch",children:"Elasticsearch"}),"\n",(0,s.jsx)(n.p,{children:"Please refer to the volumeClaimTemplate: section found in the values.yaml file in the elasticsearch helm chart repository for a list of available parameters to customize such as size, access modes and so on."}),"\n",(0,s.jsx)(n.p,{children:"These values can be added/tweaked in the following files:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"k8s/misc/elk/elasticsearch/values-prod.yaml"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"k8s/misc/elk/elasticsearch/values-common.yaml"})}),"\n",(0,s.jsx)(n.h5,{id:"prometheus-stack",children:"Prometheus Stack"}),"\n",(0,s.jsx)(n.p,{children:"Please refer to the volumeClaimTemplate: sections found in the values.yaml file in the prometheus-stack helm chart repository for a list of available parameters to customize such as size, access modes and so on."}),"\n",(0,s.jsx)(n.p,{children:"These values can be added/tweaked in the following files:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"k8s/misc/elk/prometheus/values-prod.yaml"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"k8s/misc/elk/prometheus/values-common.yaml"})}),"\n",(0,s.jsx)(n.h3,{id:"monitoring-tls",children:"Monitoring TLS"}),"\n",(0,s.jsx)(n.p,{children:"Manually create a TLS secret from a TLS key and cert or use the LetsEncrypt integration with cert-manager."}),"\n",(0,s.jsx)(n.h4,{id:"manually-creating-a-tls-cert-secret",children:"Manually Creating a TLS Cert Secret"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl create secret tls -n "${MONITORING_NAMESPACE}" \\\r\n"${MONITORING_TLS_SECRET}" --key="tls.key" --cert="tls.crt"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"letsencrypt-with-cert-manager",children:"LetsEncrypt with Cert-manager"}),"\n",(0,s.jsx)(n.p,{children:"Export the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export KIBANA_INGRESS_ANNOTATIONS="--set ingress.annotations\\\r\n.cert-manager\\.io/cluster-issuer=letsencrypt-prod"\r\n\r\nexport PROMETHEUS_INGRESS_ANNOTATIONS="--set prometheus.ingress\\\r\n.annotations.cert-manager\\.io/cluster-issuer=letsencrypt-prod"\r\n\r\nexport GRAFANA_INGRESS_ANNOTATIONS="--set grafana.ingress\\\r\n.annotations.cert-manager\\.io/cluster-issuer=letsencrypt-prod"\r\n\r\nexport ALERTMANAGER_INGRESS_ANNOTATIONS="--set alertmanager.ingress.\\\r\nannotations.cert-manager\\.io/cluster-issuer=letsencrypt-prod"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"create-secrets",children:"Create Secrets"}),"\n",(0,s.jsx)(n.p,{children:"The next command below uses the pwgen package to generate a random string of 30 alphanumeric characters."}),"\n",(0,s.jsx)(n.p,{children:"Before proceeding make sure pwgen is installed on your machine or use a different package to generate the string replacing the command inside the brackets:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"$(pwgen 30 1 -s) \u2192 $(someOtherPackage --arg1 --arg2)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a secret which will store Grafana credentials:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl create secret generic grafana \\\r\n-n "${MONITORING_NAMESPACE}" \\\r\n--from-literal="user"=$(pwgen 30 1 -s) \\\r\n--from-literal="password"=$(pwgen 30 1 -s)\r\n\r\nkubectl create secret generic elastic-credentials  -n $MONITORING_NAMESPACE \\\r\n--from-literal=password=$(pwgen -c -n -s 30 1 | tr -d \'\\n\') \\\r\n--from-literal=username=elastic\r\n\r\nkubectl create secret generic kibana-credentials -n $MONITORING_NAMESPACE \\\r\n--from-literal=encryption-key=$(pwgen -c -n -s 32 1 | tr -d \'\\n\')\n'})}),"\n",(0,s.jsx)(n.h2,{id:"installing-grafana-alertmanager-and-prometheus",children:"Installing Grafana, Alertmanager, and Prometheus"}),"\n",(0,s.jsx)(n.p,{children:"If you have chosen to configure Grafana to use AAD for authentication, follow this guide to register an app in AAD Configure Azure AD OAuth2 authentication | Grafana documentation and then create a secret by filling out it with the information of the app you have created."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"kubectl create secret generic grafana-auth-aad-secret -n \"${MONITORING_NAMESPACE}\" \\\r\n--from-literal='auth_url'=<ends with /authorize> \\\r\n--from-literal='client_id'=<aad app id> \\\r\n--from-literal='client_secret'=<aad app secret> \\\r\n--from-literal='token_url'=<ends with /token>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo chmod +x *.sh\r\n\r\n./install-monitoring.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check the status of deployed pods:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl get pods -n "${MONITORING_NAMESPACE}"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Optionally, configure filebeat log index to tweak the data retention period and index max size."}),"\n",(0,s.jsx)(n.p,{children:"You can read more about ILM here."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export ELASTIC_SEARCH_ADDRESS=<address of elasticsearch instance>\r\ncurl -X PUT "$ELASTIC_SEARCH_ADDRESS/_ilm/policy/filebeat?pretty" -H \'Content-Type: application/json\' -d\'\r\n{\r\n  "policy": {\r\n    "phases": {\r\n      "hot": {\r\n        "actions": {\r\n          "rollover": {\r\n            "max_primary_shard_size": "<max size in gigabytes>" \r\n          }\r\n        }\r\n      },\r\n      "delete": {\r\n        "min_age": "<min age in days, i.e 90d>",\r\n        "actions": {\r\n          "delete": {} \r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Set up a Serilog space in Kibana"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export KIBANA_POD_NAME=$(kubectl get pod \\\r\n-l app=kibana -n $MONITORING_NAMESPACE \\\r\n-o jsonpath="{.items[0].metadata.name}")\r\n\r\nkubectl exec $KIBANA_POD_NAME -n $MONITORING_NAMESPACE -- bash -c \'curl http://${ES_USERNAME}:${ES_PASSWORD}@0.0.0.0:5601/api/spaces/space -X POST -H "Content-Type: application/json" -H "kbn-xsrf: reporting" --data-raw "{\\"name\\":\\"serilog\\",\\"id\\":\\"serilog\\",\\"initials\\":\\"s\\",\\"color\\":\\"#D6BF57\\",\\"disabledFeatures\\":[\\"siem\\",\\"dev_tools\\",\\"advancedSettings\\",\\"indexPatterns\\",\\"savedObjectsManagement\\",\\"savedObjectsTagging\\",\\"osquery\\",\\"actions\\",\\"stackAlerts\\",\\"fleet\\",\\"monitoring\\",\\"enterpriseSearch\\",\\"discover\\",\\"dashboard\\",\\"canvas\\",\\"maps\\",\\"ml\\",\\"visualize\\",\\"apm\\",\\"uptime\\",\\"observabilityCases\\",\\"infrastructure\\"],\\"imageUrl\\":\\"\\"}"\'\r\n\r\nkubectl exec $KIBANA_POD_NAME -n $MONITORING_NAMESPACE -- bash -c \'curl http://${ES_USERNAME}:${ES_PASSWORD}@0.0.0.0:5601/s/serilog/api/infra/log_source_configurations/default -X PATCH -H "Content-Type: application/json" -H "kbn-xsrf: reporting" --data-raw "{\\"data\\":{\\"name\\":\\"Serilog\\",\\"logIndices\\":{\\"type\\":\\"index_name\\",\\"indexName\\":\\"logs-*\\"},\\"fields\\":{\\"tiebreaker\\":\\"_doc\\",\\"timestamp\\":\\"@timestamp\\"},\\"logColumns\\":[{\\"timestampColumn\\":{\\"id\\":\\"5e7f964a-be8a-40d8-88d2-fbcfbdca0e2f\\"}},{\\"messageColumn\\":{\\"id\\":\\"b645d6da-824b-4723-9a2a-e8cece1645c0\\"}},{\\"fieldColumn\\":{\\"id\\":\\"227c3f32-0980-4566-a06e-06a2e60b3a8c\\",\\"field\\":\\"fields.ApplicationContext\\"}}]}}"\'\n'})}),"\n",(0,s.jsx)(n.p,{children:"Scraping Virtalis Hub Services Using Prometheus"}),"\n",(0,s.jsx)(n.p,{children:"Export the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export HUB_NAMESPACE=<name of kubernetes namespace Virtalis Hub is deployed in>\r\nexport HUB_VERSION=$(kubectl get secret hub-version \\\r\n-n $HUB_NAMESPACE -o json \\\r\n| jq ".data.version" -r | base64 -d)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run the upgrade:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:". ./load-install-config.sh\r\nexport PROMETHEUS_SCRAPE=true\r\n./install-hub.sh\r\nkubectl label namespace $HUB_NAMESPACE prometheus-scrape=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Accessing the Grafana frontend"}),"\n",(0,s.jsx)(n.p,{children:"Retrieve the Grafana admin user:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl get secret --namespace "${MONITORING_NAMESPACE}" \\\r\ngrafana -o jsonpath="{.data.user}" | base64 --decode; echo\n'})}),"\n",(0,s.jsx)(n.p,{children:"Retrieve the Grafana admin password:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl get secret --namespace "${MONITORING_NAMESPACE}" \\\r\ngrafana -o jsonpath="{.data.password}" | base64 --decode; echo\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Grafana can now be accessed at ",(0,s.jsx)(n.code,{children:"https://${MONITORING_DOMAIN}/grafana/"})," from a web-browser using the admin user and admin password"]}),"\n",(0,s.jsx)(n.p,{children:"Accessing the Kibana frontend"}),"\n",(0,s.jsx)(n.p,{children:"Retrieve the kibana admin username:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl get secret elastic-credentials -o jsonpath\\\r\n="{.data.username}" -n $MONITORING_NAMESPACE | \\\r\nbase64 --decode; echo\n'})}),"\n",(0,s.jsx)(n.p,{children:"Retrieve the kibana admin password:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'kubectl get secret elastic-credentials -o jsonpath\\\r\n="{.data.password}" -n $MONITORING_NAMESPACE | \\\r\nbase64 --decode; echo\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Kibana can now be accessed at ",(0,s.jsx)(n.code,{children:"https://${MONITORING_DOMAIN}/kibana/"})," from a web-browser using the admin user and admin password"]}),"\n",(0,s.jsx)(n.p,{children:"Clean-up Post Monitoring Installation"}),"\n",(0,s.jsx)(n.p,{children:"Unset environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"unset MONITORING_DOMAIN && \\\r\nunset MONITORING_NAMESPACE\n"})}),"\n",(0,s.jsx)(n.p,{children:"Clear bash history:"}),"\n",(0,s.jsx)(n.p,{children:"This will clean up any secrets exported in the system."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);