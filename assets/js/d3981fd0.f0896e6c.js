"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[3978],{14039:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box","title":"Meta_TextBox","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_TextBox"},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_System","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-system"},"next":{"title":"Meta_Texture","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-texture"}}');var r=n(74848),i=n(28453);const d={title:"Meta_TextBox"},l="Meta_TextBox",o={},a=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"meta_textbox",children:"Meta_TextBox"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Module:"})," ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,r.jsx)(t.strong,{children:"/"})," ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,r.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Name"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"enum"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Position, Idx_SizingMode, Idx_Size, Idx_Text, Idx_Editable, Idx_Multiline, Idx_AutoWrap, Idx_Style, Idx_Hint, Idx_ToolTip, Idx_ToolTipStyle }"]})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,r.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Enumerator"}),(0,r.jsx)(t.th,{children:"Value"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Enabled"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"bool - When enabled, draws itself and its children"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Position"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"vec3f - Position of the panel relative to its parent"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_SizingMode"}),(0,r.jsx)(t.td,{}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-panel#enum-sizingmode",children:"SizingMode"})," (int) - How the panel sizes itself in respect to its contents"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Size"}),(0,r.jsx)(t.td,{}),(0,r.jsxs)(t.td,{children:["vec2f - Size of the panel, when ",(0,r.jsx)(t.code,{children:"SizingMode==Fixed"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"string - Text to display"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Editable"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Multiline"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"bool - Specifies whether the return key will add a new line"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_AutoWrap"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"bool - Specifies whether or not the text should auto wrap"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Style"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"link - Style to apply to the label (Meta_LabelStyle)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_Hint"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"string - Hint text to display when empty"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_ToolTip"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"string - Text that should appear when hovering"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Idx_ToolTipStyle"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>l});var s=n(96540);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);