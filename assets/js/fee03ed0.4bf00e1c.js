"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[98503],{10605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>d,toc:()=>l});const d=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean","title":"Meta_Ocean","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_Ocean","summary":"An Ocean draws water."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_OceanWake","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-ocean-wake"},"next":{"title":"Meta_OculusViewport","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-oculus-viewport"}}');var s=n(74848),r=n(28453);const i={title:"Meta_Ocean",summary:"An Ocean draws water."},c="Meta_Ocean",a={},l=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function x(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"meta_ocean",children:"Meta_Ocean"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Module:"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(t.strong,{children:"/"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(t.p,{children:"An Ocean draws water."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"#include <meta_ocean.hpp>"})}),"\n",(0,s.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_SeaState, Idx_Reflectivity, Idx_Ambient, Idx_Extinction, Idx_ExtinctionColour, Idx_Scattering, Idx_ScatterColour, Idx_SeaLevel, Idx_Animate, Idx_FixedTime, Idx_DisplacementScale, Idx_Spray, Idx_WindDir, Idx_WindBias, Idx_WindLanesEnabled, Idx_WindLanesWaveAmplitude, Idx_WindLanesWaveWavelength, Idx_WindLanesWaveSpeed, Idx_WindLanesWaveSteepness, Idx_LocalReflection, Idx_LocalReflectionQuality, Idx_DistanceScale, Idx_DepthScale, Idx_SurfaceLightingDepth, Idx_CausticsSize, Idx_CausticsStrength, Idx_CausticsExtinction, Idx_UnderwaterEffects }",(0,s.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Enabled"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - Enables the ocean"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_SeaState"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Overall roughness of the ocean"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Reflectivity"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - How much incoming light should be reflected in the water"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Ambient"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - How much ambient light is picked up in the water colour"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Extinction"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Amount of light penetration in the water"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_ExtinctionColour"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"vec3f - Filtered light colour; RGB 0.0f to 1.0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Scattering"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - How many particles are in the water to reflect light"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_ScatterColour"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"vec3f - The colour of light reflected from the scattering particles"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_SeaLevel"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Base height of the ocean in metres"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Animate"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - When enabled, the ocean waves are animated"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_FixedTime"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Fixed time value which the oceans state is based off"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_DisplacementScale"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Scale of wave displacement"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Spray"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - Whether to enable spray particle effects on cresting waves"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindDir"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"vec3f - Direction of the wind"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindBias"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Bias of the wind"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindLanesEnabled"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Internal / reserved."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindLanesWaveAmplitude"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Internal / reserved."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindLanesWaveWavelength"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Internal / reserved."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindLanesWaveSpeed"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Internal / reserved."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_WindLanesWaveSteepness"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Internal / reserved."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_LocalReflection"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - enable reflections on the ocean surface"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_LocalReflectionQuality"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - resolution of the ocean surface reflections"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_DistanceScale"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_DepthScale"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_SurfaceLightingDepth"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - Controls how much of the scattered light is affected by local lights and shadows when rendering the water surface"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_CausticsSize"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - size of the caustic pattern that appears underwater"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_CausticsStrength"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"float - intensity of the caustic outlines"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_CausticsExtinction"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - whether or not caustic patterns are affected by extinction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_UnderwaterEffects"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - when enabled show underwater extinction and scattering effects"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Property index."})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var d=n(96540);const s={},r=d.createContext(s);function i(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(r.Provider,{value:t},e.children)}}}]);