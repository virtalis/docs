"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[2417],{51724:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream","title":"Meta_AudioStream","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_AudioStream","summary":"A container for AudioStreamBuffer nodes."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_AudioStreamBuffer","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-stream-buffer"},"next":{"title":"Meta_AudioTrack","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-audio-track"}}');var i=n(74848),t=n(28453);const d={title:"Meta_AudioStream",summary:"A container for AudioStreamBuffer nodes."},a="Meta_AudioStream",o={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Functions",id:"public-functions",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum TransformMode",id:"enum-transformmode",level:3},{value:"Public Functions Documentation",id:"public-functions-documentation",level:2},{value:"Meta_AudioStream",id:"meta_audiostream-1",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"meta_audiostream",children:"Meta_AudioStream"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Module:"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(r.strong,{children:"/"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsx)(r.p,{children:"A container for AudioStreamBuffer nodes."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"#include <meta_audio.hpp>"})}),"\n",(0,i.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"enum"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Volume, Idx_MinimumGain, Idx_MaximumGain, Idx_PositionAtCamera, Idx_TransformMode }"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"enum"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#enum-transformmode",children:"TransformMode"})})," { World, Local }",(0,i.jsx)("br",{}),"Values for Idx_TransformMode."]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#meta_audiostream-1",children:"Meta_AudioStream"})}),"()"]})]})})]}),"\n",(0,i.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Enumerator"}),(0,i.jsx)(r.th,{children:"Value"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Volume"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"Controls the volume of the sound source."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_MinimumGain"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"The minimum gain after any 3D spatial processing (0 to 1)."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_MaximumGain"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"The maximum gain after any 3D spatial processing (0 to 1)."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_PositionAtCamera"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"Whether the position is relative to the user's camera or the scene origin."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_TransformMode"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"Whether to use the world or local transform of the parent."})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"enum-transformmode",children:"enum TransformMode"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Enumerator"}),(0,i.jsx)(r.th,{children:"Value"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"World"}),(0,i.jsx)(r.td,{}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"0"})," - Use the parent assembly world transform to position the audio relative to the listener (Symbols - C: ",(0,i.jsx)(r.code,{children:'"RelativeToWorld"'}),", Lua: ",(0,i.jsx)(r.code,{children:"__AudioSound_RelativeToWorld"}),")"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Local"}),(0,i.jsx)(r.td,{}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"1"})," - Use the parent assembly local transform (Symbols - C: ",(0,i.jsx)(r.code,{children:'"RelativeToLocal"'}),", Lua: ",(0,i.jsx)(r.code,{children:"__AudioSound_RelativeToLocal"}),")"]})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"Values for Idx_TransformMode."}),"\n",(0,i.jsx)(r.h2,{id:"public-functions-documentation",children:"Public Functions Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"meta_audiostream-1",children:"Meta_AudioStream"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:"inline Meta_AudioStream()\n"})})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>a});var s=n(96540);const i={},t=s.createContext(i);function d(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);