"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[5260],{67984:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-render-target","title":"Meta_RenderTarget","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-target.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-target","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-target","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-target.mdx","tags":[],"version":"current","lastUpdatedAt":1730820727000,"frontMatter":{"title":"Meta_RenderTarget"},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_RenderScene","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-scene"},"next":{"title":"Meta_RenderToTexture","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-render-to-texture"}}');var s=r(74848),d=r(28453);const i={title:"Meta_RenderTarget"},c="Meta_RenderTarget",a={},l=[{value:"Public Types",id:"public-types",level:2},{value:"Public Functions",id:"public-functions",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum Attachment",id:"enum-attachment",level:3},{value:"enum CubeMapFace",id:"enum-cubemapface",level:3},{value:"enum IDX",id:"enum-idx",level:3},{value:"Public Functions Documentation",id:"public-functions-documentation",level:2},{value:"Meta_RenderTarget",id:"meta_rendertarget-1",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"meta_rendertarget",children:"Meta_RenderTarget"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Module:"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(t.strong,{children:"/"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-attachment",children:"Attachment"})})," { Depth, Stencil, DepthStencil, Colour }"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-cubemapface",children:"CubeMapFace"})})," { PosX, NegX, PosY, NegY, PosZ, NegZ }"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Attachment, Idx_Texture, Idx_MipLevel, Idx_Layer, Idx_Clear, Idx_ClearValue }"]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#meta_rendertarget-1",children:"Meta_RenderTarget"})}),"()"]})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"enum-attachment",children:"enum Attachment"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Depth"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"equivalent to GL_DEPTH_ATTACHMENT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Stencil"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"equivalent to GL_STENCIL_ATTACHMENT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DepthStencil"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"equivalent to GL_DEPTH_STENCIL_ATTACHMENT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Colour"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"equivalent to GL_COLOR_ATTACHMENT0. Colour+1 is equivalent to GL_COLOR_ATTACHMENT1 and so on up to GPU's maximum supported colour attachments..."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"enum-cubemapface",children:"enum CubeMapFace"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PosX"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"NegX"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PosY"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"NegY"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PosZ"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"NegZ"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Enabled"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Attachment"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"integer attachment number (use Attachment enum for reference)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Texture"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"link to Meta_Texture to render into."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_MipLevel"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"integer mipmap level of texture to render into."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Layer"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"integer texture layer to render into. If Idx_Texture is a cubemap this is the cubemap face to use (use CubeMapFace enum for reference) if Idx_Texture is a 3D texture this is the slice to use. Otherwise ignored."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Clear"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"boolean indicating whether or not the render target should be cleared before rendering into it."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_ClearValue"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"the value to clear the render target to. For a colour attachment this is 4 floats representing colour and alpha."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"public-functions-documentation",children:"Public Functions Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"meta_rendertarget-1",children:"Meta_RenderTarget"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"inline Meta_RenderTarget()\n"})})]})}function o(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var n=r(96540);const s={},d=n.createContext(s);function i(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);