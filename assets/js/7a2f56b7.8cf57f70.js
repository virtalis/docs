"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[21427],{14997:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-frame-prs","title":"Meta_AnimationFramePRS","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-frame-prs.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-frame-prs","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-frame-prs","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-frame-prs.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_AnimationFramePRS","summary":"A PRS frame is a keyframe with a position, rotation and scale at a specified time."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_AnimationAction","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-action"},"next":{"title":"Meta_AnimationLink","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-link"}}');var r=i(74848),s=i(28453);const a={title:"Meta_AnimationFramePRS",summary:"A PRS frame is a keyframe with a position, rotation and scale at a specified time."},o="Meta_AnimationFramePRS",d={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"meta_animationframeprs",children:"Meta_AnimationFramePRS"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Module:"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,r.jsx)(n.strong,{children:"/"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,r.jsx)(n.p,{children:"A PRS frame is a keyframe with a position, rotation and scale at a specified time."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,r.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Name"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"enum"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_RelTime, Idx_Position, Idx_Rotation, Idx_Scale, Idx_Marker }",(0,r.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,r.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Enumerator"}),(0,r.jsx)(n.th,{children:"Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_RelTime"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"float - The time in seconds of this frame relative to its parent animation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Position"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"vec3w - The position of the animation target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Rotation"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"vec3w - The rotation of the animation target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Scale"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"vec3w - The scale of the animation target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Marker"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"link - A temporary solution to keep scene visual highlighting in sync on a cluster"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Property index."})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);