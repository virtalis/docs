"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[9683],{90495:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"visionary-render-programming/reference/lua-api/modules/body","title":"Body","description":"Functions for interacting with bodies.","source":"@site/docs/visionary-render-programming/reference/lua-api/modules/body.mdx","sourceDirName":"visionary-render-programming/reference/lua-api/modules","slug":"/visionary-render-programming/reference/lua-api/modules/body","permalink":"/visionary-render-programming/reference/lua-api/modules/body","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/lua-api/modules/body.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Body","summary":"Functions for interacting with bodies."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Annotations","permalink":"/visionary-render-programming/reference/lua-api/modules/annotations"},"next":{"title":"Core","permalink":"/visionary-render-programming/reference/lua-api/modules/core"}}');var s=n(74848),i=n(28453);const d={title:"Body",summary:"Functions for interacting with bodies."},l="Body",t={},c=[{value:"Functions",id:"functions",level:2},{value:"Functions Documentation",id:"functions-documentation",level:2},{value:"vrBodyAddImpulse",id:"vrbodyaddimpulse",level:3},{value:"vrBodyAddImpulseMouse",id:"vrbodyaddimpulsemouse",level:3},{value:"vrBodyClearImpulse",id:"vrbodyclearimpulse",level:3},{value:"vrBodyConnectView",id:"vrbodyconnectview",level:3},{value:"vrBodyFlyTo",id:"vrbodyflyto",level:3},{value:"vrBodyFlyToFit",id:"vrbodyflytofit",level:3},{value:"vrBodyFlyToFitBounds",id:"vrbodyflytofitbounds",level:3},{value:"vrBodyFlyToFitSphere",id:"vrbodyflytofitsphere",level:3},{value:"vrBodyFlyToLookAt",id:"vrbodyflytolookat",level:3},{value:"vrBodyFlyToWorldPos",id:"vrbodyflytoworldpos",level:3},{value:"vrBodyGetViewConnection",id:"vrbodygetviewconnection",level:3},{value:"vrBodyGetWorldPos",id:"vrbodygetworldpos",level:3},{value:"vrBodyLookAt",id:"vrbodylookat",level:3},{value:"vrBodySetAng",id:"vrbodysetang",level:3},{value:"vrBodySetOrbitPoint",id:"vrbodysetorbitpoint",level:3},{value:"vrBodySetPitch",id:"vrbodysetpitch",level:3},{value:"vrBodySetRoll",id:"vrbodysetroll",level:3},{value:"vrBodySetWorldPos",id:"vrbodysetworldpos",level:3},{value:"vrBodyStepBack",id:"vrbodystepback",level:3},{value:"vrBodyStepForward",id:"vrbodystepforward",level:3},{value:"vrGetBody",id:"vrgetbody",level:3},{value:"vrGetLocalBody",id:"vrgetlocalbody",level:3},{value:"vrPositionAtBody",id:"vrpositionatbody",level:3}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"body",children:"Body"})}),"\n",(0,s.jsx)(r.p,{children:"Functions for interacting with bodies."}),"\n",(0,s.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyaddimpulse",children:"vrBodyAddImpulse"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," position_vector, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," rotation_vector =vec3d::Zero)",(0,s.jsx)("br",{}),"Applies delta to the camera as if the mouse was used to move it."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyaddimpulsemouse",children:"vrBodyAddImpulseMouse"})}),"(number x, number y, string mode =0)",(0,s.jsx)("br",{}),"Moves the camera by simulating mouse movement."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyclearimpulse",children:"vrBodyClearImpulse"})}),"(boolean b)",(0,s.jsx)("br",{}),"Resets the delta of the camera."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyconnectview",children:"vrBodyConnectView"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,s.jsx)("br",{}),"Connects to a users body."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflyto",children:"vrBodyFlyTo"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, number time, boolean immersive =false, boolean addToStack =false)",(0,s.jsx)("br",{}),"Flies the body to the world position of node, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflytofit",children:"vrBodyFlyToFit"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, number time, number fillFraction =CameraFlyManager::Fill_Default, boolean immersive =false, boolean addToStack =false)",(0,s.jsx)("br",{}),"Flies the body to a position where it can see the whole of node from that angle, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflytofitbounds",children:"vrBodyFlyToFitBounds"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, number time, number fillFraction =1.0)",(0,s.jsx)("br",{}),"Flies the body to a position where it can see the whole of node, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflytofitsphere",children:"vrBodyFlyToFitSphere"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," center, number radius, number time, number fillFraction =1.0)",(0,s.jsx)("br",{}),"Flies the body to a position where it can see the whole of a bounding sphere, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflytolookat",children:"vrBodyFlyToLookAt"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node =nil, number time, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," direction)",(0,s.jsx)("br",{}),"Flies the body to a position where it is looking at the selected object from the specified direction, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodyflytoworldpos",children:"vrBodyFlyToWorldPos"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," pos, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," rot, number time, boolean fadeInOut =false, boolean addToStack =false, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,s.jsx)("br",{}),"Flies the body to a specific position and rotation, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodygetviewconnection",children:"vrBodyGetViewConnection"})}),"()",(0,s.jsx)("br",{}),"Returns the object to which the view is currently connected."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/multi",children:"MULTI"}),"< ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"}),", ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," >"]}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodygetworldpos",children:"vrBodyGetWorldPos"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,s.jsx)("br",{}),"Gets the user's body position and rotation."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodylookat",children:"vrBodyLookAt"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," subjectNode, number time)",(0,s.jsx)("br",{}),"Rotates the body so that it is looking at subjectNode, over time seconds."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodysetang",children:"vrBodySetAng"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," direction)",(0,s.jsx)("br",{}),"Sets the orientation of the body."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodysetorbitpoint",children:"vrBodySetOrbitPoint"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," orbit_vector)",(0,s.jsx)("br",{}),"Sets the camera's orbit point."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodysetpitch",children:"vrBodySetPitch"})}),"(number pitch)",(0,s.jsx)("br",{}),"Sets the pitch of the body."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodysetroll",children:"vrBodySetRoll"})}),"(number roll)",(0,s.jsx)("br",{}),"Sets the roll of the body."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodysetworldpos",children:"vrBodySetWorldPos"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," pos, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," rot, ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,s.jsx)("br",{}),"Sets the body position and rotation instantly."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodystepback",children:"vrBodyStepBack"})}),"(number time, boolean fadeInOut)",(0,s.jsx)("br",{}),"Steps back to the previous viewport or camera position."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrbodystepforward",children:"vrBodyStepForward"})}),"(number time, boolean fadeInOut)",(0,s.jsx)("br",{}),"Steps forward to the next viewport or camera position."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrgetbody",children:"vrGetBody"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,s.jsx)("br",{}),"Gets the body currently controlling the user's view."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrgetlocalbody",children:"vrGetLocalBody"})}),"()",(0,s.jsx)("br",{}),"Gets the local body, regardless of any remote connections."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"void"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#vrpositionatbody",children:"vrPositionAtBody"})}),"(",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,s.jsx)("br",{}),"Moves a node to the user's current position and orientation."]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"functions-documentation",children:"Functions Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyaddimpulse",children:"vrBodyAddImpulse"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyAddImpulse(\r\n    vrvec3 position_vector,\r\n    vrvec3 rotation_vector =vec3d::Zero\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Applies delta to the camera as if the mouse was used to move it."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"position_vector"})," Amount of force to apply to positional movement"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"rotation_vector"})," Amount of force to apply to rotation"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyaddimpulsemouse",children:"vrBodyAddImpulseMouse"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyAddImpulseMouse(\r\n    number x,\r\n    number y,\r\n    string mode =0\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Moves the camera by simulating mouse movement."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"x"})," Distance of horizontal mouse movement. Negative values are left, positive are right"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"y"})," Distance of vertical mouse movement. Positive values are up, negative are down"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"mode"})," The mode of mouse control:"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"LOOK"}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"PAN"}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"ORBIT"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyclearimpulse",children:"vrBodyClearImpulse"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyClearImpulse(\r\n    boolean b\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Resets the delta of the camera."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"b"})," Bool whether to apply the reset or not"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyconnectview",children:"vrBodyConnectView"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyConnectView(\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Connects to a users body."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"user"})," The user node to connect to"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflyto",children:"vrBodyFlyTo"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyTo(\r\n    vrnode node,\r\n    number time,\r\n    boolean immersive =false,\r\n    boolean addToStack =false\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to the world position of node, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"immersive"})," Whether or not to apply the immersive flyto animation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"addToStack"})," Whether to add this flyto location to the history for vrBodyStepBack/vrBodyStepForward"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflytofit",children:"vrBodyFlyToFit"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyToFit(\r\n    vrnode node,\r\n    number time,\r\n    number fillFraction =CameraFlyManager::Fill_Default,\r\n    boolean immersive =false,\r\n    boolean addToStack =false\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to a position where it can see the whole of node from that angle, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"node"})," The node to fly to"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"time"})," The number of seconds to fly"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"fillFraction"})," Optional, defines how much of the screen the object will take up. 0.0 to 1.0"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"immersive"})," Whether or not to apply the immersive flyto animation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"addToStack"})," Whether to add this flyto location to the history for vrBodyStepBack/vrBodyStepForward"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflytofitbounds",children:"vrBodyFlyToFitBounds"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyToFitBounds(\r\n    vrnode node,\r\n    number time,\r\n    number fillFraction =1.0\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to a position where it can see the whole of node, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"node"})," The node to fly to"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"time"})," The number of seconds to fly"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"fillFraction"})," Optional, defines how much of the screen the object will take up. 0.0 to 1.0"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflytofitsphere",children:"vrBodyFlyToFitSphere"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyToFitSphere(\r\n    vrvec3 center,\r\n    number radius,\r\n    number time,\r\n    number fillFraction =1.0\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to a position where it can see the whole of a bounding sphere, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"center"})," The centre of the sphere"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"radius"})," The radius of the sphere"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"time"})," The number of seconds to fly"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"fillFraction"})," defines how much of the screen the object will take up. 0.0 to 1.0"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflytolookat",children:"vrBodyFlyToLookAt"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyToLookAt(\r\n    vrnode node =nil,\r\n    number time,\r\n    vrvec3 direction\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to a position where it is looking at the selected object from the specified direction, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"node"})," The node to fly to"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"time"})," The number of seconds to fly"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"direction"})," A unit direction vector in world coordinates"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodyflytoworldpos",children:"vrBodyFlyToWorldPos"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyFlyToWorldPos(\r\n    vrvec3 pos,\r\n    vrvec3 rot,\r\n    number time,\r\n    boolean fadeInOut =false,\r\n    boolean addToStack =false,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Flies the body to a specific position and rotation, over time seconds."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"fadeInOut"})," Whether to fade the view when moving to this location"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"addToStack"})," Whether to add this flyto location to the history for vrBodyStepBack/vrBodyStepForward"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"user"})," User to move (defaults to local user)"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodygetviewconnection",children:"vrBodyGetViewConnection"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"vrnode vrBodyGetViewConnection()\n"})}),"\n",(0,s.jsx)(r.p,{children:"Returns the object to which the view is currently connected."}),"\n",(0,s.jsx)(r.h3,{id:"vrbodygetworldpos",children:"vrBodyGetWorldPos"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"MULTI< vrvec3, vrvec3 > vrBodyGetWorldPos(\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Gets the user's body position and rotation."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"user"})," The user to query (defaults to local user)"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Return"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"User's world position"}),"\n",(0,s.jsx)(r.li,{children:"User's world rotation"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodylookat",children:"vrBodyLookAt"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyLookAt(\r\n    vrnode subjectNode,\r\n    number time\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Rotates the body so that it is looking at subjectNode, over time seconds."}),"\n",(0,s.jsx)(r.h3,{id:"vrbodysetang",children:"vrBodySetAng"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodySetAng(\r\n    vrvec3 direction\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Sets the orientation of the body."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"direction"})," X,Y,Z rotation values in degrees"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodysetorbitpoint",children:"vrBodySetOrbitPoint"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodySetOrbitPoint(\r\n    vrvec3 orbit_vector\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Sets the camera's orbit point."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"orbit_vector"})," The position of the orbit point"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodysetpitch",children:"vrBodySetPitch"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodySetPitch(\r\n    number pitch\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Sets the pitch of the body."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"pitch"})," Pitch in degrees"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodysetroll",children:"vrBodySetRoll"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodySetRoll(\r\n    number roll\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Sets the roll of the body."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"roll"})," Roll in degrees"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodysetworldpos",children:"vrBodySetWorldPos"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodySetWorldPos(\r\n    vrvec3 pos,\r\n    vrvec3 rot,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Sets the body position and rotation instantly."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"pos"})," World position"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"rot"})," World rotation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"user"})," User to move (defaults to local user)"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrbodystepback",children:"vrBodyStepBack"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyStepBack(\r\n    number time,\r\n    boolean fadeInOut\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Steps back to the previous viewport or camera position."}),"\n",(0,s.jsx)(r.h3,{id:"vrbodystepforward",children:"vrBodyStepForward"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrBodyStepForward(\r\n    number time,\r\n    boolean fadeInOut\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Steps forward to the next viewport or camera position."}),"\n",(0,s.jsx)(r.h3,{id:"vrgetbody",children:"vrGetBody"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetBody(\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Gets the body currently controlling the user's view."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"user"})," User's body to get (defaults to local user)"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"vrgetlocalbody",children:"vrGetLocalBody"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetLocalBody()\n"})}),"\n",(0,s.jsx)(r.p,{children:"Gets the local body, regardless of any remote connections."}),"\n",(0,s.jsx)(r.h3,{id:"vrpositionatbody",children:"vrPositionAtBody"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"void vrPositionAtBody(\r\n    vrnode node\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Moves a node to the user's current position and orientation."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"node"})," The node to move"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var o=n(96540);const s={},i=o.createContext(s);function d(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);