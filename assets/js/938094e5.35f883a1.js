"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[19866],{39651:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-link","title":"Meta_TransformLink","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-link.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-link","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-link","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-link.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_TransformLink","summary":"A TransformLink synchronises the transform of the source node onto the target node (and optionally the other way)"},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_TransformLimits","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform-limits"},"next":{"title":"Meta_Transform","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-transform"}}');var s=n(74848),d=n(28453);const t={title:"Meta_TransformLink",summary:"A TransformLink synchronises the transform of the source node onto the target node (and optionally the other way)"},o="Meta_TransformLink",a={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum Idx",id:"enum-idx",level:3},{value:"enum OverrideMode",id:"enum-overridemode",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"meta_transformlink",children:"Meta_TransformLink"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Module:"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(r.strong,{children:"/"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsxs)(r.p,{children:["A TransformLink synchronises the transform of the source node onto the target node (and optionally the other way)  ",(0,s.jsx)(r.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"#include <meta_tracking.hpp>"})}),"\n",(0,s.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enum"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#enum-idx",children:"Idx"})})," { Idx_Enabled, Idx_Source, Idx_Target, Idx_OverrideMode, Idx_PositionOverride, Idx_RotationOverride, Idx_ScaleOverride, Idx_TwoWay, Idx_UpdateOrder, Idx_LocalTransforms }",(0,s.jsx)("br",{}),"Property index."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enum"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#enum-overridemode",children:"OverrideMode"})})," { Override_None = 0, Override_P = 1, Override_R = 2, Override_PR = 3, Override_S = 4, Override_PS = 5, Override_RS = 6, Override_PRS = 7 }",(0,s.jsx)("br",{}),"Values for Idx_OverrideMode."]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"struct Meta_TransformLink;\n"})}),"\n",(0,s.jsx)(r.p,{children:"A TransformLink synchronises the transform of the source node onto the target node (and optionally the other way)"}),"\n",(0,s.jsx)(r.p,{children:"This is usually used to connect assemblies from the scene to some part of the view or avatar."}),"\n",(0,s.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"enum-idx",children:"enum Idx"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Enumerator"}),(0,s.jsx)(r.th,{children:"Value"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Enabled"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - When enabled, the link is active"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Source"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"link - The source node, whose transform will be applied to the target"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Target"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"link - The target node, which receives the transform"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_OverrideMode"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"OverrideMode (int) - Which parts of the transform are overridden"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_PositionOverride"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"vec3w - The position value to apply instead of the source position"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_RotationOverride"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"vec3w - The rotation value to apply instead of the source rotation"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_ScaleOverride"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"vec3w - The scale value to apply instead of the source scale"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_TwoWay"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether the link goes both ways (movement of Target affects Source)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_UpdateOrder"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"int - Determines the order in which all TransformLinks are updated. A lower number means this transform link is applied before any with higher numbers."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_LocalTransforms"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether the transform link applies its transforms to the world position or its local position"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Property index."}),"\n",(0,s.jsx)(r.h3,{id:"enum-overridemode",children:"enum OverrideMode"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Enumerator"}),(0,s.jsx)(r.th,{children:"Value"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_None"}),(0,s.jsx)(r.td,{children:"0"}),(0,s.jsxs)(r.td,{children:["Don't override any part of the transform (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverrideNone"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverrideNone"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_P"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsxs)(r.td,{children:["Override the position (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverridePosition"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverridePosition"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_R"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsxs)(r.td,{children:["Override the rotation (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverrideRotation"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverrideRotation"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_PR"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsxs)(r.td,{children:["Override the position and rotation (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverridePositionRotation"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverridePositionRotation"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_S"}),(0,s.jsx)(r.td,{children:"4"}),(0,s.jsxs)(r.td,{children:["Override the scale (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverrideScale"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverrideScale"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_PS"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsxs)(r.td,{children:["Override the position and scale (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverridePositionScale"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverridePositionScale"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_RS"}),(0,s.jsx)(r.td,{children:"6"}),(0,s.jsxs)(r.td,{children:["Override the rotation and scale (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverrideRotationScale"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverrideRotationScale"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Override_PRS"}),(0,s.jsx)(r.td,{children:"7"}),(0,s.jsxs)(r.td,{children:["Override the position, rotation, and scale (Symbols - C: ",(0,s.jsx)(r.code,{children:'"OverridePositionRotationScale"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__TransformLink_OverridePositionRotationScale"}),")"]})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Values for Idx_OverrideMode."})]})}function h(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>o});var i=n(96540);const s={},d=i.createContext(s);function t(e){const r=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(d.Provider,{value:r},e.children)}}}]);