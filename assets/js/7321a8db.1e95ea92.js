"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[9599],{90897:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-mesh","title":"Meta_Mesh","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-mesh.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-mesh","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-mesh","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-mesh.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_Mesh","summary":"A Mesh is a collection of vertices and lists which can be rendered as a polyhedral object."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_MeasuringPoint","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-measuring-point"},"next":{"title":"Meta_MessageQueue","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-message-queue"}}');var t=r(74848),i=r(28453);const a={title:"Meta_Mesh",summary:"A Mesh is a collection of vertices and lists which can be rendered as a polyhedral object."},d="Meta_Mesh",c={},o=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"meta_mesh",children:"Meta_Mesh"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Module:"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,t.jsx)(n.strong,{children:"/"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,t.jsxs)(n.p,{children:["A Mesh is a collection of vertices and lists which can be rendered as a polyhedral object.  ",(0,t.jsx)(n.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,t.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Name"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"enum"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_NeedsTexCoords, Idx_NeedsTangents, Idx_DrawTangentBasis }",(0,t.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"struct Meta_Mesh;\n"})}),"\n",(0,t.jsx)(n.p,{children:"A Mesh is a collection of vertices and lists which can be rendered as a polyhedral object."}),"\n",(0,t.jsxs)(n.p,{children:["Each Mesh node contains data about the mesh stored in ",(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-vertex-attrib",children:"Meta_VertexAttrib"})," and ",(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-index-prim",children:"Meta_IndexPrim"})," nodes; vertices, indices, normals, texture coordinates, etc."]}),"\n",(0,t.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Enumerator"}),(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_Enabled"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"bool - When enabled, the mesh can be rendered"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_NeedsTexCoords"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"bool - When enabled, UV coordinates are automatically generated internally if none are provided"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_NeedsTangents"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"bool - When enabled, Tangents are automatically generated internally if none are provided"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_DrawTangentBasis"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"bool - When enabled, tangent basis vectors (normals and/or tangents and/or bitangents) are drawn for informational/debugging purposes"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Property index."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var s=r(96540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);