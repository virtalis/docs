"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[88313],{75807:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"visionary-render-programming/reference/lua-api/modules/maths","title":"Maths","description":"Maths functions and types that can be used by Lua scripts and plugins.","source":"@site/docs/visionary-render-programming/reference/lua-api/modules/maths.mdx","sourceDirName":"visionary-render-programming/reference/lua-api/modules","slug":"/visionary-render-programming/reference/lua-api/modules/maths","permalink":"/visionary-render-programming/reference/lua-api/modules/maths","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/lua-api/modules/maths.mdx","tags":[],"version":"current","lastUpdatedAt":1741279868000,"frontMatter":{"title":"Maths","summary":"Maths functions and types that can be used by Lua scripts and plugins."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"GUI","permalink":"/visionary-render-programming/reference/lua-api/modules/gui"},"next":{"title":"Metanodes","permalink":"/visionary-render-programming/reference/lua-api/modules/metanodes"}}');var i=n(74848),a=n(28453);const l={title:"Maths",summary:"Maths functions and types that can be used by Lua scripts and plugins."},t="Maths",c={},d=[{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Functions Documentation",id:"functions-documentation",level:2},{value:"vrAABox",id:"vraabox",level:3},{value:"vrAABoxExtent",id:"vraaboxextent",level:3},{value:"vrAABoxMerge",id:"vraaboxmerge",level:3},{value:"vrAABoxPosAndSize",id:"vraaboxposandsize",level:3},{value:"vrAABoxTransform",id:"vraaboxtransform",level:3},{value:"vrAngleRadians",id:"vrangleradians",level:3},{value:"vrApplyForce",id:"vrapplyforce",level:3},{value:"vrApproxEquals",id:"vrapproxequals",level:3},{value:"vrArcLength",id:"vrarclength",level:3},{value:"vrArcRadius",id:"vrarcradius",level:3},{value:"vrAssemblyLookAt",id:"vrassemblylookat",level:3},{value:"vrBitsToInteger",id:"vrbitstointeger",level:3},{value:"vrCopy",id:"vrcopy",level:3},{value:"vrCross",id:"vrcross",level:3},{value:"vrDot",id:"vrdot",level:3},{value:"vrGetForwardVec",id:"vrgetforwardvec",level:3},{value:"vrGetOwnerNode",id:"vrgetownernode",level:3},{value:"vrHSV2RGB",id:"vrhsv2rgb",level:3},{value:"vrIntegerToBits",id:"vrintegertobits",level:3},{value:"vrIsDoublePrecision",id:"vrisdoubleprecision",level:3},{value:"vrLength",id:"vrlength",level:3},{value:"vrLengthSquared",id:"vrlengthsquared",level:3},{value:"vrMat3",id:"vrmat3",level:3},{value:"vrMat4",id:"vrmat4",level:3},{value:"vrMat4Frustum",id:"vrmat4frustum",level:3},{value:"vrMat4Ortho",id:"vrmat4ortho",level:3},{value:"vrMat4Ortho2D",id:"vrmat4ortho2d",level:3},{value:"vrMatDeterminant",id:"vrmatdeterminant",level:3},{value:"vrMatGetValue",id:"vrmatgetvalue",level:3},{value:"vrMatInverse",id:"vrmatinverse",level:3},{value:"vrMatOrthoNormalise",id:"vrmatorthonormalise",level:3},{value:"vrMatRotateEulerX",id:"vrmatrotateeulerx",level:3},{value:"vrMatRotateEulerY",id:"vrmatrotateeulery",level:3},{value:"vrMatRotateEulerZ",id:"vrmatrotateeulerz",level:3},{value:"vrMatScale",id:"vrmatscale",level:3},{value:"vrMatSetValue",id:"vrmatsetvalue",level:3},{value:"vrMatToString",id:"vrmattostring",level:3},{value:"vrMatTranslate",id:"vrmattranslate",level:3},{value:"vrMatTranspose",id:"vrmattranspose",level:3},{value:"vrNormalise",id:"vrnormalise",level:3},{value:"vrPlane",id:"vrplane",level:3},{value:"vrPlaneFromMatrix",id:"vrplanefrommatrix",level:3},{value:"vrPlaneFromTriangle",id:"vrplanefromtriangle",level:3},{value:"vrPlaneGetPointDistance",id:"vrplanegetpointdistance",level:3},{value:"vrPlaneLineIntersect",id:"vrplanelineintersect",level:3},{value:"vrPlaneRayIntersect",id:"vrplanerayintersect",level:3},{value:"vrPlaneTransform",id:"vrplanetransform",level:3},{value:"vrPolarToDegrees",id:"vrpolartodegrees",level:3},{value:"vrPolarToRadians",id:"vrpolartoradians",level:3},{value:"vrProjInvTransformVec",id:"vrprojinvtransformvec",level:3},{value:"vrProjTransformVec",id:"vrprojtransformvec",level:3},{value:"vrQuaternion",id:"vrquaternion",level:3},{value:"vrQuaternionDot",id:"vrquaterniondot",level:3},{value:"vrQuaternionFromAxisAngle",id:"vrquaternionfromaxisangle",level:3},{value:"vrQuaternionFromEulerAngles",id:"vrquaternionfromeulerangles",level:3},{value:"vrQuaternionFromMat",id:"vrquaternionfrommat",level:3},{value:"vrQuaternionLerp",id:"vrquaternionlerp",level:3},{value:"vrQuaternionSlerp",id:"vrquaternionslerp",level:3},{value:"vrRay",id:"vrray",level:3},{value:"vrSmoothStep",id:"vrsmoothstep",level:3},{value:"vrSphere",id:"vrsphere",level:3},{value:"vrSphereMerge",id:"vrspheremerge",level:3},{value:"vrSphereTransform",id:"vrspheretransform",level:3},{value:"vrSuspendDynamics",id:"vrsuspenddynamics",level:3},{value:"vrTestContain",id:"vrtestcontain",level:3},{value:"vrTestIntersection",id:"vrtestintersection",level:3},{value:"vrTransformVecByWorldRotation",id:"vrtransformvecbyworldrotation",level:3},{value:"vrVec2",id:"vrvec2",level:3},{value:"vrVec3",id:"vrvec3",level:3},{value:"vrVec4",id:"vrvec4",level:3},{value:"vrViewInvTransformVec",id:"vrviewinvtransformvec",level:3},{value:"vrViewTransformVec",id:"vrviewtransformvec",level:3}];function o(r){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...r.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"maths",children:"Maths"})}),"\n",(0,i.jsx)(e.p,{children:"Maths functions and types that can be used by Lua scripts and plugins."}),"\n",(0,i.jsx)(e.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Name"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})})," ",(0,i.jsx)("br",{}),"A box."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix3",children:"vrmatrix3"})})," ",(0,i.jsx)("br",{}),"A matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})})," ",(0,i.jsx)("br",{}),"A matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})})," ",(0,i.jsx)("br",{}),"A plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})})," ",(0,i.jsx)("br",{}),"A quaternion."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrray",children:"vrray"})})," ",(0,i.jsx)("br",{}),"A ray."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrsphere",children:"vrsphere"})})," ",(0,i.jsx)("br",{}),"A sphere."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec2",children:"vrvec2"})})," ",(0,i.jsx)("br",{}),"A vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})})," ",(0,i.jsx)("br",{}),"A vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"struct"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec4",children:"vrvec4"})})," ",(0,i.jsx)("br",{}),"A vector."]})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Name"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vraabox",children:"vrAABox"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," min, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," max)",(0,i.jsx)("br",{}),"Construct an axis aligned bounding box."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vraaboxextent",children:"vrAABoxExtent"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})," box)",(0,i.jsx)("br",{}),"Returns the largest dimension of an axis aligned bounding box."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vraaboxmerge",children:"vrAABoxMerge"})}),"(Any l, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})," r)",(0,i.jsx)("br",{}),"Returns an axis aligned bounding box that contains two other bounding boxes."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vraaboxposandsize",children:"vrAABoxPosAndSize"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," pos, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," size)",(0,i.jsx)("br",{}),"Construct an axis aligned bounding box, using a position and a size."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vraaboxtransform",children:"vrAABoxTransform"})}),"(Any box, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})," matrix)",(0,i.jsx)("br",{}),"Returns an axis aligned bounding box transformed by a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrangleradians",children:"vrAngleRadians"})}),"(number arcLength, number radius)",(0,i.jsx)("br",{}),"Calculates the angle of an arc in radians."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrapplyforce",children:"vrApplyForce"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," force, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," relPos, number duration)",(0,i.jsx)("br",{}),"Applies a force to an object causing a dynamics response."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrapproxequals",children:"vrApproxEquals"})}),"(Any left, Any right, number prec =0.0)",(0,i.jsx)("br",{}),"Returns whether or not two items are approximately equal."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrarclength",children:"vrArcLength"})}),"(number angleRadians, number radius)",(0,i.jsx)("br",{}),"Calculates the length of an arc."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrarcradius",children:"vrArcRadius"})}),"(number arcLength, number angleRadians)",(0,i.jsx)("br",{}),"Calculates the radius of an arc."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"void"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrassemblylookat",children:"vrAssemblyLookAt"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," assembly, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," eyePos, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," lookAtPos, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," upVec)",(0,i.jsx)("br",{}),"Rotates the assembly so that it is looking at the given position."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrbitstointeger",children:"vrBitsToInteger"})}),"(boolean ... )",(0,i.jsx)("br",{}),"Converts boolean values to an integer."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Any"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrcopy",children:"vrCopy"})}),"(Any c)",(0,i.jsx)("br",{}),"Returns a copy of a Vector, Matrix, Ray, Sphere, AABBox, Quaternion or Plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrcross",children:"vrCross"})}),"(Any vec1, Any vec2)",(0,i.jsx)("br",{}),"Returns the cross product of two vectors. Both vectors must be the same type."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrdot",children:"vrDot"})}),"(Any vec1, Any vec2)",(0,i.jsx)("br",{}),"Returns the dot product of two vectors. Both vectors must be the same type."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrgetforwardvec",children:"vrGetForwardVec"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportNode =nil)",(0,i.jsx)("br",{}),"Extracts the forward vector from the inverse of the current view matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrgetownernode",children:"vrGetOwnerNode"})}),"(Any c)",(0,i.jsx)("br",{}),"Get the node that owns this Vector, Matrix, Ray, Sphere, AABBox, Quaternion or Plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrhsv2rgb",children:"vrHSV2RGB"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," hsvColour)",(0,i.jsx)("br",{}),"Converts a HSV coiour (vec3f) to an RGB colour (vec3f)"]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrintegertobits",children:"vrIntegerToBits"})}),"(number i)",(0,i.jsx)("br",{}),"Converts an integer to a boolean value for each bit."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrisdoubleprecision",children:"vrIsDoublePrecision"})}),"()",(0,i.jsx)("br",{}),"Returns true if the scenegraph uses double precision values for matrices etc."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrlength",children:"vrLength"})}),"(Any vec)",(0,i.jsx)("br",{}),"Returns the length of a vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrlengthsquared",children:"vrLengthSquared"})}),"(Any vec)",(0,i.jsx)("br",{}),"Returns the squared length of a vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix3",children:"vrmatrix3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmat3",children:"vrMat3"})}),"()",(0,i.jsx)("br",{}),"Return an identity 3x3 Matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmat4",children:"vrMat4"})}),"()",(0,i.jsx)("br",{}),"Return an identity 4x4 Matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmat4frustum",children:"vrMat4Frustum"})}),"(number left, number right, number bottom, number top, number nearval, number farval, number focalval)",(0,i.jsx)("br",{}),"Return a frustum projection matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmat4ortho",children:"vrMat4Ortho"})}),"(number left, number right, number bottom, number top, number nearval, number farval)",(0,i.jsx)("br",{}),"Return an orthographic projection matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmat4ortho2d",children:"vrMat4Ortho2D"})}),"(number left, number right, number bottom, number top)",(0,i.jsx)("br",{}),"Return a 2D orthographic projection matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatdeterminant",children:"vrMatDeterminant"})}),"(Any m)",(0,i.jsx)("br",{}),"Returns the determinant of the matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatgetvalue",children:"vrMatGetValue"})}),"(Any m, number x, number y)",(0,i.jsx)("br",{}),"Get the value of an element of a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatinverse",children:"vrMatInverse"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})," m)",(0,i.jsx)("br",{}),"Returns the inverse of a 4x4 matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Any"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatorthonormalise",children:"vrMatOrthoNormalise"})}),"(Any m)",(0,i.jsx)("br",{}),"Returns an orthogonal matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatrotateeulerx",children:"vrMatRotateEulerX"})}),"(Any m, number v)",(0,i.jsx)("br",{}),"Return M rotated on the X axis by angle V."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatrotateeulery",children:"vrMatRotateEulerY"})}),"(Any m, number v)",(0,i.jsx)("br",{}),"Return M rotated on the Y axis by angle V."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatrotateeulerz",children:"vrMatRotateEulerZ"})}),"(Any m, number v)",(0,i.jsx)("br",{}),"Return M rotated on the Z axis by angle V."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatscale",children:"vrMatScale"})}),"(Any m, Any v)",(0,i.jsx)("br",{}),"Return M scaled by vector V. If V is a scalar then a vector in which x=v, y=v, z=v will be used."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"void"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmatsetvalue",children:"vrMatSetValue"})}),"(Any m, number x, number y, number v)",(0,i.jsx)("br",{}),"Set the value of an element of a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"string"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmattostring",children:"vrMatToString"})}),"(Any m)",(0,i.jsx)("br",{}),"Get a string representation of a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmattranslate",children:"vrMatTranslate"})}),"(Any m, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," v)",(0,i.jsx)("br",{}),"Return M translated by the vector V."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Any"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrmattranspose",children:"vrMatTranspose"})}),"(Any m)",(0,i.jsx)("br",{}),"Returns the tranpose of a 3x3 matrix, or a 4x4 matrix with the 3x3 component transposed."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Any"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrnormalise",children:"vrNormalise"})}),"(Any c)",(0,i.jsx)("br",{}),"Returns normalised vector/matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplane",children:"vrPlane"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," normal, number distance)",(0,i.jsx)("br",{}),"Returns a plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanefrommatrix",children:"vrPlaneFromMatrix"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})," mat)",(0,i.jsx)("br",{}),"Returns a plane created from a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanefromtriangle",children:"vrPlaneFromTriangle"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point1, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point2, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point3)",(0,i.jsx)("br",{}),"Returns a plane created from a triangle defined by 3 points."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanegetpointdistance",children:"vrPlaneGetPointDistance"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})," plane, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point)",(0,i.jsx)("br",{}),"Returns the distance a point is from the plane. A negative value means that the point is behind the plane. A positive value means the point is in front. A zero means it is on the plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanelineintersect",children:"vrPlaneLineIntersect"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})," plane, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point1, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," point2)",(0,i.jsx)("br",{}),"Returns whether or not a line made of two points will intersect a plane."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanerayintersect",children:"vrPlaneRayIntersect"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})," plane, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrray",children:"vrray"})," ray)",(0,i.jsx)("br",{}),"Returns how far along the ray an intersection point with this plane is."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrplane",children:"vrplane"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrplanetransform",children:"vrPlaneTransform"})}),"(Any plane, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})," mat)",(0,i.jsx)("br",{}),"Returns a plane transformed by a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"void"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrpolartodegrees",children:"vrPolarToDegrees"})}),"(number degrees, number minutes, number seconds)",(0,i.jsx)("br",{}),"Convert polar coordinates to degrees."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrpolartoradians",children:"vrPolarToRadians"})}),"(number degrees, number minutes, number seconds)",(0,i.jsx)("br",{}),"Convert polar coordinates to radians."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrprojinvtransformvec",children:"vrProjInvTransformVec"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," vec, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportNode =nil)",(0,i.jsx)("br",{}),"Transforms a vector by the inverse of the current projection matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrprojtransformvec",children:"vrProjTransformVec"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," vec, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportNode =nil)",(0,i.jsx)("br",{}),"Transforms a vector by the current projection matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternion",children:"vrQuaternion"})}),"()",(0,i.jsx)("br",{}),"Return an identity quaternion."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaterniondot",children:"vrQuaternionDot"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," l, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," r)",(0,i.jsx)("br",{}),"Returns the dot product of two quaternions."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternionfromaxisangle",children:"vrQuaternionFromAxisAngle"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," axis, number angle)",(0,i.jsx)("br",{}),"Return a quaternion constructed from a rotation around an axis."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternionfromeulerangles",children:"vrQuaternionFromEulerAngles"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," angles)",(0,i.jsx)("br",{}),"Return a quaternion constructed from euler angles."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternionfrommat",children:"vrQuaternionFromMat"})}),"(Any m)",(0,i.jsx)("br",{}),"Returns a quaternion constructed from a 4x4 matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternionlerp",children:"vrQuaternionLerp"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," l, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," r, number d)",(0,i.jsx)("br",{}),"Returns the linear interpolation between two quaternions."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrquaternionslerp",children:"vrQuaternionSlerp"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," l, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrquaternion",children:"vrquaternion"})," r, number d)",(0,i.jsx)("br",{}),"Returns the spherical interpolation between two quaternions."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrray",children:"vrray"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrray",children:"vrRay"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," origin, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," dir)",(0,i.jsx)("br",{}),"Returns a ray."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"number"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrsmoothstep",children:"vrSmoothStep"})}),"(number a, number b, number x)",(0,i.jsx)("br",{}),"Return a smoothly interpolated value between A and B."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrsphere",children:"vrsphere"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrsphere",children:"vrSphere"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," position, number radius)",(0,i.jsx)("br",{}),"Returns a sphere."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrsphere",children:"vrsphere"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrspheremerge",children:"vrSphereMerge"})}),"(Any left, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrsphere",children:"vrsphere"})," right)",(0,i.jsx)("br",{}),"Returns a sphere that encapsulates two spheres."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrsphere",children:"vrsphere"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrspheretransform",children:"vrSphereTransform"})}),"(Any sphere, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrmatrix4",children:"vrmatrix4"})," matrix)",(0,i.jsx)("br",{}),"Returns a sphere transformed by a matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"void"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrsuspenddynamics",children:"vrSuspendDynamics"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, boolean onOff)",(0,i.jsx)("br",{}),"Enables or disables dynamics."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrtestcontain",children:"vrTestContain"})}),"(Any a, Any b)",(0,i.jsx)("br",{}),"Returns whether or object A completly contains object B."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"boolean"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrtestintersection",children:"vrTestIntersection"})}),"(Any a, Any b)",(0,i.jsx)("br",{}),"Returns whether or not two objects are intersecting one another."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrtransformvecbyworldrotation",children:"vrTransformVecByWorldRotation"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," vec)",(0,i.jsx)("br",{}),"Transforms a vector by the world rotation of the node."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"vec2"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrvec2",children:"vrVec2"})}),"(number x =0.0, number y =0.0)",(0,i.jsx)("br",{}),"Returns a 2 dimensional vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrvec3",children:"vrVec3"})}),"(number x =0.0, number y =0.0, number z =0.0)",(0,i.jsx)("br",{}),"Returns a 3 dimensional vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec4",children:"vrvec4"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrvec4",children:"vrVec4"})}),"(number x =0.0, number y =0.0, number z =0.0, number w =0.0)",(0,i.jsx)("br",{}),"Returns a 4 dimensional vector."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrviewinvtransformvec",children:"vrViewInvTransformVec"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," vec, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportNode =nil)",(0,i.jsx)("br",{}),"Transforms a vector by the inverse of the current view matrix."]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"#vrviewtransformvec",children:"vrViewTransformVec"})}),"(",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})," vec, ",(0,i.jsx)(e.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportNode =nil)",(0,i.jsx)("br",{}),"Transforms a vector by the current view matrix."]})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"functions-documentation",children:"Functions Documentation"}),"\n",(0,i.jsx)(e.h3,{id:"vraabox",children:"vrAABox"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrbox vrAABox(\r\n    vrvec3 min,\r\n    vrvec3 max\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Construct an axis aligned bounding box."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"min"})," The minimum value of the bounding box."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"max"})," The maximum value of the bounding box."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": A new box enclosing the min/max points"]}),"\n",(0,i.jsx)(e.h3,{id:"vraaboxextent",children:"vrAABoxExtent"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrAABoxExtent(\r\n    vrbox box\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the largest dimension of an axis aligned bounding box."}),"\n",(0,i.jsx)(e.h3,{id:"vraaboxmerge",children:"vrAABoxMerge"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrbox vrAABoxMerge(\r\n    Any l,\r\n    vrbox r\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns an axis aligned bounding box that contains two other bounding boxes."}),"\n",(0,i.jsx)(e.h3,{id:"vraaboxposandsize",children:"vrAABoxPosAndSize"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrbox vrAABoxPosAndSize(\r\n    vrvec3 pos,\r\n    vrvec3 size\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Construct an axis aligned bounding box, using a position and a size."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"pos"})," The position of the bounding box."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"size"})," The size of the bounding box."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": A new box enclosing the pos/size points"]}),"\n",(0,i.jsx)(e.h3,{id:"vraaboxtransform",children:"vrAABoxTransform"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrbox vrAABoxTransform(\r\n    Any box,\r\n    vrmatrix4 matrix\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns an axis aligned bounding box transformed by a matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrangleradians",children:"vrAngleRadians"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrAngleRadians(\r\n    number arcLength,\r\n    number radius\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Calculates the angle of an arc in radians."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"arcLength"})," The length of the arc"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"radius"})," The radius of the circle"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": The angle"]}),"\n",(0,i.jsx)(e.h3,{id:"vrapplyforce",children:"vrApplyForce"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrnode vrApplyForce(\r\n    vrnode node,\r\n    vrvec3 force,\r\n    vrvec3 relPos,\r\n    number duration\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Applies a force to an object causing a dynamics response."}),"\n",(0,i.jsx)(e.h3,{id:"vrapproxequals",children:"vrApproxEquals"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrApproxEquals(\r\n    Any left,\r\n    Any right,\r\n    number prec =0.0\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns whether or not two items are approximately equal."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"prec"})," Override the default epsilon value used for comparing floating point values"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrarclength",children:"vrArcLength"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrArcLength(\r\n    number angleRadians,\r\n    number radius\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Calculates the length of an arc."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"angleRadians"})," The angle to measure"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"radius"})," The radius of the circle"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": The length"]}),"\n",(0,i.jsx)(e.h3,{id:"vrarcradius",children:"vrArcRadius"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrArcRadius(\r\n    number arcLength,\r\n    number angleRadians\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Calculates the radius of an arc."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"arcLength"})," The length of the arc"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"angleRadians"})," The angle of the arc"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": The radius"]}),"\n",(0,i.jsx)(e.h3,{id:"vrassemblylookat",children:"vrAssemblyLookAt"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"void vrAssemblyLookAt(\r\n    vrnode assembly,\r\n    vrvec3 eyePos,\r\n    vrvec3 lookAtPos,\r\n    vrvec3 upVec\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Rotates the assembly so that it is looking at the given position."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"eyePos"})," New position for the assembly"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"lookAtPos"})," Position the assembly is looking at along it's Z axis"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"upVec"})," World up vector"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrbitstointeger",children:"vrBitsToInteger"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrBitsToInteger(\r\n    boolean ... \r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Converts boolean values to an integer."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"..."})," Values (1 or 0, or true or false) that make up the bit field."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": Integer composed of the individual bits provided"]}),"\n",(0,i.jsx)(e.h3,{id:"vrcopy",children:"vrCopy"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"Any vrCopy(\r\n    Any c\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a copy of a Vector, Matrix, Ray, Sphere, AABBox, Quaternion or Plane."}),"\n",(0,i.jsx)(e.h3,{id:"vrcross",children:"vrCross"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrCross(\r\n    Any vec1,\r\n    Any vec2\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the cross product of two vectors. Both vectors must be the same type."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec1"})," Vector 1 {x, y} or {x, y, z}."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec2"})," Vector 2 {x, y} or {x, y, z}."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrdot",children:"vrDot"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrDot(\r\n    Any vec1,\r\n    Any vec2\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the dot product of two vectors. Both vectors must be the same type."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec1"})," Vector 1 {x, y} or {x, y, z}."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec2"})," Vector 2 {x, y} or {x, y, z}."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrgetforwardvec",children:"vrGetForwardVec"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrGetForwardVec(\r\n    vrnode viewportNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Extracts the forward vector from the inverse of the current view matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"viewportNode"})," Viewport to get the view matrix from (defaults to local user's default viewport)"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrgetownernode",children:"vrGetOwnerNode"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrnode vrGetOwnerNode(\r\n    Any c\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Get the node that owns this Vector, Matrix, Ray, Sphere, AABBox, Quaternion or Plane."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": The owner of this data (the node that will be affected by changes to its data)"]}),"\n",(0,i.jsx)(e.h3,{id:"vrhsv2rgb",children:"vrHSV2RGB"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrHSV2RGB(\r\n    vrvec3 hsvColour\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Converts a HSV coiour (vec3f) to an RGB colour (vec3f)"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"hsvColour"})," The input colour in HSV"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrintegertobits",children:"vrIntegerToBits"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrIntegerToBits(\r\n    number i\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Converts an integer to a boolean value for each bit."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"i"})," The integer to split into bits"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": 32 bools, one for each bit in the number"]}),"\n",(0,i.jsx)(e.h3,{id:"vrisdoubleprecision",children:"vrIsDoublePrecision"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrIsDoublePrecision()\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns true if the scenegraph uses double precision values for matrices etc."}),"\n",(0,i.jsx)(e.h3,{id:"vrlength",children:"vrLength"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrLength(\r\n    Any vec\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the length of a vector."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec"})," Vector {x, y} or {x, y, z}."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrlengthsquared",children:"vrLengthSquared"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrLengthSquared(\r\n    Any vec\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the squared length of a vector."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"vec"})," Vector {x, y} or {x, y, z}."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmat3",children:"vrMat3"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix3 vrMat3()\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return an identity 3x3 Matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrmat4",children:"vrMat4"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMat4()\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return an identity 4x4 Matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrmat4frustum",children:"vrMat4Frustum"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMat4Frustum(\r\n    number left,\r\n    number right,\r\n    number bottom,\r\n    number top,\r\n    number nearval,\r\n    number farval,\r\n    number focalval\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return a frustum projection matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrmat4ortho",children:"vrMat4Ortho"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMat4Ortho(\r\n    number left,\r\n    number right,\r\n    number bottom,\r\n    number top,\r\n    number nearval,\r\n    number farval\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return an orthographic projection matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrmat4ortho2d",children:"vrMat4Ortho2D"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMat4Ortho2D(\r\n    number left,\r\n    number right,\r\n    number bottom,\r\n    number top\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return a 2D orthographic projection matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrmatdeterminant",children:"vrMatDeterminant"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrMatDeterminant(\r\n    Any m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the determinant of the matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to get the determinant of."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatgetvalue",children:"vrMatGetValue"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrMatGetValue(\r\n    Any m,\r\n    number x,\r\n    number y\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Get the value of an element of a matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to select the element from"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," The column of the element to select."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"y"})," The row of the element to select."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatinverse",children:"vrMatInverse"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatInverse(\r\n    vrmatrix4 m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the inverse of a 4x4 matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to take the inverse of."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatorthonormalise",children:"vrMatOrthoNormalise"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"Any vrMatOrthoNormalise(\r\n    Any m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns an orthogonal matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to orthonormalise."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": Orthogonal mat3 or mat4 depending on the type passed in"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatrotateeulerx",children:"vrMatRotateEulerX"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatRotateEulerX(\r\n    Any m,\r\n    number v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return M rotated on the X axis by angle V."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to rotate."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The angle to rotate M by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatrotateeulery",children:"vrMatRotateEulerY"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatRotateEulerY(\r\n    Any m,\r\n    number v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return M rotated on the Y axis by angle V."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to rotate."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The angle to rotate M by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatrotateeulerz",children:"vrMatRotateEulerZ"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatRotateEulerZ(\r\n    Any m,\r\n    number v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return M rotated on the Z axis by angle V."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to rotate."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The angle to rotate M by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatscale",children:"vrMatScale"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatScale(\r\n    Any m,\r\n    Any v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return M scaled by vector V. If V is a scalar then a vector in which x=v, y=v, z=v will be used."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to scale."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The vector or scalar to scale M by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmatsetvalue",children:"vrMatSetValue"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"void vrMatSetValue(\r\n    Any m,\r\n    number x,\r\n    number y,\r\n    number v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Set the value of an element of a matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix of whose elements to set."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," The column of the element to select."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"y"})," The row of the element to select."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The value to set the element."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmattostring",children:"vrMatToString"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"string vrMatToString(\r\n    Any m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Get a string representation of a matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to stringify"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmattranslate",children:"vrMatTranslate"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrmatrix4 vrMatTranslate(\r\n    Any m,\r\n    vrvec3 v\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return M translated by the vector V."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to translate."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"v"})," The vector to translate the matrix by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrmattranspose",children:"vrMatTranspose"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"Any vrMatTranspose(\r\n    Any m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the tranpose of a 3x3 matrix, or a 4x4 matrix with the 3x3 component transposed."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to take the transpose of."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": vrmat3 or vrmat4 depending on the type passed in"]}),"\n",(0,i.jsx)(e.h3,{id:"vrnormalise",children:"vrNormalise"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"Any vrNormalise(\r\n    Any c\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns normalised vector/matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"c"})," Vector2 or Vector3 or Mat3 or Mat4"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": Normalised vector or matrix depending on the type passed in"]}),"\n",(0,i.jsx)(e.h3,{id:"vrplane",children:"vrPlane"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrplane vrPlane(\r\n    vrvec3 normal,\r\n    number distance\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a plane."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"normal"})," The normal of the plane."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"distance"})," The distance from origin."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrplanefrommatrix",children:"vrPlaneFromMatrix"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrplane vrPlaneFromMatrix(\r\n    vrmatrix4 mat\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a plane created from a matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrplanefromtriangle",children:"vrPlaneFromTriangle"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrplane vrPlaneFromTriangle(\r\n    vrvec3 point1,\r\n    vrvec3 point2,\r\n    vrvec3 point3\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a plane created from a triangle defined by 3 points."}),"\n",(0,i.jsx)(e.h3,{id:"vrplanegetpointdistance",children:"vrPlaneGetPointDistance"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrPlaneGetPointDistance(\r\n    vrplane plane,\r\n    vrvec3 point\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the distance a point is from the plane. A negative value means that the point is behind the plane. A positive value means the point is in front. A zero means it is on the plane."}),"\n",(0,i.jsx)(e.h3,{id:"vrplanelineintersect",children:"vrPlaneLineIntersect"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrPlaneLineIntersect(\r\n    vrplane plane,\r\n    vrvec3 point1,\r\n    vrvec3 point2\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns whether or not a line made of two points will intersect a plane."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": true if the line intersects the plane"]}),"\n",(0,i.jsx)(e.h3,{id:"vrplanerayintersect",children:"vrPlaneRayIntersect"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrPlaneRayIntersect(\r\n    vrplane plane,\r\n    vrray ray\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns how far along the ray an intersection point with this plane is."}),"\n",(0,i.jsx)(e.h3,{id:"vrplanetransform",children:"vrPlaneTransform"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrplane vrPlaneTransform(\r\n    Any plane,\r\n    vrmatrix4 mat\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a plane transformed by a matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrpolartodegrees",children:"vrPolarToDegrees"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"void vrPolarToDegrees(\r\n    number degrees,\r\n    number minutes,\r\n    number seconds\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Convert polar coordinates to degrees."}),"\n",(0,i.jsx)(e.h3,{id:"vrpolartoradians",children:"vrPolarToRadians"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrPolarToRadians(\r\n    number degrees,\r\n    number minutes,\r\n    number seconds\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Convert polar coordinates to radians."}),"\n",(0,i.jsx)(e.h3,{id:"vrprojinvtransformvec",children:"vrProjInvTransformVec"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrProjInvTransformVec(\r\n    vrvec3 vec,\r\n    vrnode viewportNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Transforms a vector by the inverse of the current projection matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"viewportNode"})," Viewport to get the projection matrix from (defaults to local user's default viewport)"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrprojtransformvec",children:"vrProjTransformVec"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrProjTransformVec(\r\n    vrvec3 vec,\r\n    vrnode viewportNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Transforms a vector by the current projection matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"viewportNode"})," Viewport to get the projection matrix from (defaults to local user's default viewport)"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternion",children:"vrQuaternion"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternion()\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return an identity quaternion."}),"\n",(0,i.jsx)(e.h3,{id:"vrquaterniondot",children:"vrQuaternionDot"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrQuaternionDot(\r\n    vrquaternion l,\r\n    vrquaternion r\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the dot product of two quaternions."}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternionfromaxisangle",children:"vrQuaternionFromAxisAngle"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternionFromAxisAngle(\r\n    vrvec3 axis,\r\n    number angle\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return a quaternion constructed from a rotation around an axis."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"axis"})," The axis to rotate around."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"angle"})," The angle to rotate by."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternionfromeulerangles",children:"vrQuaternionFromEulerAngles"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternionFromEulerAngles(\r\n    vrvec3 angles\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return a quaternion constructed from euler angles."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"angles"})," The X, Y and Z angles to construct the quaternion from."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternionfrommat",children:"vrQuaternionFromMat"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternionFromMat(\r\n    Any m\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a quaternion constructed from a 4x4 matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"m"})," The matrix to construct with (mat3 or mat4)."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternionlerp",children:"vrQuaternionLerp"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternionLerp(\r\n    vrquaternion l,\r\n    vrquaternion r,\r\n    number d\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the linear interpolation between two quaternions."}),"\n",(0,i.jsx)(e.h3,{id:"vrquaternionslerp",children:"vrQuaternionSlerp"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrquaternion vrQuaternionSlerp(\r\n    vrquaternion l,\r\n    vrquaternion r,\r\n    number d\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns the spherical interpolation between two quaternions."}),"\n",(0,i.jsx)(e.h3,{id:"vrray",children:"vrRay"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrray vrRay(\r\n    vrvec3 origin,\r\n    vrvec3 dir\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a ray."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"origin"})," The origin of the ray."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"dir"})," The direction the ray is pointing."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrsmoothstep",children:"vrSmoothStep"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"number vrSmoothStep(\r\n    number a,\r\n    number b,\r\n    number x\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Return a smoothly interpolated value between A and B."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"a"})," The lowest value."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"b"})," The highest value."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," How much to interpolate."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrsphere",children:"vrSphere"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrsphere vrSphere(\r\n    vrvec3 position,\r\n    number radius\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a sphere."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"position"})," The center of the sphere."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"radius"})," The radius of the sphere."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrspheremerge",children:"vrSphereMerge"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrsphere vrSphereMerge(\r\n    Any left,\r\n    vrsphere right\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a sphere that encapsulates two spheres."}),"\n",(0,i.jsx)(e.h3,{id:"vrspheretransform",children:"vrSphereTransform"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrsphere vrSphereTransform(\r\n    Any sphere,\r\n    vrmatrix4 matrix\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a sphere transformed by a matrix."}),"\n",(0,i.jsx)(e.h3,{id:"vrsuspenddynamics",children:"vrSuspendDynamics"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"void vrSuspendDynamics(\r\n    vrnode node,\r\n    boolean onOff\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Enables or disables dynamics."}),"\n",(0,i.jsx)(e.h3,{id:"vrtestcontain",children:"vrTestContain"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrTestContain(\r\n    Any a,\r\n    Any b\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns whether or object A completly contains object B."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"a"})," A sphere or AABB"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"b"})," A sphere, AABB, or vec3"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": true if b is inside a"]}),"\n",(0,i.jsx)(e.h3,{id:"vrtestintersection",children:"vrTestIntersection"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"boolean vrTestIntersection(\r\n    Any a,\r\n    Any b\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns whether or not two objects are intersecting one another."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"a"})," A sphere or AABB"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"b"})," A sphere or AABB"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Return"}),": True if the objects are intersecting"]}),"\n",(0,i.jsx)(e.h3,{id:"vrtransformvecbyworldrotation",children:"vrTransformVecByWorldRotation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrTransformVecByWorldRotation(\r\n    vrnode node,\r\n    vrvec3 vec\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Transforms a vector by the world rotation of the node."}),"\n",(0,i.jsx)(e.h3,{id:"vrvec2",children:"vrVec2"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vec2 vrVec2(\r\n    number x =0.0,\r\n    number y =0.0\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a 2 dimensional vector."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," The X component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"y"})," The Y component of the resulting vector"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrvec3",children:"vrVec3"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrVec3(\r\n    number x =0.0,\r\n    number y =0.0,\r\n    number z =0.0\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a 3 dimensional vector."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," The X component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"y"})," The Y component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"z"})," The Z component of the resulting vector"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrvec4",children:"vrVec4"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec4 vrVec4(\r\n    number x =0.0,\r\n    number y =0.0,\r\n    number z =0.0,\r\n    number w =0.0\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Returns a 4 dimensional vector."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," The X component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"y"})," The Y component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"z"})," The Z component of the resulting vector"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"w"})," The W component of the resulting vector"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrviewinvtransformvec",children:"vrViewInvTransformVec"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrViewInvTransformVec(\r\n    vrvec3 vec,\r\n    vrnode viewportNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Transforms a vector by the inverse of the current view matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"viewportNode"})," Viewport to get the view matrix from (defaults to local user's default viewport)"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"vrviewtransformvec",children:"vrViewTransformVec"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-lua",children:"vrvec3 vrViewTransformVec(\r\n    vrvec3 vec,\r\n    vrnode viewportNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(e.p,{children:"Transforms a vector by the current view matrix."}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"viewportNode"})," Viewport to get the view matrix from (defaults to local user's default viewport)"]}),"\n"]})]})}function h(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,i.jsx)(e,{...r,children:(0,i.jsx)(o,{...r})}):o(r)}},28453:(r,e,n)=>{n.d(e,{R:()=>l,x:()=>t});var s=n(96540);const i={},a=s.createContext(i);function l(r){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function t(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(i):r.components||i:l(r.components),s.createElement(a.Provider,{value:e},r.children)}}}]);