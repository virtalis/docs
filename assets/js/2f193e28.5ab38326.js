"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[7959],{72662:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"visionary-render-programming/reference/lua-api/modules/core","title":"Core","description":"Core functions and types that can be used by Lua scripts and plugins.","source":"@site/docs/visionary-render-programming/reference/lua-api/modules/core.mdx","sourceDirName":"visionary-render-programming/reference/lua-api/modules","slug":"/visionary-render-programming/reference/lua-api/modules/core","permalink":"/visionary-render-programming/reference/lua-api/modules/core","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/lua-api/modules/core.mdx","tags":[],"version":"current","lastUpdatedAt":1741620540000,"frontMatter":{"title":"Core","summary":"Core functions and types that can be used by Lua scripts and plugins."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Body","permalink":"/visionary-render-programming/reference/lua-api/modules/body"},"next":{"title":"GUI","permalink":"/visionary-render-programming/reference/lua-api/modules/gui"}}');var i=n(74848),l=n(28453);const d={title:"Core",summary:"Core functions and types that can be used by Lua scripts and plugins."},t="Core",a={},o=[{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Functions Documentation",id:"functions-documentation",level:2},{value:"vrAbortScript",id:"vrabortscript",level:3},{value:"vrActivate",id:"vractivate",level:3},{value:"vrAddEventObserver",id:"vraddeventobserver",level:3},{value:"vrAddGlobalEventObserver",id:"vraddglobaleventobserver",level:3},{value:"vrAddMetaNodeObserver",id:"vraddmetanodeobserver",level:3},{value:"vrAddNodeObserver",id:"vraddnodeobserver",level:3},{value:"vrAddSettingObserver",id:"vraddsettingobserver",level:3},{value:"vrAddTransformNodeObserver",id:"vraddtransformnodeobserver",level:3},{value:"vrAppCommandAdd",id:"vrappcommandadd",level:3},{value:"vrAppCommandBind",id:"vrappcommandbind",level:3},{value:"vrAppDir",id:"vrappdir",level:3},{value:"vrArrange",id:"vrarrange",level:3},{value:"vrBuildCurveViewConfig",id:"vrbuildcurveviewconfig",level:3},{value:"vrCaptureCleanState",id:"vrcapturecleanstate",level:3},{value:"vrCaptureViewpoint",id:"vrcaptureviewpoint",level:3},{value:"vrClearSelection",id:"vrclearselection",level:3},{value:"vrClusterMaster",id:"vrclustermaster",level:3},{value:"vrClusterSlave",id:"vrclusterslave",level:3},{value:"vrConfigModeAvailable",id:"vrconfigmodeavailable",level:3},{value:"vrConstrainNodeToBounds",id:"vrconstrainnodetobounds",level:3},{value:"vrCopyBitmap",id:"vrcopybitmap",level:3},{value:"vrCopySelectionToClipboard",id:"vrcopyselectiontoclipboard",level:3},{value:"vrCopyToClipboard",id:"vrcopytoclipboard",level:3},{value:"vrCreateGradient",id:"vrcreategradient",level:3},{value:"vrCreateSequence",id:"vrcreatesequence",level:3},{value:"vrCreateShape",id:"vrcreateshape",level:3},{value:"vrCreateShapeData",id:"vrcreateshapedata",level:3},{value:"vrCreateUserInterface",id:"vrcreateuserinterface",level:3},{value:"vrCreateViewpoint",id:"vrcreateviewpoint",level:3},{value:"vrCursorGetTouchedAssembly",id:"vrcursorgettouchedassembly",level:3},{value:"vrCursorGetTouchedGeoGroup",id:"vrcursorgettouchedgeogroup",level:3},{value:"vrCursorGetTouchedModel",id:"vrcursorgettouchedmodel",level:3},{value:"vrCursorGetTouchedVisual",id:"vrcursorgettouchedvisual",level:3},{value:"vrCursorIgnoreNode",id:"vrcursorignorenode",level:3},{value:"vrDataFile",id:"vrdatafile",level:3},{value:"vrDisableNetwork",id:"vrdisablenetwork",level:3},{value:"vrEnableNetwork",id:"vrenablenetwork",level:3},{value:"vrEnableNodeWhenConfigModeAvailable",id:"vrenablenodewhenconfigmodeavailable",level:3},{value:"vrEnableNodeWhenOculusAvailable",id:"vrenablenodewhenoculusavailable",level:3},{value:"vrEnableNodeWhenOculusTouchAvailable",id:"vrenablenodewhenoculustouchavailable",level:3},{value:"vrEnableNodeWhenOpenVRAvailable",id:"vrenablenodewhenopenvravailable",level:3},{value:"vrEnableNodeWhenZSpaceAvailable",id:"vrenablenodewhenzspaceavailable",level:3},{value:"vrExtractBinaryAssets",id:"vrextractbinaryassets",level:3},{value:"vrFileExists",id:"vrfileexists",level:3},{value:"vrFindAndOptimizeModels",id:"vrfindandoptimizemodels",level:3},{value:"vrFolderExists",id:"vrfolderexists",level:3},{value:"vrForkApp",id:"vrforkapp",level:3},{value:"vrGenerateQRCodeFile",id:"vrgenerateqrcodefile",level:3},{value:"vrGenLightning",id:"vrgenlightning",level:3},{value:"vrGeometryOp",id:"vrgeometryop",level:3},{value:"vrGetActivatorNode",id:"vrgetactivatornode",level:3},{value:"vrGetAllDocHelp",id:"vrgetalldochelp",level:3},{value:"vrGetClipboardNode",id:"vrgetclipboardnode",level:3},{value:"vrGetCommandLineSwitch",id:"vrgetcommandlineswitch",level:3},{value:"vrGetCommandLineSwitchValue",id:"vrgetcommandlineswitchvalue",level:3},{value:"vrGetContactPoints",id:"vrgetcontactpoints",level:3},{value:"vrGetCursorPosition",id:"vrgetcursorposition",level:3},{value:"vrGetGradientColourAt",id:"vrgetgradientcolourat",level:3},{value:"vrGetHoldingUser",id:"vrgetholdinguser",level:3},{value:"vrGetIconsLibrary",id:"vrgeticonslibrary",level:3},{value:"vrGetImporterFileExtensions",id:"vrgetimporterfileextensions",level:3},{value:"vrGetImporterList",id:"vrgetimporterlist",level:3},{value:"vrGetLastClickedCursorPosition",id:"vrgetlastclickedcursorposition",level:3},{value:"vrGetLastOpenDir",id:"vrgetlastopendir",level:3},{value:"vrGetLastViewSelectionGroup",id:"vrgetlastviewselectiongroup",level:3},{value:"vrGetRecentFileList",id:"vrgetrecentfilelist",level:3},{value:"vrGetRecentFolderList",id:"vrgetrecentfolderlist",level:3},{value:"vrGetRecentImportFileList",id:"vrgetrecentimportfilelist",level:3},{value:"vrGetRecentImportFolderList",id:"vrgetrecentimportfolderlist",level:3},{value:"vrGetTrackedEyeNode",id:"vrgettrackedeyenode",level:3},{value:"vrGetTrackedHandNode",id:"vrgettrackedhandnode",level:3},{value:"vrGetUserOffset",id:"vrgetuseroffset",level:3},{value:"vrGetViewportLayout",id:"vrgetviewportlayout",level:3},{value:"vrGetVisRenRevision",id:"vrgetvisrenrevision",level:3},{value:"vrGetVisRenVersion",id:"vrgetvisrenversion",level:3},{value:"vrGrabObjectWithTrackedHand",id:"vrgrabobjectwithtrackedhand",level:3},{value:"vrGroupAddMember",id:"vrgroupaddmember",level:3},{value:"vrGroupHasNodeOfType",id:"vrgrouphasnodeoftype",level:3},{value:"vrGroupRemoveMember",id:"vrgroupremovemember",level:3},{value:"vrGroupSnapshot",id:"vrgroupsnapshot",level:3},{value:"vrGroupsRoot",id:"vrgroupsroot",level:3},{value:"vrHasLicenceFeature",id:"vrhaslicencefeature",level:3},{value:"vrHasPermission",id:"vrhaspermission",level:3},{value:"vrHistoryAddMark",id:"vrhistoryaddmark",level:3},{value:"vrHistoryClear",id:"vrhistoryclear",level:3},{value:"vrHistoryStepBack",id:"vrhistorystepback",level:3},{value:"vrHistoryStepForward",id:"vrhistorystepforward",level:3},{value:"vrImportAssetLibrary",id:"vrimportassetlibrary",level:3},{value:"vrInCoroutine",id:"vrincoroutine",level:3},{value:"vrIsClustered",id:"vrisclustered",level:3},{value:"vrIsDebugBuild",id:"vrisdebugbuild",level:3},{value:"vrIsEditableScriptNode",id:"vriseditablescriptnode",level:3},{value:"vrIsStereoAvailable",id:"vrisstereoavailable",level:3},{value:"vrIsSystemNode",id:"vrissystemnode",level:3},{value:"vrIsToolEnabled",id:"vristoolenabled",level:3},{value:"vrIsTrackingEnabled",id:"vristrackingenabled",level:3},{value:"vrLaunchProcess",id:"vrlaunchprocess",level:3},{value:"vrLinkNetwork",id:"vrlinknetwork",level:3},{value:"vrListExports",id:"vrlistexports",level:3},{value:"vrListSleepingScripts",id:"vrlistsleepingscripts",level:3},{value:"vrLoadAvatarFromFile",id:"vrloadavatarfromfile",level:3},{value:"vrLoadAvatarFromFileToEdit",id:"vrloadavatarfromfiletoedit",level:3},{value:"vrLoadPlugin",id:"vrloadplugin",level:3},{value:"vrLocalUserNode",id:"vrlocalusernode",level:3},{value:"vrMakeArrow",id:"vrmakearrow",level:3},{value:"vrMakeBox",id:"vrmakebox",level:3},{value:"vrMakeCylinder",id:"vrmakecylinder",level:3},{value:"vrMakeEllipsoid",id:"vrmakeellipsoid",level:3},{value:"vrMakePlane",id:"vrmakeplane",level:3},{value:"vrMakeTorus",id:"vrmaketorus",level:3},{value:"vrModifierPressed",id:"vrmodifierpressed",level:3},{value:"vrNetworkSetRetryConnect",id:"vrnetworksetretryconnect",level:3},{value:"vrParseJSON",id:"vrparsejson",level:3},{value:"vrParseXML",id:"vrparsexml",level:3},{value:"vrPasteAsChild",id:"vrpasteaschild",level:3},{value:"vrPasteAsChildToSelection",id:"vrpasteaschildtoselection",level:3},{value:"vrPasteAsLinkToSelection",id:"vrpasteaslinktoselection",level:3},{value:"vrPasteAsSibling",id:"vrpasteassibling",level:3},{value:"vrPasteAsSiblingToSelection",id:"vrpasteassiblingtoselection",level:3},{value:"vrPastePropagateLink",id:"vrpastepropagatelink",level:3},{value:"vrPluginsDir",id:"vrpluginsdir",level:3},{value:"vrPostCommand",id:"vrpostcommand",level:3},{value:"vrPrimaryUserNode",id:"vrprimaryusernode",level:3},{value:"vrPushRecentFile",id:"vrpushrecentfile",level:3},{value:"vrPushRecentImportFile",id:"vrpushrecentimportfile",level:3},{value:"vrReleaseObjectFromTrackedHand",id:"vrreleaseobjectfromtrackedhand",level:3},{value:"vrReloadAudio",id:"vrreloadaudio",level:3},{value:"vrReloadTextures",id:"vrreloadtextures",level:3},{value:"vrRemoveObserver",id:"vrremoveobserver",level:3},{value:"vrRemoveRecentItem",id:"vrremoverecentitem",level:3},{value:"vrRemoveTransformLimits",id:"vrremovetransformlimits",level:3},{value:"vrRequestFolder",id:"vrrequestfolder",level:3},{value:"vrRequestLoadFile",id:"vrrequestloadfile",level:3},{value:"vrRequestSaveFile",id:"vrrequestsavefile",level:3},{value:"vrRescalePRSManipulator",id:"vrrescaleprsmanipulator",level:3},{value:"vrRevertToCleanState",id:"vrreverttocleanstate",level:3},{value:"vrSearchView",id:"vrsearchview",level:3},{value:"vrSetAppQuitHook",id:"vrsetappquithook",level:3},{value:"vrSetConfigMode",id:"vrsetconfigmode",level:3},{value:"vrSetScriptIdentifier",id:"vrsetscriptidentifier",level:3},{value:"vrSetScriptTimeout",id:"vrsetscripttimeout",level:3},{value:"vrSetToolEnabled",id:"vrsettoolenabled",level:3},{value:"vrSetTrackedEyeNode",id:"vrsettrackedeyenode",level:3},{value:"vrSetTrackedHandNode",id:"vrsettrackedhandnode",level:3},{value:"vrSetTransformLimits",id:"vrsettransformlimits",level:3},{value:"vrSetViewportLayout",id:"vrsetviewportlayout",level:3},{value:"vrShouldSaveCamera",id:"vrshouldsavecamera",level:3},{value:"vrSnapshotApply",id:"vrsnapshotapply",level:3},{value:"vrSplitFilePath",id:"vrsplitfilepath",level:3},{value:"vrSplitVirtalisHubURL",id:"vrsplitvirtalishuburl",level:3},{value:"vrSubDirs",id:"vrsubdirs",level:3},{value:"vrToggleProjection",id:"vrtoggleprojection",level:3},{value:"vrToggleToolEnabled",id:"vrtoggletoolenabled",level:3},{value:"vrTrackedCursorGetTouchedAssembly",id:"vrtrackedcursorgettouchedassembly",level:3},{value:"vrUnloadPlugin",id:"vrunloadplugin",level:3},{value:"vrUserDocumentsDir",id:"vruserdocumentsdir",level:3},{value:"vrUserPluginsDir",id:"vruserpluginsdir",level:3},{value:"vrUsersNode",id:"vrusersnode",level:3},{value:"vrUsingHMD",id:"vrusinghmd",level:3},{value:"vrYield",id:"vryield",level:3}];function c(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"core",children:"Core"})}),"\n",(0,i.jsx)(r.p,{children:"Core functions and types that can be used by Lua scripts and plugins."}),"\n",(0,i.jsx)(r.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"struct"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/multi",children:"MULTI"})})," ",(0,i.jsx)("br",{}),"Documentation helper for multi-return functions. Example usage: ",(0,i.jsx)(r.code,{children:"pos, rot, scale = vrNodeDecomposeTransform(node)"})]})]})})]}),"\n",(0,i.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrabortscript",children:"vrAbortScript"})}),"(string name)",(0,i.jsx)("br",{}),"Aborts a suspended script."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vractivate",children:"vrActivate"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," Self, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," Other =nil)",(0,i.jsx)("br",{}),"Invokes the Activate event of a Node optionally setting the __Other register."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddeventobserver",children:"vrAddEventObserver"})}),"(string uniqueID, string eventType, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, Any callback)",(0,i.jsx)("br",{}),"Adds an observer and callback function to execute for events (e.g. 'Activate', 'Touch', 'Break', 'Click', 'DoubleClick', etc.)"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddglobaleventobserver",children:"vrAddGlobalEventObserver"})}),"(string uniqueID, string eventType, Any callback)",(0,i.jsx)("br",{}),"Adds an observer and callback function to execute for global events (e.g. 'KeyPress', 'KeyRelease', 'PoseEntered', 'PoseLeft', etc.)"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddmetanodeobserver",children:"vrAddMetaNodeObserver"})}),"(string uniqueID, string metaNode, table callbacks)",(0,i.jsx)("br",{}),"Adds an observer of events from a MetaNode. This notifies the script whenever a node of type metaNode is created."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddnodeobserver",children:"vrAddNodeObserver"})}),"(string uniqueID, node node, table callbacks)",(0,i.jsx)("br",{}),"Adds an observer of events from a node. This notifies the script in certain circumstances - see the callbacks parameter."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddsettingobserver",children:"vrAddSettingObserver"})}),"(string key, Any callback, string settingPath, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Adds an observer of a setting. This notifies the script whenever the setting changes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vraddtransformnodeobserver",children:"vrAddTransformNodeObserver"})}),"(string uniqueID, Any transformCallback, Any enabledCallback, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Add an observer to the SGNode of a vrtree node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrappcommandadd",children:"vrAppCommandAdd"})}),"(string commandName)",(0,i.jsx)("br",{}),"Adds an app command and binds a lua function call to it."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrappcommandbind",children:"vrAppCommandBind"})}),"(string commandName, Any func)",(0,i.jsx)("br",{}),"Binds a lua function to an app command."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrappdir",children:"vrAppDir"})}),"()",(0,i.jsx)("br",{}),"Gets the Visionary Render application directory."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrarrange",children:"vrArrange"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," targetNode, string type)",(0,i.jsx)("br",{}),"Arranges assemblies into a grid based on their bounds."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrbuildcurveviewconfig",children:"vrBuildCurveViewConfig"})}),"(number radius, number angle, number height, number segments, boolean smoothCurve, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," camera, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," screens =nil, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportLayout)",(0,i.jsx)("br",{}),"Creates or updates the PhysicalScreen and Viewport nodes for a curved screen."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcapturecleanstate",children:"vrCaptureCleanState"})}),"()",(0,i.jsx)("br",{}),"Captures the current state of the Lua global environment."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcaptureviewpoint",children:"vrCaptureViewpoint"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewpoint, number size, string captureComplete, string textureCreate =0)",(0,i.jsx)("br",{}),"Captures the view from a specified viewpoint into a texture."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrclearselection",children:"vrClearSelection"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," selectionGroup)",(0,i.jsx)("br",{}),"Clears the selection in the specified selection group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrclustermaster",children:"vrClusterMaster"})}),"()",(0,i.jsx)("br",{}),"Returns true if the local user is a cluster master."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrclusterslave",children:"vrClusterSlave"})}),"()",(0,i.jsx)("br",{}),"Returns true if the local user is a cluster slave."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrconfigmodeavailable",children:"vrConfigModeAvailable"})}),"(number mode =CM_MODE_COUNT)",(0,i.jsx)("br",{}),"Returns true or false if the specified mode is available."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrconstrainnodetobounds",children:"vrConstrainNodeToBounds"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node =nil, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrbox",children:"vrbox"})," bbox =nil)",(0,i.jsx)("br",{}),"Constrains a node with a TransformLimit to a bounding box."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcopybitmap",children:"vrCopyBitmap"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Copies the texture data from a node onto the Windows clipboard."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcopyselectiontoclipboard",children:"vrCopySelectionToClipboard"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," selectionToCopy)",(0,i.jsx)("br",{}),"Copies the specified selection group to the clipboard."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcopytoclipboard",children:"vrCopyToClipboard"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," nodeToCopy)",(0,i.jsx)("br",{}),"Copies the specified node to the clipboard."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreategradient",children:"vrCreateGradient"})}),"()",(0,i.jsx)("br",{}),"Creates a new gradient."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreatesequence",children:"vrCreateSequence"})}),"()",(0,i.jsx)("br",{}),"Adds a child sequence to a selected node or the Scenes node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreateshape",children:"vrCreateShape"})}),"(string type, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent)",(0,i.jsx)("br",{}),"Creates a new shape and attaches it to a parent node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreateshapedata",children:"vrCreateShapeData"})}),"(string type, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent)",(0,i.jsx)("br",{}),"Creates vertex and index nodes of a shape and adds them to the Mesh node passed in."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreateuserinterface",children:"vrCreateUserInterface"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," uinode)",(0,i.jsx)("br",{}),"Create the user interface components from the user interface metanode."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcreateviewpoint",children:"vrCreateViewpoint"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent =nil, string name =0)",(0,i.jsx)("br",{}),"Creates a viewpoint at the current camera position."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcursorgettouchedassembly",children:"vrCursorGetTouchedAssembly"})}),"()",(0,i.jsx)("br",{}),"Gets the first assembly currently under the mouse cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcursorgettouchedgeogroup",children:"vrCursorGetTouchedGeoGroup"})}),"()",(0,i.jsx)("br",{}),"Gets the first geogroup currently under the mouse cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcursorgettouchedmodel",children:"vrCursorGetTouchedModel"})}),"()",(0,i.jsx)("br",{}),"Gets the first model currently under the mouse cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcursorgettouchedvisual",children:"vrCursorGetTouchedVisual"})}),"()",(0,i.jsx)("br",{}),"Gets the first visual currently under the mouse cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrcursorignorenode",children:"vrCursorIgnoreNode"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, boolean ignore)",(0,i.jsx)("br",{}),"Makes the specified node unpickable with the cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrdatafile",children:"vrDataFile"})}),"(string path)",(0,i.jsx)("br",{}),"Gets the specified file path from the Visionary Render application data directory, or an empty string if it does not exist."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrdisablenetwork",children:"vrDisableNetwork"})}),"()",(0,i.jsx)("br",{}),"Disables networking capabilities."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenetwork",children:"vrEnableNetwork"})}),"()",(0,i.jsx)("br",{}),"Enables networking capabilities."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenodewhenconfigmodeavailable",children:"vrEnableNodeWhenConfigModeAvailable"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, number mode =CM_MODE_COUNT)",(0,i.jsx)("br",{}),"Makes a button available when the specified mode is avaliable."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenodewhenoculusavailable",children:"vrEnableNodeWhenOculusAvailable"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Makes a button available when an Oculus Rift is connected. Note: this function is for the legacy Oculus mode without Touch controllers."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenodewhenoculustouchavailable",children:"vrEnableNodeWhenOculusTouchAvailable"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Makes a button available when an Oculus Touch is connected."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenodewhenopenvravailable",children:"vrEnableNodeWhenOpenVRAvailable"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Makes a button available when an OpenVR HMD is connected."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrenablenodewhenzspaceavailable",children:"vrEnableNodeWhenZSpaceAvailable"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Makes a button available when a zSpace device is detected."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrextractbinaryassets",children:"vrExtractBinaryAssets"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," fromNode, string path, boolean overwrite =true, ...)",(0,i.jsx)("br",{}),"Extracts binary data from Texture or AudioBuffer nodes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrfileexists",children:"vrFileExists"})}),"(string path)",(0,i.jsx)("br",{}),"Returns true if the specified file exists."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrfindandoptimizemodels",children:"vrFindAndOptimizeModels"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Finds and optimises model nodes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrfolderexists",children:"vrFolderExists"})}),"(string path)",(0,i.jsx)("br",{}),"Returns true if the specified folder exists."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrforkapp",children:"vrForkApp"})}),"()",(0,i.jsx)("br",{}),"Forks the application into another process."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgenerateqrcodefile",children:"vrGenerateQRCodeFile"})}),"(string content, string filename, number border =4, number pixelsPerModule =32, number errorCorrection =0)",(0,i.jsx)("br",{}),"Generates a QR code and saves it to a file."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgenlightning",children:"vrGenLightning"})}),"()",(0,i.jsx)("br",{}),"Generates a lightning polyline."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgeometryop",children:"vrGeometryOp"})}),"(string type, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Performs a geometry operation."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetactivatornode",children:"vrGetActivatorNode"})}),"()",(0,i.jsx)("br",{}),"Gets the node which activated the event."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/multi",children:"MULTI"}),"< boolean, string >"]}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetalldochelp",children:"vrGetAllDocHelp"})}),"(boolean doxyFormat =false, string outputPath =0)",(0,i.jsx)("br",{}),"Gets the entire Lua API reference, either to a string or a file."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetclipboardnode",children:"vrGetClipboardNode"})}),"()",(0,i.jsx)("br",{}),"Returns the node containing the clipboard content, or nil if nothing is on the clipboard."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetcommandlineswitch",children:"vrGetCommandLineSwitch"})}),"(string name)",(0,i.jsx)("br",{}),"Returns whether or not a command line switch was specified."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetcommandlineswitchvalue",children:"vrGetCommandLineSwitchValue"})}),"(string name)",(0,i.jsx)("br",{}),"Returns the value of a command line switch."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetcontactpoints",children:"vrGetContactPoints"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," nodeA, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," nodeB)",(0,i.jsx)("br",{}),"Returns a list of contact points and normals between two nodes."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetcursorposition",children:"vrGetCursorPosition"})}),"()",(0,i.jsx)("br",{}),"Get the mouse cursor's current position."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetgradientcolourat",children:"vrGetGradientColourAt"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," gradientNode, number value)",(0,i.jsx)("br",{}),"Gets the gradient colour (as RGB value) at the specified position."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetholdinguser",children:"vrGetHoldingUser"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Return the user that is holding the node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgeticonslibrary",children:"vrGetIconsLibrary"})}),"(boolean create =true)",(0,i.jsx)("br",{}),"Gets the library in which browser icons are stored."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetimporterfileextensions",children:"vrGetImporterFileExtensions"})}),"(string importerName)",(0,i.jsx)("br",{}),"Gets the file extensions associated with an importer plugin."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetimporterlist",children:"vrGetImporterList"})}),"()",(0,i.jsx)("br",{}),"Gets the names of all installed data importer plugins."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetlastclickedcursorposition",children:"vrGetLastClickedCursorPosition"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Get the position of the cursor when the mouse was last clicked."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetlastopendir",children:"vrGetLastOpenDir"})}),"()",(0,i.jsx)("br",{}),"Returns the last directory selected."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetlastviewselectiongroup",children:"vrGetLastViewSelectionGroup"})}),"()",(0,i.jsx)("br",{}),"Returns the selection group that was added to."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetrecentfilelist",children:"vrGetRecentFileList"})}),"()",(0,i.jsx)("br",{}),"Returns the list of recent files."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetrecentfolderlist",children:"vrGetRecentFolderList"})}),"()",(0,i.jsx)("br",{}),"Returns the list of recent folders."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetrecentimportfilelist",children:"vrGetRecentImportFileList"})}),"()",(0,i.jsx)("br",{}),"Returns the list of recent import files."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetrecentimportfolderlist",children:"vrGetRecentImportFolderList"})}),"()",(0,i.jsx)("br",{}),"Returns the list of recent import folders."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgettrackedeyenode",children:"vrGetTrackedEyeNode"})}),"()",(0,i.jsx)("br",{}),"Gets the current tracked eye node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgettrackedhandnode",children:"vrGetTrackedHandNode"})}),"(number index =-1)",(0,i.jsx)("br",{}),"Gets the current tracked hand node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrvec3",children:"vrvec3"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetuseroffset",children:"vrGetUserOffset"})}),"(boolean world =true, boolean atHeadHeight =false)",(0,i.jsx)("br",{}),"Gets the offset from the body to the user's standing position."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetviewportlayout",children:"vrGetViewportLayout"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," userNode =nil)",(0,i.jsx)("br",{}),"Gets the user's current viewport layout."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetvisrenrevision",children:"vrGetVisRenRevision"})}),"()",(0,i.jsx)("br",{}),"Returns the revision number of Visionary Render being used."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgetvisrenversion",children:"vrGetVisRenVersion"})}),"()",(0,i.jsx)("br",{}),"Returns the version number of Visionary Render being used."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgrabobjectwithtrackedhand",children:"vrGrabObjectWithTrackedHand"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," target, boolean moveToHand =true, boolean rotateToHand =true, boolean scaleToHand =true, boolean releaseOthers =true, number handIndex =-1, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Attaches a target node to the hand."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgroupaddmember",children:"vrGroupAddMember"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," groupNode, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," memberNode)",(0,i.jsx)("br",{}),"Adds a node to the specified group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgrouphasnodeoftype",children:"vrGroupHasNodeOfType"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," groupNode, string metaType)",(0,i.jsx)("br",{}),"Checks whether a group contains a node of a specified type."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgroupremovemember",children:"vrGroupRemoveMember"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," groupNode, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," memberNode)",(0,i.jsx)("br",{}),"Removes a node from the specified group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgroupsnapshot",children:"vrGroupSnapshot"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," groupNode)",(0,i.jsx)("br",{}),"Creates a snapshot of the specified group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrgroupsroot",children:"vrGroupsRoot"})}),"(boolean noCreate =false)",(0,i.jsx)("br",{}),"Gets the Groups root node under the Scenes tree."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhaslicencefeature",children:"vrHasLicenceFeature"})}),"(string featureName)",(0,i.jsx)("br",{}),"Checks whether a licence feature is available."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhaspermission",children:"vrHasPermission"})}),"(string permission, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," originatorNode =nil)",(0,i.jsx)("br",{}),"Queries whether or not we have a named permission."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhistoryaddmark",children:"vrHistoryAddMark"})}),"()",(0,i.jsx)("br",{}),"Adds an undo point in to the History."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhistoryclear",children:"vrHistoryClear"})}),"()",(0,i.jsx)("br",{}),"Erases the undo history."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhistorystepback",children:"vrHistoryStepBack"})}),"()",(0,i.jsx)("br",{}),"Undoes the history to the previous history mark."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrhistorystepforward",children:"vrHistoryStepForward"})}),"()",(0,i.jsx)("br",{}),"Redoes the history to the next history mark."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrimportassetlibrary",children:"vrImportAssetLibrary"})}),"(string file)",(0,i.jsx)("br",{}),"Imports an asset library."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrincoroutine",children:"vrInCoroutine"})}),"(string script)",(0,i.jsx)("br",{}),"Executes the specified piece of Lua in a coroutine."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrisclustered",children:"vrIsClustered"})}),"()",(0,i.jsx)("br",{}),"Returns true if running in a cluster configuration."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrisdebugbuild",children:"vrIsDebugBuild"})}),"()",(0,i.jsx)("br",{}),"Returns true if the DEBUG compilation flag was defined."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vriseditablescriptnode",children:"vrIsEditableScriptNode"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Returns true if the supplied node contains a script property supported by the script editor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrisstereoavailable",children:"vrIsStereoAvailable"})}),"(number mode =0)",(0,i.jsx)("br",{}),"Returns true if stereo 3D is available in the current instance of Visionary Render."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrissystemnode",children:"vrIsSystemNode"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Returns true if the system node is an ancestor of node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vristoolenabled",children:"vrIsToolEnabled"})}),"(string toolName, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," userNode =nil)",(0,i.jsx)("br",{}),"Tests whether a named Tool is enabled."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vristrackingenabled",children:"vrIsTrackingEnabled"})}),"()",(0,i.jsx)("br",{}),"Gets the enabled state of the user's tracking."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrlaunchprocess",children:"vrLaunchProcess"})}),"(string cmdline, boolean pipeOutput =false, number timeout =0.0)",(0,i.jsx)("br",{}),"Launches a command or application asynchronously."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrlinknetwork",children:"vrLinkNetwork"})}),"(string host, number port)",(0,i.jsx)("br",{}),"Links to another application instance forming a Peer-To-Peer network."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrlistexports",children:"vrListExports"})}),"()",(0,i.jsx)("br",{}),"List all Lua VR extension functions."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrlistsleepingscripts",children:"vrListSleepingScripts"})}),"(boolean details =false)",(0,i.jsx)("br",{}),"Lists the scripts currently suspended, awaiting resume."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrloadavatarfromfile",children:"vrLoadAvatarFromFile"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string filename)",(0,i.jsx)("br",{}),"Loads an avatar from a file and places it as a child to parent node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrloadavatarfromfiletoedit",children:"vrLoadAvatarFromFileToEdit"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string filename)",(0,i.jsx)("br",{}),"Loads an avatar from a file and places it in a scene to edit. Can be saved by using Developer->Save Avatar."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrloadplugin",children:"vrLoadPlugin"})}),"(string pluginName, string pluginVersion, string pluginInternalName, string pluginDir)"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrlocalusernode",children:"vrLocalUserNode"})}),"()",(0,i.jsx)("br",{}),"Returns the local user's node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmakearrow",children:"vrMakeArrow"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number length, number width, number centreBias)",(0,i.jsx)("br",{}),"Creates an arrow shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmakebox",children:"vrMakeBox"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number width, number height, number depth)",(0,i.jsx)("br",{}),"Creates a box shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmakecylinder",children:"vrMakeCylinder"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number bottomRadius, number topRadius, number height)",(0,i.jsx)("br",{}),"Creates a cylinder shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmakeellipsoid",children:"vrMakeEllipsoid"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number radiusX, number radiusY, number radiusZ)",(0,i.jsx)("br",{}),"Creates an ellipsoid shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmakeplane",children:"vrMakePlane"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number hsize, number vsize)",(0,i.jsx)("br",{}),"Creates a plane shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmaketorus",children:"vrMakeTorus"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," parent, string name, number radius, number rez, number ringRadius, number ringRez)",(0,i.jsx)("br",{}),"Creates a torus shape."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrmodifierpressed",children:"vrModifierPressed"})}),"(number id)",(0,i.jsx)("br",{}),"Tests whether any modifier keys are pressed."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrnetworksetretryconnect",children:"vrNetworkSetRetryConnect"})}),"(boolean allowRetry)",(0,i.jsx)("br",{}),"Sets whether failed calls to vrLinkNetwork should retry until the user manual aborts them."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrparsejson",children:"vrParseJSON"})}),"(string data)",(0,i.jsx)("br",{}),"Parse JSON data into a Lua table."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrparsexml",children:"vrParseXML"})}),"(string xml)",(0,i.jsx)("br",{}),"Converts an XML string into a hierarchy of nested LUA tables."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpasteaschild",children:"vrPasteAsChild"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," targetNode)",(0,i.jsx)("br",{}),"Pastes the contents of the clipboard as a child to the target node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpasteaschildtoselection",children:"vrPasteAsChildToSelection"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewSelection)",(0,i.jsx)("br",{}),"Pastes the contents of the clipboard as a child to the selection group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpasteaslinktoselection",children:"vrPasteAsLinkToSelection"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," selectionGroup, string targetMetaNodeName, string targetPropertyName)",(0,i.jsx)("br",{}),"Pastes the nodes on the clipboard as a link into the target property of the specified selection group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpasteassibling",children:"vrPasteAsSibling"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," targetNode)",(0,i.jsx)("br",{}),"Pastes the contents of the clipboard as a sibling to the specified node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpasteassiblingtoselection",children:"vrPasteAsSiblingToSelection"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," selectionGroup)",(0,i.jsx)("br",{}),"Pastes the contents of the clipboard as a sibling to the specified selection group."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpastepropagatelink",children:"vrPastePropagateLink"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," selectionGroup, string targetMetaNodeName, string targetPropertyName)",(0,i.jsx)("br",{}),"Pastes the nodes on the clipboard as a link into all matching nodes and target properties."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpluginsdir",children:"vrPluginsDir"})}),"()",(0,i.jsx)("br",{}),"Gets the Visionary Render plugins directory."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpostcommand",children:"vrPostCommand"})}),"(string cmd, string param =0, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Posts a command to be processed by Visionary Render."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrprimaryusernode",children:"vrPrimaryUserNode"})}),"()",(0,i.jsx)("br",{}),"Returns the cluster master's user node, or the local user node if unclustered."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpushrecentfile",children:"vrPushRecentFile"})}),"(string file)",(0,i.jsx)("br",{}),"Adds a file to the end of the list of recent files and its folder to the end of the list of recent folders."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrpushrecentimportfile",children:"vrPushRecentImportFile"})}),"(string file)",(0,i.jsx)("br",{}),"Adds a file to the end of the list of recent imports and its folder to the end of the list of recent import folders."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrreleaseobjectfromtrackedhand",children:"vrReleaseObjectFromTrackedHand"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," target =nil, number handIndex =-1, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," user =nil)",(0,i.jsx)("br",{}),"Releases a node attached to the hand. This works in conjunction with vrGrabObjectWithTrackedHand and the TrackedManipulatorTool."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrreloadaudio",children:"vrReloadAudio"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Finds audio nodes and reloads the audio data from the associated files."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrreloadtextures",children:"vrReloadTextures"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node)",(0,i.jsx)("br",{}),"Recursively finds texture nodes and reloads the texture data from the associated files."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrremoveobserver",children:"vrRemoveObserver"})}),"(string uniqueID)",(0,i.jsx)("br",{}),"Removes an observer."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrremoverecentitem",children:"vrRemoveRecentItem"})}),"(string file, string nodeName)",(0,i.jsx)("br",{}),"Removes a recent file, folder or import from the corresponding list."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrremovetransformlimits",children:"vrRemoveTransformLimits"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, string type)",(0,i.jsx)("br",{}),"Removes the TransformLimits on a node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrrequestfolder",children:"vrRequestFolder"})}),"(string caption =0, string initialDir =0)",(0,i.jsx)("br",{}),"Invokes a dialog to select a folder."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrrequestloadfile",children:"vrRequestLoadFile"})}),"(string caption =0, string initialDir =0, string filterStr =0, string defaultExt =0)",(0,i.jsx)("br",{}),"Invokes a dialog to load a file."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrrequestsavefile",children:"vrRequestSaveFile"})}),"(string caption =0, string initialDir =0, string filterStr =0, string defaultExt =0, string defaultFile =0)",(0,i.jsx)("br",{}),"Invokes a dialog to save a file."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrrescaleprsmanipulator",children:"vrRescalePRSManipulator"})}),"()",(0,i.jsx)("br",{}),"Refreshes the scale of the PRS manipulator."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrreverttocleanstate",children:"vrRevertToCleanState"})}),"()",(0,i.jsx)("br",{}),"Restores the captured state of the Lua global environment."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsearchview",children:"vrSearchView"})}),"(string view, string searchString)",(0,i.jsx)("br",{}),"Sets the search query for a specified view."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsetappquithook",children:"vrSetAppQuitHook"})}),"(string luaFunc)",(0,i.jsx)("br",{}),"Specify a lua function to be called when user tries to quit the application."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsetconfigmode",children:"vrSetConfigMode"})}),"(number mode =CM_MODE_COUNT)",(0,i.jsx)("br",{}),"Sets the config to the specified mode, if its available."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsetscriptidentifier",children:"vrSetScriptIdentifier"})}),"(string name)",(0,i.jsx)("br",{}),"Sets an identifier for the Lua execution."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsetscripttimeout",children:"vrSetScriptTimeout"})}),"(number time)",(0,i.jsx)("br",{}),"Overrides the default Lua timeout for scripts, until the next script event is triggered."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsettoolenabled",children:"vrSetToolEnabled"})}),"(string toolName, boolean enabled, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," userNode =nil)",(0,i.jsx)("br",{}),"Sets the Enabled state of a named Tool."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsettrackedeyenode",children:"vrSetTrackedEyeNode"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node =nil)",(0,i.jsx)("br",{}),"Sets the tracked eye to the specified node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsettrackedhandnode",children:"vrSetTrackedHandNode"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node =nil, number index =1)",(0,i.jsx)("br",{}),"Sets the tracked hand to the specified node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsettransformlimits",children:"vrSetTransformLimits"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," node, string type, string limitType, boolean x, boolean y, boolean z)",(0,i.jsx)("br",{}),"Adds transform limits onto a node."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsetviewportlayout",children:"vrSetViewportLayout"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," viewportLayoutNode, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," userNode =nil)",(0,i.jsx)("br",{}),"Sets the user's current viewport layout."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrshouldsavecamera",children:"vrShouldSaveCamera"})}),"()",(0,i.jsx)("br",{}),"Returns true if the camera position should be saved into documents."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsnapshotapply",children:"vrSnapshotApply"})}),"(",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," snapNode)",(0,i.jsx)("br",{}),"Applies the specified snapshot."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/multi",children:"MULTI"}),"< string, string, string >"]}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsplitfilepath",children:"vrSplitFilePath"})}),"(string path)",(0,i.jsx)("br",{}),"Returns file directory, name, and extension."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsplitvirtalishuburl",children:"vrSplitVirtalisHubURL"})}),"(string url)",(0,i.jsx)("br",{}),"Identifies a Virtalis Hub URL and splits out the server name, artifact ID and artifact name."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"table"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrsubdirs",children:"vrSubDirs"})}),"(string path)",(0,i.jsx)("br",{}),"Gets the subdirectories of a directory."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrtoggleprojection",children:"vrToggleProjection"})}),"()",(0,i.jsx)("br",{}),"Toggles the current viewport between perspective and orthographic views."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrtoggletoolenabled",children:"vrToggleToolEnabled"})}),"(string toolName, ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})," userNode =nil)",(0,i.jsx)("br",{}),"Toggles the Enabled state of a named Tool."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrtrackedcursorgettouchedassembly",children:"vrTrackedCursorGetTouchedAssembly"})}),"()",(0,i.jsx)("br",{}),"Gets the first assembly currently under the tracked cursor."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrunloadplugin",children:"vrUnloadPlugin"})}),"(string pluginInfo)"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vruserdocumentsdir",children:"vrUserDocumentsDir"})}),"()",(0,i.jsx)("br",{}),"Gets the current user's documents directory."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"string"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vruserpluginsdir",children:"vrUserPluginsDir"})}),"()",(0,i.jsx)("br",{}),"Gets the current applications users plug-ins directory."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/lua-api/classes/vrnode",children:"vrnode"})}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrusersnode",children:"vrUsersNode"})}),"()",(0,i.jsx)("br",{}),"Returns the 'Users' node from the tree."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"boolean"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vrusinghmd",children:"vrUsingHMD"})}),"()",(0,i.jsx)("br",{}),"Returns whether or not we are using a HMD."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"void"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#vryield",children:"vrYield"})}),"(number time =0.0)",(0,i.jsx)("br",{}),"Yields the Lua execution back to the application for the (approximate) specified time."]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"functions-documentation",children:"Functions Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"vrabortscript",children:"vrAbortScript"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAbortScript(\r\n    string name\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Aborts a suspended script."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"name"})," The name of the script (reported by vrListSleepingScripts)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vractivate",children:"vrActivate"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrActivate(\r\n    vrnode Self,\r\n    vrnode Other =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Invokes the Activate event of a Node optionally setting the __Other register."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Self"})," The node to put in the __Self register of the activated event"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Other"})," The node to put in the __Other register of the activated event"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddeventobserver",children:"vrAddEventObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddEventObserver(\r\n    string uniqueID,\r\n    string eventType,\r\n    vrnode node,\r\n    Any callback\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an observer and callback function to execute for events (e.g. 'Activate', 'Touch', 'Break', 'Click', 'DoubleClick', etc.)"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," A unique ID for use in ",(0,i.jsx)(r.a,{href:"#vrremoveobserver",children:"vrRemoveObserver()"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"eventType"})," The type of event to observe, such as 'Activate' or 'Touch'"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to observe for new events"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"callback"})," A Lua function to call when events are activated. This function should have a signature of function(). It can be a string name of a global function or a Lua function object"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddglobaleventobserver",children:"vrAddGlobalEventObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddGlobalEventObserver(\r\n    string uniqueID,\r\n    string eventType,\r\n    Any callback\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an observer and callback function to execute for global events (e.g. 'KeyPress', 'KeyRelease', 'PoseEntered', 'PoseLeft', etc.)"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," A unique ID for use in ",(0,i.jsx)(r.a,{href:"#vrremoveobserver",children:"vrRemoveObserver()"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"eventType"})," The type of global event to observe, such as 'KeyPress' or 'PoseEntered'"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"callback"})," A Lua function to call when global events are activated. This function should have a signature of function(). It can be a string name of a global function or a Lua function object"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddmetanodeobserver",children:"vrAddMetaNodeObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddMetaNodeObserver(\r\n    string uniqueID,\r\n    string metaNode,\r\n    table callbacks\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an observer of events from a MetaNode. This notifies the script whenever a node of type metaNode is created."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," A unique ID for this observer. Use this with vrRemoveObserver."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"metaNode"})," The type of node to observe."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"callbacks"})," Table of callbacks. Each value can be a string name of a global function or a lua function object. Possible keys are:"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeCreated - called when a node is created. This function should have a signature of function(meta, newnode)."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeRenamed - called when a node's name is changed. This function should have a signature of function(meta, node)."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeParentChanged - called when a node's parent is changed. This function should have a signature of function(meta, node, oldParent, newParent)."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeAddingToRecycleBin - called when a node is added to the recycle bin. This function should have a signature of function(meta, node)."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeRestoredFromRecycleBin - called when a node is restored from the recycle bin, e.g. with an undo command. This function should have a signature of function(meta, node)."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"nodeDestroying - called when a node is finally deleted, usually when closing the scene. You are more likely to want nodeAddingToRecycleBin. This function should have a signature of function(meta, node)."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddnodeobserver",children:"vrAddNodeObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddNodeObserver(\r\n    string uniqueID,\r\n    node node,\r\n    table callbacks\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an observer of events from a node. This notifies the script in certain circumstances - see the callbacks parameter."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," A unique ID for this observer. Use this with vrRemoveObserver."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to observe."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"callbacks"})," Table of callbacks. Each value can be a string name of a global function, or a lua function object, and should have a signature of function(node). Possible keys are:"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"valuesChanged - called when any of the node values change."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"addingToRecycleBin - called when the node is sent to the recycle bin."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"restoredFromRecycleBin - called when the node is restored from the recycle bin, e.g. with an undo command."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"destroying - called when the node is finally deleted, usually when closing the scene. You are more likely to want addingToRecycleBin."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddsettingobserver",children:"vrAddSettingObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddSettingObserver(\r\n    string key,\r\n    Any callback,\r\n    string settingPath,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an observer of a setting. This notifies the script whenever the setting changes."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"key"})," A unique key for this observer. Use this with vrRemoveObserver"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"callback"})," Lua function to call when a node is created. This function should have a signature of function(value). This can be a string name of a global function, or a Lua function object"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"settingPath"})," Path to the setting to observe (relative to the registry root)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," The user that this observer belongs to (defaults to the current user)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vraddtransformnodeobserver",children:"vrAddTransformNodeObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAddTransformNodeObserver(\r\n    string uniqueID,\r\n    Any transformCallback,\r\n    Any enabledCallback,\r\n    vrnode node,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Add an observer to the SGNode of a vrtree node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," A unique ID for this observer. Use this with vrRemoveObserver."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"transformCallback"})," Lua function to call when the nodes transform changes. This function should have a signature of function(node, transform). This can be a string name of a global function, or a lua function object"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"enabledCallback"})," Lua function to call when the nodes enabled state changes. This function should have a signature of function(node, enabled). This can be a string name of a global function, or a lua function object"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to observe."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," THe user associated with this observer."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrappcommandadd",children:"vrAppCommandAdd"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAppCommandAdd(\r\n    string commandName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an app command and binds a lua function call to it."}),"\n",(0,i.jsx)(r.h3,{id:"vrappcommandbind",children:"vrAppCommandBind"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrAppCommandBind(\r\n    string commandName,\r\n    Any func\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Binds a lua function to an app command."}),"\n",(0,i.jsx)(r.h3,{id:"vrappdir",children:"vrAppDir"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrAppDir()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the Visionary Render application directory."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the folder containing visren-app.exe"]}),"\n",(0,i.jsx)(r.h3,{id:"vrarrange",children:"vrArrange"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrArrange(\r\n    vrnode targetNode,\r\n    string type\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Arranges assemblies into a grid based on their bounds."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"targetNode"})," ViewSelectionContainer holding a selection of nodes to arrange"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"type"})," Type of grid (alignment):"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"gridXY"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"gridXZ"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"gridYZ"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrbuildcurveviewconfig",children:"vrBuildCurveViewConfig"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrBuildCurveViewConfig(\r\n    number radius,\r\n    number angle,\r\n    number height,\r\n    number segments,\r\n    boolean smoothCurve,\r\n    vrnode user =nil,\r\n    vrnode camera,\r\n    vrnode screens =nil,\r\n    vrnode viewportLayout\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates or updates the PhysicalScreen and Viewport nodes for a curved screen."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"radius"})," The radius of the curve in metres"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"angle"})," The curvature of the screen in degrees"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"height"})," The height of the screen in metres"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"segments"})," The number of viewports to split the curve into"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"smoothCurve"})," Whether to apply distortion to wrap the image onto a smoothly curved screen, or leave the segments facetted"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," The user to create the configuration for"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcapturecleanstate",children:"vrCaptureCleanState"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCaptureCleanState()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Captures the current state of the Lua global environment."}),"\n",(0,i.jsx)(r.h3,{id:"vrcaptureviewpoint",children:"vrCaptureViewpoint"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCaptureViewpoint(\r\n    vrnode viewpoint,\r\n    number size,\r\n    string captureComplete,\r\n    string textureCreate =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Captures the view from a specified viewpoint into a texture."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"viewpoint"})," Viewpoint node to capture"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"size"})," Size of image to capture to (square)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"captureComplete"})," Name of a Lua function to call with the complete catured texture"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"textureCreate"})," Name of a Lua function to call to create a texture node"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrclearselection",children:"vrClearSelection"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrClearSelection(\r\n    vrnode selectionGroup\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Clears the selection in the specified selection group."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"selectionGroup"})," The selection group to clear"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if the selection was cleared"]}),"\n",(0,i.jsx)(r.h3,{id:"vrclustermaster",children:"vrClusterMaster"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrClusterMaster()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the local user is a cluster master."}),"\n",(0,i.jsx)(r.h3,{id:"vrclusterslave",children:"vrClusterSlave"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrClusterSlave()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the local user is a cluster slave."}),"\n",(0,i.jsx)(r.h3,{id:"vrconfigmodeavailable",children:"vrConfigModeAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrConfigModeAvailable(\r\n    number mode =CM_MODE_COUNT\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true or false if the specified mode is available."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"mode"})," Immersive mode value"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if the mode is available"]}),"\n",(0,i.jsx)(r.h3,{id:"vrconstrainnodetobounds",children:"vrConstrainNodeToBounds"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrConstrainNodeToBounds(\r\n    vrnode node =nil,\r\n    vrbox bbox =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Constrains a node with a TransformLimit to a bounding box."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to Constrain"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcopybitmap",children:"vrCopyBitmap"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCopyBitmap(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Copies the texture data from a node onto the Windows clipboard."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Texture node to copy"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcopyselectiontoclipboard",children:"vrCopySelectionToClipboard"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCopySelectionToClipboard(\r\n    vrnode selectionToCopy\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Copies the specified selection group to the clipboard."}),"\n",(0,i.jsx)(r.h3,{id:"vrcopytoclipboard",children:"vrCopyToClipboard"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCopyToClipboard(\r\n    vrnode nodeToCopy\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Copies the specified node to the clipboard."}),"\n",(0,i.jsx)(r.h3,{id:"vrcreategradient",children:"vrCreateGradient"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCreateGradient()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a new gradient."}),"\n",(0,i.jsx)(r.h3,{id:"vrcreatesequence",children:"vrCreateSequence"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCreateSequence()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds a child sequence to a selected node or the Scenes node."}),"\n",(0,i.jsx)(r.h3,{id:"vrcreateshape",children:"vrCreateShape"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrCreateShape(\r\n    string type,\r\n    vrnode parent\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a new shape and attaches it to a parent node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"type"})," Type of shape to create:"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"plane"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cube"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sphere"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cubicsphere"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"disc"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cone"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cylinder"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"arrow"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sponge^3"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sponge^4"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"torus"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"knot"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"room"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"room2"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"axis"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"parent"})," Parent of the new node"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The new assembly node referencing the new shape model"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcreateshapedata",children:"vrCreateShapeData"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrCreateShapeData(\r\n    string type,\r\n    vrnode parent\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates vertex and index nodes of a shape and adds them to the Mesh node passed in."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"type"})," Type of shape to create:"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"plane"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cube"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sphere"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cubicsphere"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"disc"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cone"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"cylinder"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"arrow"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"torus"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"knot"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"parent"})," Mesh node onto which the data should be added"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The Mesh node passed in"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcreateuserinterface",children:"vrCreateUserInterface"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCreateUserInterface(\r\n    vrnode uinode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Create the user interface components from the user interface metanode."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"uinode"})," The user interface metanode"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcreateviewpoint",children:"vrCreateViewpoint"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrCreateViewpoint(\r\n    vrnode parent =nil,\r\n    string name =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a viewpoint at the current camera position."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"parent"})," Parent of the new viewpoint node. If not specified, viewpoint is created under the root ViewpointList node in the scenes tree"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"name"})," The name of the new viewpoint"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The new viewpoint node"]}),"\n",(0,i.jsx)(r.h3,{id:"vrcursorgettouchedassembly",children:"vrCursorGetTouchedAssembly"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCursorGetTouchedAssembly()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the first assembly currently under the mouse cursor."}),"\n",(0,i.jsx)(r.h3,{id:"vrcursorgettouchedgeogroup",children:"vrCursorGetTouchedGeoGroup"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCursorGetTouchedGeoGroup()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the first geogroup currently under the mouse cursor."}),"\n",(0,i.jsx)(r.h3,{id:"vrcursorgettouchedmodel",children:"vrCursorGetTouchedModel"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCursorGetTouchedModel()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the first model currently under the mouse cursor."}),"\n",(0,i.jsx)(r.h3,{id:"vrcursorgettouchedvisual",children:"vrCursorGetTouchedVisual"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCursorGetTouchedVisual()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the first visual currently under the mouse cursor."}),"\n",(0,i.jsx)(r.h3,{id:"vrcursorignorenode",children:"vrCursorIgnoreNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrCursorIgnoreNode(\r\n    vrnode node,\r\n    boolean ignore\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes the specified node unpickable with the cursor."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"ignore"})," True makes it unpickable, false makes it pickable."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrdatafile",children:"vrDataFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrDataFile(\r\n    string path\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the specified file path from the Visionary Render application data directory, or an empty string if it does not exist."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Path to the data file relative to the application data directory"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the specified data file"]}),"\n",(0,i.jsx)(r.h3,{id:"vrdisablenetwork",children:"vrDisableNetwork"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrDisableNetwork()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Disables networking capabilities."}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenetwork",children:"vrEnableNetwork"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNetwork()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Enables networking capabilities."}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenodewhenconfigmodeavailable",children:"vrEnableNodeWhenConfigModeAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNodeWhenConfigModeAvailable(\r\n    vrnode node,\r\n    number mode =CM_MODE_COUNT\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes a button available when the specified mode is avaliable."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Button node to enable"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"mode"})," Immersive mode value"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenodewhenoculusavailable",children:"vrEnableNodeWhenOculusAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNodeWhenOculusAvailable(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes a button available when an Oculus Rift is connected. Note: this function is for the legacy Oculus mode without Touch controllers."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Button node to enable"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenodewhenoculustouchavailable",children:"vrEnableNodeWhenOculusTouchAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNodeWhenOculusTouchAvailable(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes a button available when an Oculus Touch is connected."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Button node to enable"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenodewhenopenvravailable",children:"vrEnableNodeWhenOpenVRAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNodeWhenOpenVRAvailable(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes a button available when an OpenVR HMD is connected."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Button node to enable"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrenablenodewhenzspaceavailable",children:"vrEnableNodeWhenZSpaceAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrEnableNodeWhenZSpaceAvailable(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Makes a button available when a zSpace device is detected."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," Button node to enable"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrextractbinaryassets",children:"vrExtractBinaryAssets"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrExtractBinaryAssets(\r\n    vrnode fromNode,\r\n    string path,\r\n    boolean overwrite =true, \r\n    ...\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Extracts binary data from Texture or AudioBuffer nodes."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"fromNode"})," The node to extract from - may be a single node or a library to search"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Directory or file to save data to"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"overwrite"})," Whether to overwrite existing files on disk"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"..."})," Types to search for ('Texture' or 'AudioBuffer'); only required if fromNode is a different type"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrfileexists",children:"vrFileExists"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrFileExists(\r\n    string path\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the specified file exists."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Relative or absolute path to test"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": True if the file exists"]}),"\n",(0,i.jsx)(r.h3,{id:"vrfindandoptimizemodels",children:"vrFindAndOptimizeModels"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrFindAndOptimizeModels(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Finds and optimises model nodes."}),"\n",(0,i.jsx)(r.h3,{id:"vrfolderexists",children:"vrFolderExists"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrFolderExists(\r\n    string path\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the specified folder exists."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Relative or absolute path to test"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": True if the folder exists"]}),"\n",(0,i.jsx)(r.h3,{id:"vrforkapp",children:"vrForkApp"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrForkApp()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Forks the application into another process."}),"\n",(0,i.jsx)(r.h3,{id:"vrgenerateqrcodefile",children:"vrGenerateQRCodeFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGenerateQRCodeFile(\r\n    string content,\r\n    string filename,\r\n    number border =4,\r\n    number pixelsPerModule =32,\r\n    number errorCorrection =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Generates a QR code and saves it to a file."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"content"})," The content of the QR code"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"filename"})," Where to save the generated QR code"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"border"})," The border size in modules, between 0 and 16 (optional, default: 4)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"pixelsPerModule"})," The number of image pixels per module of the QR code, between 1 and 64 (optional, default: 32)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"errorCorrection"})," The minimum level of error correction to include, between 0 (low) and 3 (high) (optional, default: 0)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgenlightning",children:"vrGenLightning"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGenLightning()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Generates a lightning polyline."}),"\n",(0,i.jsx)(r.h3,{id:"vrgeometryop",children:"vrGeometryOp"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGeometryOp(\r\n    string type,\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Performs a geometry operation."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"type"})," The type of operation:"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"weld"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"normals"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"tangents"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"uv"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"tess"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sort"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"invert"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"optimise"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"split"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"explode"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"prune"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"sieve"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"recentre"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"transform"}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"merge"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to perform the operation on"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetactivatornode",children:"vrGetActivatorNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetActivatorNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the node which activated the event."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetalldochelp",children:"vrGetAllDocHelp"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"MULTI< boolean, string > vrGetAllDocHelp(\r\n    boolean doxyFormat =false,\r\n    string outputPath =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the entire Lua API reference, either to a string or a file."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"doxyFormat"})," Whether to format the API docs in doxygen format"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"outputPath"})," Path to file to write to instead of returning the string"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Success status"}),"\n",(0,i.jsx)(r.li,{children:"Lua API Documentation"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetclipboardnode",children:"vrGetClipboardNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetClipboardNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the node containing the clipboard content, or nil if nothing is on the clipboard."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetcommandlineswitch",children:"vrGetCommandLineSwitch"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrGetCommandLineSwitch(\r\n    string name\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns whether or not a command line switch was specified."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"name"})," The name of the command line switch"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": True if the command line option is present"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetcommandlineswitchvalue",children:"vrGetCommandLineSwitchValue"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrGetCommandLineSwitchValue(\r\n    string name\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the value of a command line switch."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"name"})," The name of the command line switch"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetcontactpoints",children:"vrGetContactPoints"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetContactPoints(\r\n    vrnode nodeA,\r\n    vrnode nodeB\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns a list of contact points and normals between two nodes."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of contact information."]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetcursorposition",children:"vrGetCursorPosition"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrvec3 vrGetCursorPosition()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Get the mouse cursor's current position."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": World position of the mouse cursor"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetgradientcolourat",children:"vrGetGradientColourAt"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGetGradientColourAt(\r\n    vrnode gradientNode,\r\n    number value\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the gradient colour (as RGB value) at the specified position."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetholdinguser",children:"vrGetHoldingUser"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetHoldingUser(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Return the user that is holding the node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node that is being held"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The user that is holding the object"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgeticonslibrary",children:"vrGetIconsLibrary"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetIconsLibrary(\r\n    boolean create =true\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the library in which browser icons are stored."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"create"})," Whether to create the library if it doesn't already exist"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetimporterfileextensions",children:"vrGetImporterFileExtensions"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetImporterFileExtensions(\r\n    string importerName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the file extensions associated with an importer plugin."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of file extension names"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetimporterlist",children:"vrGetImporterList"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetImporterList()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the names of all installed data importer plugins."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of importer names"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetlastclickedcursorposition",children:"vrGetLastClickedCursorPosition"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrvec3 vrGetLastClickedCursorPosition(\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Get the position of the cursor when the mouse was last clicked."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," The user to obtain the last click of. Uses the local user if not specified."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": World position where the mouse was last clicked"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetlastopendir",children:"vrGetLastOpenDir"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrGetLastOpenDir()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the last directory selected."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetlastviewselectiongroup",children:"vrGetLastViewSelectionGroup"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetLastViewSelectionGroup()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the selection group that was added to."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetrecentfilelist",children:"vrGetRecentFileList"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetRecentFileList()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the list of recent files."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of paths to recently opened files"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetrecentfolderlist",children:"vrGetRecentFolderList"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetRecentFolderList()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the list of recent folders."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of paths to folders from which files have recently been opened"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetrecentimportfilelist",children:"vrGetRecentImportFileList"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetRecentImportFileList()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the list of recent import files."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of paths to files that have recently been imported"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetrecentimportfolderlist",children:"vrGetRecentImportFolderList"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrGetRecentImportFolderList()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the list of recent import folders."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of paths to folders from which files have recently been imported"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgettrackedeyenode",children:"vrGetTrackedEyeNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetTrackedEyeNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the current tracked eye node."}),"\n",(0,i.jsx)(r.h3,{id:"vrgettrackedhandnode",children:"vrGetTrackedHandNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetTrackedHandNode(\r\n    number index =-1\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the current tracked hand node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"index"})," -1 or nil for default, 0, for left hand, 1 for right hand"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetuseroffset",children:"vrGetUserOffset"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrvec3 vrGetUserOffset(\r\n    boolean world =true,\r\n    boolean atHeadHeight =false\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the offset from the body to the user's standing position."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetviewportlayout",children:"vrGetViewportLayout"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGetViewportLayout(\r\n    vrnode userNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the user's current viewport layout."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"userNode"})," user whose viewport should be queried (defaults to local user)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgetvisrenrevision",children:"vrGetVisRenRevision"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrGetVisRenRevision()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the revision number of Visionary Render being used."}),"\n",(0,i.jsx)(r.h3,{id:"vrgetvisrenversion",children:"vrGetVisRenVersion"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrGetVisRenVersion()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the version number of Visionary Render being used."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Version string formatted Major.Minor.Patch"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgrabobjectwithtrackedhand",children:"vrGrabObjectWithTrackedHand"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGrabObjectWithTrackedHand(\r\n    vrnode target,\r\n    boolean moveToHand =true,\r\n    boolean rotateToHand =true,\r\n    boolean scaleToHand =true,\r\n    boolean releaseOthers =true,\r\n    number handIndex =-1,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Attaches a target node to the hand."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"target"})," The node to attach to the hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"moveToHand"})," Whether to match the position of the grabbed object to the hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"rotateToHand"})," Whether to match the rotation of the grabbed object to the hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"scaleToHand"})," Whether to match the scale of the grabbed object to the hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"releaseOthers"})," Whether to release any other objects that were in the hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"handIndex"})," -1 or nil for default, 0, for left hand, 1 for right hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," The user whose hand the object should be attached to, or nil for the current user"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgroupaddmember",children:"vrGroupAddMember"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGroupAddMember(\r\n    vrnode groupNode,\r\n    vrnode memberNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds a node to the specified group."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"groupNode"})," The group node"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"memberNode"})," The node to add to the group"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgrouphasnodeoftype",children:"vrGroupHasNodeOfType"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGroupHasNodeOfType(\r\n    vrnode groupNode,\r\n    string metaType\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Checks whether a group contains a node of a specified type."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"groupNode"})," The group node"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"metaType"})," The type of node to find"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgroupremovemember",children:"vrGroupRemoveMember"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrGroupRemoveMember(\r\n    vrnode groupNode,\r\n    vrnode memberNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Removes a node from the specified group."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"groupNode"})," The group node"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"memberNode"})," The node to remove from the group"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgroupsnapshot",children:"vrGroupSnapshot"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGroupSnapshot(\r\n    vrnode groupNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a snapshot of the specified group."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"groupNode"})," The group node"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The snapshot node that was created/updated"]}),"\n",(0,i.jsx)(r.h3,{id:"vrgroupsroot",children:"vrGroupsRoot"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrGroupsRoot(\r\n    boolean noCreate =false\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the Groups root node under the Scenes tree."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"noCreate"})," When true, the root node will not be created if it does not exist"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrhaslicencefeature",children:"vrHasLicenceFeature"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrHasLicenceFeature(\r\n    string featureName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Checks whether a licence feature is available."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"featureName"})," The name of the licence feature"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrhaspermission",children:"vrHasPermission"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrHasPermission(\r\n    string permission,\r\n    vrnode originatorNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Queries whether or not we have a named permission."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"permission"})," The permission to query"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"originatorNode"})," The originator"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if the permission is present"]}),"\n",(0,i.jsx)(r.h3,{id:"vrhistoryaddmark",children:"vrHistoryAddMark"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrHistoryAddMark()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds an undo point in to the History."}),"\n",(0,i.jsx)(r.h3,{id:"vrhistoryclear",children:"vrHistoryClear"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrHistoryClear()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Erases the undo history."}),"\n",(0,i.jsx)(r.h3,{id:"vrhistorystepback",children:"vrHistoryStepBack"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrHistoryStepBack()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Undoes the history to the previous history mark."}),"\n",(0,i.jsx)(r.h3,{id:"vrhistorystepforward",children:"vrHistoryStepForward"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrHistoryStepForward()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Redoes the history to the next history mark."}),"\n",(0,i.jsx)(r.h3,{id:"vrimportassetlibrary",children:"vrImportAssetLibrary"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrImportAssetLibrary(\r\n    string file\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Imports an asset library."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"file"})," Path to the asset library file"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrincoroutine",children:"vrInCoroutine"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrInCoroutine(\r\n    string script\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Executes the specified piece of Lua in a coroutine."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"script"})," Lua code to execute"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if the coroutine is started successfully"]}),"\n",(0,i.jsx)(r.h3,{id:"vrisclustered",children:"vrIsClustered"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrIsClustered()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if running in a cluster configuration."}),"\n",(0,i.jsx)(r.h3,{id:"vrisdebugbuild",children:"vrIsDebugBuild"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrIsDebugBuild()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the DEBUG compilation flag was defined."}),"\n",(0,i.jsx)(r.h3,{id:"vriseditablescriptnode",children:"vrIsEditableScriptNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrIsEditableScriptNode(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the supplied node contains a script property supported by the script editor."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," node to check"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrisstereoavailable",children:"vrIsStereoAvailable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrIsStereoAvailable(\r\n    number mode =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if stereo 3D is available in the current instance of Visionary Render."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"mode"})," Stereo mode to check. Default (0) checks for quad buffered stereo support. All other values return true"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrissystemnode",children:"vrIsSystemNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrIsSystemNode(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the system node is an ancestor of node."}),"\n",(0,i.jsx)(r.h3,{id:"vristoolenabled",children:"vrIsToolEnabled"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrIsToolEnabled(\r\n    string toolName,\r\n    vrnode userNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Tests whether a named Tool is enabled."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"toolName"})," The name of the tool that is tested"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"userNode"})," The user the tool belongs to. If none is specified, the current user is used"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if it is enabled"]}),"\n",(0,i.jsx)(r.h3,{id:"vristrackingenabled",children:"vrIsTrackingEnabled"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrIsTrackingEnabled()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the enabled state of the user's tracking."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if it is enabled"]}),"\n",(0,i.jsx)(r.h3,{id:"vrlaunchprocess",children:"vrLaunchProcess"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrLaunchProcess(\r\n    string cmdline,\r\n    boolean pipeOutput =false,\r\n    number timeout =0.0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Launches a command or application asynchronously."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"cmdline"})," The command to execute."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"pipeOutput"})," True if the process should pipe its output to the log."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"timeout"})," A maximum time in seconds the process can run for before being force-terminated."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": True if the process started successfully."]}),"\n",(0,i.jsx)(r.h3,{id:"vrlinknetwork",children:"vrLinkNetwork"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrLinkNetwork(\r\n    string host,\r\n    number port\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Links to another application instance forming a Peer-To-Peer network."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"host"})," IP address or hostname to connect to"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"port"})," TCP port to connect to"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrlistexports",children:"vrListExports"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrListExports()\n"})}),"\n",(0,i.jsx)(r.p,{children:"List all Lua VR extension functions."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": List of function names separated by new lines"]}),"\n",(0,i.jsx)(r.h3,{id:"vrlistsleepingscripts",children:"vrListSleepingScripts"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrListSleepingScripts(\r\n    boolean details =false\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Lists the scripts currently suspended, awaiting resume."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"details"})," Whether to display additional details about each script"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of script identifiers"]}),"\n",(0,i.jsx)(r.h3,{id:"vrloadavatarfromfile",children:"vrLoadAvatarFromFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrLoadAvatarFromFile(\r\n    vrnode parent,\r\n    string filename\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Loads an avatar from a file and places it as a child to parent node."}),"\n",(0,i.jsx)(r.h3,{id:"vrloadavatarfromfiletoedit",children:"vrLoadAvatarFromFileToEdit"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrLoadAvatarFromFileToEdit(\r\n    vrnode parent,\r\n    string filename\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Loads an avatar from a file and places it in a scene to edit. Can be saved by using Developer->Save Avatar."}),"\n",(0,i.jsx)(r.h3,{id:"vrloadplugin",children:"vrLoadPlugin"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrLoadPlugin(\r\n    string pluginName,\r\n    string pluginVersion,\r\n    string pluginInternalName,\r\n    string pluginDir\r\n)\n"})}),"\n",(0,i.jsx)(r.h3,{id:"vrlocalusernode",children:"vrLocalUserNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrLocalUserNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the local user's node."}),"\n",(0,i.jsx)(r.h3,{id:"vrmakearrow",children:"vrMakeArrow"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakeArrow(\r\n    vrnode parent,\r\n    string name,\r\n    number length,\r\n    number width,\r\n    number centreBias\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates an arrow shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmakebox",children:"vrMakeBox"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakeBox(\r\n    vrnode parent,\r\n    string name,\r\n    number width,\r\n    number height,\r\n    number depth\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a box shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmakecylinder",children:"vrMakeCylinder"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakeCylinder(\r\n    vrnode parent,\r\n    string name,\r\n    number bottomRadius,\r\n    number topRadius,\r\n    number height\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a cylinder shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmakeellipsoid",children:"vrMakeEllipsoid"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakeEllipsoid(\r\n    vrnode parent,\r\n    string name,\r\n    number radiusX,\r\n    number radiusY,\r\n    number radiusZ\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates an ellipsoid shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmakeplane",children:"vrMakePlane"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakePlane(\r\n    vrnode parent,\r\n    string name,\r\n    number hsize,\r\n    number vsize\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a plane shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmaketorus",children:"vrMakeTorus"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrMakeTorus(\r\n    vrnode parent,\r\n    string name,\r\n    number radius,\r\n    number rez,\r\n    number ringRadius,\r\n    number ringRez\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Creates a torus shape."}),"\n",(0,i.jsx)(r.h3,{id:"vrmodifierpressed",children:"vrModifierPressed"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrModifierPressed(\r\n    number id\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Tests whether any modifier keys are pressed."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"id"})," Modifier ID. 0 = Ctrl, 1 = Shift, 2 = Alt"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": true if the modifier key is currently being pressed"]}),"\n",(0,i.jsx)(r.h3,{id:"vrnetworksetretryconnect",children:"vrNetworkSetRetryConnect"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrNetworkSetRetryConnect(\r\n    boolean allowRetry\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets whether failed calls to vrLinkNetwork should retry until the user manual aborts them."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"allowRetry"})," Whether to retry failed calls to vrLinkNetwork"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrparsejson",children:"vrParseJSON"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrParseJSON(\r\n    string data\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Parse JSON data into a Lua table."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"data"})," JSON data"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": The parsed data in Lua tables matching the original JSON structure"]}),"\n",(0,i.jsx)(r.h3,{id:"vrparsexml",children:"vrParseXML"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrParseXML(\r\n    string xml\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Converts an XML string into a hierarchy of nested LUA tables."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"xml"})," The XML to parse"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Table representing the document structure"]}),"\n",(0,i.jsx)(r.h3,{id:"vrpasteaschild",children:"vrPasteAsChild"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPasteAsChild(\r\n    vrnode targetNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the contents of the clipboard as a child to the target node."}),"\n",(0,i.jsx)(r.h3,{id:"vrpasteaschildtoselection",children:"vrPasteAsChildToSelection"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPasteAsChildToSelection(\r\n    vrnode viewSelection\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the contents of the clipboard as a child to the selection group."}),"\n",(0,i.jsx)(r.h3,{id:"vrpasteaslinktoselection",children:"vrPasteAsLinkToSelection"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPasteAsLinkToSelection(\r\n    vrnode selectionGroup,\r\n    string targetMetaNodeName,\r\n    string targetPropertyName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the nodes on the clipboard as a link into the target property of the specified selection group."}),"\n",(0,i.jsx)(r.h3,{id:"vrpasteassibling",children:"vrPasteAsSibling"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPasteAsSibling(\r\n    vrnode targetNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the contents of the clipboard as a sibling to the specified node."}),"\n",(0,i.jsx)(r.h3,{id:"vrpasteassiblingtoselection",children:"vrPasteAsSiblingToSelection"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPasteAsSiblingToSelection(\r\n    vrnode selectionGroup\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the contents of the clipboard as a sibling to the specified selection group."}),"\n",(0,i.jsx)(r.h3,{id:"vrpastepropagatelink",children:"vrPastePropagateLink"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPastePropagateLink(\r\n    vrnode selectionGroup,\r\n    string targetMetaNodeName,\r\n    string targetPropertyName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Pastes the nodes on the clipboard as a link into all matching nodes and target properties."}),"\n",(0,i.jsx)(r.h3,{id:"vrpluginsdir",children:"vrPluginsDir"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrPluginsDir()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the Visionary Render plugins directory."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the plugins directory in the application install folder"]}),"\n",(0,i.jsx)(r.h3,{id:"vrpostcommand",children:"vrPostCommand"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPostCommand(\r\n    string cmd,\r\n    string param =0,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Posts a command to be processed by Visionary Render."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"cmd"})," The command to post"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"param"})," Parameter to pass to the command"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," User to run the command as (default: local user)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrprimaryusernode",children:"vrPrimaryUserNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPrimaryUserNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the cluster master's user node, or the local user node if unclustered."}),"\n",(0,i.jsx)(r.h3,{id:"vrpushrecentfile",children:"vrPushRecentFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPushRecentFile(\r\n    string file\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds a file to the end of the list of recent files and its folder to the end of the list of recent folders."}),"\n",(0,i.jsx)(r.h3,{id:"vrpushrecentimportfile",children:"vrPushRecentImportFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrPushRecentImportFile(\r\n    string file\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds a file to the end of the list of recent imports and its folder to the end of the list of recent import folders."}),"\n",(0,i.jsx)(r.h3,{id:"vrreleaseobjectfromtrackedhand",children:"vrReleaseObjectFromTrackedHand"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrReleaseObjectFromTrackedHand(\r\n    vrnode target =nil,\r\n    number handIndex =-1,\r\n    vrnode user =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Releases a node attached to the hand. This works in conjunction with vrGrabObjectWithTrackedHand and the TrackedManipulatorTool."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"target"})," The node to release, or nil to release all objects from the specified hand(s)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"handIndex"})," -1 for any hand, 0, for left hand, 1 for right hand"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"user"})," The user holding the node, or nil to deduce the user automatically"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrreloadaudio",children:"vrReloadAudio"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrReloadAudio(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Finds audio nodes and reloads the audio data from the associated files."}),"\n",(0,i.jsx)(r.h3,{id:"vrreloadtextures",children:"vrReloadTextures"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrReloadTextures(\r\n    vrnode node\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Recursively finds texture nodes and reloads the texture data from the associated files."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to start searching from. Can be an individual texture node."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrremoveobserver",children:"vrRemoveObserver"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrRemoveObserver(\r\n    string uniqueID\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Removes an observer."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"uniqueID"})," The unique ID specified when adding the observer."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrremoverecentitem",children:"vrRemoveRecentItem"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrRemoveRecentItem(\r\n    string file,\r\n    string nodeName\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Removes a recent file, folder or import from the corresponding list."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"file"})," The filename to remove"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"nodeName"})," Either 'RecentFiles' or 'RecentFolders'"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrremovetransformlimits",children:"vrRemoveTransformLimits"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrRemoveTransformLimits(\r\n    vrnode node,\r\n    string type\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Removes the TransformLimits on a node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to remove the limits from."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"type"}),' The Type of TransformLimit to remove. Arguments are: "Position", "Rotation", "Scale".']}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrrequestfolder",children:"vrRequestFolder"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrRequestFolder(\r\n    string caption =0,\r\n    string initialDir =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Invokes a dialog to select a folder."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"caption"})," Caption to present on the dialog"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"initialDir"})," Path to the initial directory to browse (default: the last directory something was opened from)"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the selected folder"]}),"\n",(0,i.jsx)(r.h3,{id:"vrrequestloadfile",children:"vrRequestLoadFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrRequestLoadFile(\r\n    string caption =0,\r\n    string initialDir =0,\r\n    string filterStr =0,\r\n    string defaultExt =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Invokes a dialog to load a file."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"caption"})," Caption to present on the dialog (optional, default: 'Select File')"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"initialDir"})," Path to the initial directory to browse (optional, default: the last directory something was opened from)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"filterStr"})," Windows-style file filter string with | in place of null chars (optional, default: 'All Files (",(0,i.jsx)(r.em,{children:"."}),")|",(0,i.jsx)(r.em,{children:"."}),"|'"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"defaultExt"})," Default file extension to filter by (optional, no effect when using default filterStr)"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the file selected by the user in the dialog"]}),"\n",(0,i.jsx)(r.h3,{id:"vrrequestsavefile",children:"vrRequestSaveFile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrRequestSaveFile(\r\n    string caption =0,\r\n    string initialDir =0,\r\n    string filterStr =0,\r\n    string defaultExt =0,\r\n    string defaultFile =0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Invokes a dialog to save a file."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"caption"})," Caption to present on the dialog (optional, default: 'Select File')"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"initialDir"})," Path to the initial directory to browse. (optional, default: the last directory something was opened from)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"filterStr"})," Windows-style file filter string with | in place of null chars. (optional, default: 'All Files (",(0,i.jsx)(r.em,{children:"."}),")|",(0,i.jsx)(r.em,{children:"."}),"|'"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"defaultExt"})," Default file extension to filter by (optional, no effect when using default filterStr)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"defaultFile"})," Default file name to provide in the file name control on the dialog (optional)"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the file selected by the user in the dialog (this file may not exist)"]}),"\n",(0,i.jsx)(r.h3,{id:"vrrescaleprsmanipulator",children:"vrRescalePRSManipulator"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrRescalePRSManipulator()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Refreshes the scale of the PRS manipulator."}),"\n",(0,i.jsx)(r.h3,{id:"vrreverttocleanstate",children:"vrRevertToCleanState"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrRevertToCleanState()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Restores the captured state of the Lua global environment."}),"\n",(0,i.jsx)(r.h3,{id:"vrsearchview",children:"vrSearchView"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSearchView(\r\n    string view,\r\n    string searchString\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the search query for a specified view."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"view"})," The name of the view"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"searchString"})," The string to insert into the search box"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsetappquithook",children:"vrSetAppQuitHook"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetAppQuitHook(\r\n    string luaFunc\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Specify a lua function to be called when user tries to quit the application."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"luaFunc"})," Name of the Lua function. This function should return false if it wants to block the exit."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsetconfigmode",children:"vrSetConfigMode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetConfigMode(\r\n    number mode =CM_MODE_COUNT\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the config to the specified mode, if its available."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"mode"})," Immersive mode value"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsetscriptidentifier",children:"vrSetScriptIdentifier"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetScriptIdentifier(\r\n    string name\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets an identifier for the Lua execution."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"name"})," Name to identify the current Lua execution"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsetscripttimeout",children:"vrSetScriptTimeout"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetScriptTimeout(\r\n    number time\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Overrides the default Lua timeout for scripts, until the next script event is triggered."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"time"})," Number of seconds to wait before timing out. A value of 0 means it never times out."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsettoolenabled",children:"vrSetToolEnabled"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetToolEnabled(\r\n    string toolName,\r\n    boolean enabled,\r\n    vrnode userNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the Enabled state of a named Tool."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"toolName"})," The name of the tool that its Enabled state is being changed"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"enabled"})," The state that we are applying to the tool (true/false)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"userNode"})," The user the tool belongs to. If none is specified, the current user is used"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsettrackedeyenode",children:"vrSetTrackedEyeNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetTrackedEyeNode(\r\n    vrnode node =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the tracked eye to the specified node."}),"\n",(0,i.jsx)(r.h3,{id:"vrsettrackedhandnode",children:"vrSetTrackedHandNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetTrackedHandNode(\r\n    vrnode node =nil,\r\n    number index =1\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the tracked hand to the specified node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"index"})," 0 for left hand, 1 for right hand"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsettransformlimits",children:"vrSetTransformLimits"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetTransformLimits(\r\n    vrnode node,\r\n    string type,\r\n    string limitType,\r\n    boolean x,\r\n    boolean y,\r\n    boolean z\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Adds transform limits onto a node."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"node"})," The node to add the limits to."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"type"}),' The Type of TransformLimit to add. Arguments are: "Position", "Rotation", "Scale".']}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"limitType"}),' The Type of constraint to set. Arguments are "Lock", "Limit", "Step".']}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsetviewportlayout",children:"vrSetViewportLayout"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSetViewportLayout(\r\n    vrnode viewportLayoutNode,\r\n    vrnode userNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Sets the user's current viewport layout."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"userNode"})," user whose viewport should be updated (defaults to local user)"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrshouldsavecamera",children:"vrShouldSaveCamera"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrShouldSaveCamera()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the camera position should be saved into documents."}),"\n",(0,i.jsx)(r.h3,{id:"vrsnapshotapply",children:"vrSnapshotApply"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSnapshotApply(\r\n    vrnode snapNode\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Applies the specified snapshot."}),"\n",(0,i.jsx)(r.h3,{id:"vrsplitfilepath",children:"vrSplitFilePath"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"MULTI< string, string, string > vrSplitFilePath(\r\n    string path\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns file directory, name, and extension."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Relative or absolute path to test"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"File Directory"}),"\n",(0,i.jsx)(r.li,{children:"File Name"}),"\n",(0,i.jsx)(r.li,{children:"File Extension"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsplitvirtalishuburl",children:"vrSplitVirtalisHubURL"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrSplitVirtalisHubURL(\r\n    string url\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Identifies a Virtalis Hub URL and splits out the server name, artifact ID and artifact name."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"url"})," The Virtalis Hub URL"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrsubdirs",children:"vrSubDirs"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"table vrSubDirs(\r\n    string path\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the subdirectories of a directory."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"path"})," Path to the directory to scan"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Array of subdirectory names"]}),"\n",(0,i.jsx)(r.h3,{id:"vrtoggleprojection",children:"vrToggleProjection"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrToggleProjection()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Toggles the current viewport between perspective and orthographic views."}),"\n",(0,i.jsx)(r.h3,{id:"vrtoggletoolenabled",children:"vrToggleToolEnabled"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrToggleToolEnabled(\r\n    string toolName,\r\n    vrnode userNode =nil\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Toggles the Enabled state of a named Tool."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"toolName"})," The name of the tool that its Enabled state is being toggled"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"userNode"})," The user the tool belongs to. If none is specified, the current user is used"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"vrtrackedcursorgettouchedassembly",children:"vrTrackedCursorGetTouchedAssembly"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrTrackedCursorGetTouchedAssembly()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the first assembly currently under the tracked cursor."}),"\n",(0,i.jsx)(r.h3,{id:"vrunloadplugin",children:"vrUnloadPlugin"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrUnloadPlugin(\r\n    string pluginInfo\r\n)\n"})}),"\n",(0,i.jsx)(r.h3,{id:"vruserdocumentsdir",children:"vrUserDocumentsDir"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrUserDocumentsDir()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the current user's documents directory."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the user's Visionary Render documents folder"]}),"\n",(0,i.jsx)(r.h3,{id:"vruserpluginsdir",children:"vrUserPluginsDir"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"string vrUserPluginsDir()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Gets the current applications users plug-ins directory."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Return"}),": Absolute path to the plugins directory in the user's documents folder"]}),"\n",(0,i.jsx)(r.h3,{id:"vrusersnode",children:"vrUsersNode"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"vrnode vrUsersNode()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns the 'Users' node from the tree."}),"\n",(0,i.jsx)(r.h3,{id:"vrusinghmd",children:"vrUsingHMD"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"boolean vrUsingHMD()\n"})}),"\n",(0,i.jsx)(r.p,{children:"Returns whether or not we are using a HMD."}),"\n",(0,i.jsx)(r.h3,{id:"vryield",children:"vrYield"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lua",children:"void vrYield(\r\n    number time =0.0\r\n)\n"})}),"\n",(0,i.jsx)(r.p,{children:"Yields the Lua execution back to the application for the (approximate) specified time."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"time"})," Number of seconds before resuming execution of this script, or 0 for one frame"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>t});var s=n(96540);const i={},l=s.createContext(i);function d(e){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(l.Provider,{value:r},e.children)}}}]);