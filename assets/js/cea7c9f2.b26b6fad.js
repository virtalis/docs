"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[82651],{59078:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-styles","title":"Meta_AnnotationStyles","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-styles.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-styles","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-styles","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-styles.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_AnnotationStyles","summary":"AnnotationStyles is a container for GUI style nodes, applied to annotations. These are usually Meta_ModelMarkerStyle or similar and are saved with the scene so are customisable."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_AnnotationList","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation-list"},"next":{"title":"Meta_Annotation","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-annotation"}}');var s=t(74848),r=t(28453);const o={title:"Meta_AnnotationStyles",summary:"AnnotationStyles is a container for GUI style nodes, applied to annotations. These are usually Meta_ModelMarkerStyle or similar and are saved with the scene so are customisable."},i="Meta_AnnotationStyles",c={},l=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"meta_annotationstyles",children:"Meta_AnnotationStyles"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Module:"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(n.strong,{children:"/"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsxs)(n.p,{children:["AnnotationStyles is a container for GUI style nodes, applied to annotations. These are usually ",(0,s.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-model-marker-style",children:"Meta_ModelMarkerStyle"})," or similar and are saved with the scene so are customisable."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"#include <meta_annotation.hpp>"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);