"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[367],{84560:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-font","title":"Meta_Font","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-font.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-font","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-font","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-font.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_Font","summary":"A Font provides text rendering for Buttons and other UI elements that display text."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_FontList","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-font-list"},"next":{"title":"Meta_GeoGroup","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-geo-group"}}');var s=r(74848),i=r(28453);const d={title:"Meta_Font",summary:"A Font provides text rendering for Buttons and other UI elements that display text."},c="Meta_Font",a={},l=[{value:"Public Types",id:"public-types",level:2},{value:"Public Attributes",id:"public-attributes",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum CharacterSet",id:"enum-characterset",level:3},{value:"enum IDX",id:"enum-idx",level:3},{value:"Public Attributes Documentation",id:"public-attributes-documentation",level:2},{value:"sm_MaxFontSize",id:"sm_maxfontsize",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"meta_font",children:"Meta_Font"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Module:"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(t.strong,{children:"/"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(t.p,{children:"A Font provides text rendering for Buttons and other UI elements that display text."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"#include <meta_gui.hpp>"})}),"\n",(0,s.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-characterset",children:"CharacterSet"})})," { ANSI, DEFAULT }",(0,s.jsx)("br",{}),"Types for Idx_CharacterSet."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Typeface, Idx_PointSize, Idx_Bold, Idx_Italic, Idx_CharacterSet }",(0,s.jsx)("br",{}),"Property index."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"public-attributes",children:"Public Attributes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"const int"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#sm_maxfontsize",children:"sm_MaxFontSize"})})})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"enum-characterset",children:"enum CharacterSet"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ANSI"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:["Use ANSI; English (Symbols - C: ",(0,s.jsx)(t.code,{children:'"ANSI_Charset"'}),", Lua: ",(0,s.jsx)(t.code,{children:"__Font_ANSI_Charset"}),")"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DEFAULT"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:["Use the locale default character set (Symbols - C: ",(0,s.jsx)(t.code,{children:'"Default_Charset"'}),", Lua: ",(0,s.jsx)(t.code,{children:"__Font_Default_Charset"}),")"]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Types for Idx_CharacterSet."}),"\n",(0,s.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Typeface"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"string - The name of the font (as reported / found by the operating system)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_PointSize"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"int - The size of the characters"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Bold"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - Whether the characters should be bold"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Italic"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"bool - Whether the characters should be italic"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_CharacterSet"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"#enum-characterset",children:"CharacterSet"})," (int) - (Windows only) Character set to use"]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Property index."}),"\n",(0,s.jsx)(t.h2,{id:"public-attributes-documentation",children:"Public Attributes Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"sm_maxfontsize",children:"sm_MaxFontSize"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"static const int sm_MaxFontSize = 150;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>c});var n=r(96540);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);