"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[2670],{84354:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-shadow-bounds-override","title":"Meta_ShadowBoundsOverride","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-shadow-bounds-override.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-shadow-bounds-override","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-shadow-bounds-override","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-shadow-bounds-override.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_ShadowBoundsOverride","summary":"A ShadowBoundsOverride allows a directional light\'s shadow bounds to be overridden depending on the camera position."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_ShaderSampler","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-shader-sampler"},"next":{"title":"Meta_SimulationTerrain","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-simulation-terrain"}}');var s=r(74848),i=r(28453);const o={title:"Meta_ShadowBoundsOverride",summary:"A ShadowBoundsOverride allows a directional light's shadow bounds to be overridden depending on the camera position."},t="Meta_ShadowBoundsOverride",a={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"meta_shadowboundsoverride",children:"Meta_ShadowBoundsOverride"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Module:"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(n.strong,{children:"/"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsxs)(n.p,{children:["A ShadowBoundsOverride allows a directional light's shadow bounds to be overridden depending on the camera position.  ",(0,s.jsx)(n.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,s.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Name"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"enum"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_ViewBoundsNode, Idx_ShadowBoundsNode }",(0,s.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"struct Meta_ShadowBoundsOverride;\n"})}),"\n",(0,s.jsx)(n.p,{children:"A ShadowBoundsOverride allows a directional light's shadow bounds to be overridden depending on the camera position."}),"\n",(0,s.jsx)(n.p,{children:"One or more of these nodes should be added as children of the light node."}),"\n",(0,s.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Enumerator"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Idx_ViewBoundsNode"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"link - Defines the bounding box of the region where the shadow map will be used."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Idx_ShadowBoundsNode"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"link - Defines the bounding box of the shadow map."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Property index."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var d=r(96540);const s={},i=d.createContext(s);function o(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);