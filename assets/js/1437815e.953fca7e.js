"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[1669],{74678:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material","title":"Meta_GUIMaterial","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_GUIMaterial","summary":"A GUIMaterial is a material that can specify its draw layer, so it may appear above or below other types of object."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_GuiHints","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-hints"},"next":{"title":"Meta_GuiOptionHint","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-option-hint"}}');var s=t(74848),n=t(28453);const a={title:"Meta_GUIMaterial",summary:"A GUIMaterial is a material that can specify its draw layer, so it may appear above or below other types of object."},d="Meta_GUIMaterial",l={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum Layer",id:"enum-layer",level:3}];function o(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"meta_guimaterial",children:"Meta_GUIMaterial"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Module:"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(r.strong,{children:"/"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(r.p,{children:"A GUIMaterial is a material that can specify its draw layer, so it may appear above or below other types of object."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"#include <meta_division.hpp>"})}),"\n",(0,s.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enum"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_LayerValue, Idx_Colour, Idx_Texture, Idx_DepthWrite, Idx_DepthTest, Idx_SubPixelAntiAlias, Idx_PremultipliedAlpha }",(0,s.jsx)("br",{}),"Property index."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enum"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#enum-layer",children:"Layer"})})," { Opaque, Transparent, SceneOverlay, ViewOverlay }",(0,s.jsx)("br",{}),"Values for the X element of Idx_LayerValue."]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Enumerator"}),(0,s.jsx)(r.th,{children:"Value"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_LayerValue"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"vec2i - Layer to draw in. X = a Layer, Y = offset within the layer (higher values are drawn later)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Colour"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"vec4f - Colour of the material (RGBA 0.0f to 1.0f)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Texture"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"link - Texture to apply"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_DepthWrite"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether to write to the depth buffer"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_DepthTest"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether to draw with depth testing (false will draw above all previously drawn objects regardless of their depth)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_SubPixelAntiAlias"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether to enable AA"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_PremultipliedAlpha"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - Whether to use premultiplied alpha"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Property index."}),"\n",(0,s.jsx)(r.h3,{id:"enum-layer",children:"enum Layer"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Enumerator"}),(0,s.jsx)(r.th,{children:"Value"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Opaque"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:["Draws in the Opaque layer (Symbols - C: ",(0,s.jsx)(r.code,{children:'"LayerOpaque"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__GUIMaterial_LayerOpaque"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Transparent"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:["Draws in the Transparent layer (Symbols - C: ",(0,s.jsx)(r.code,{children:'"LayerTransparent"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__GUIMaterial_LayerTransparent"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SceneOverlay"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:["Draws in the Scene Overlay layer (Symbols - C: ",(0,s.jsx)(r.code,{children:'"LayerSceneOverlay"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__GUIMaterial_LayerSceneOverlay"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ViewOverlay"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:["Draws in the View Overlay layer (Symbols - C: ",(0,s.jsx)(r.code,{children:'"LayerViewOverlay"'}),", Lua: ",(0,s.jsx)(r.code,{children:"__GUIMaterial_LayerViewOverlay"}),")"]})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Values for the X element of Idx_LayerValue."})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>d});var i=t(96540);const s={},n=i.createContext(s);function a(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);