"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[6434],{42927:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-property-link","title":"Meta_GUIPropertyLink","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-property-link.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-property-link","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-property-link","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-property-link.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_GUIPropertyLink","summary":"A GUIPropertyLink is a simple way of connecting Meta_Button, Meta_Slider, and Meta_ScrollBar toggle / change events to other node properties without using a Meta_EventHandler. This is a two-way link."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_GuiOrderHint","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-order-hint"},"next":{"title":"Meta_GUI","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui"}}');var i=n(74848),s=n(28453);const a={title:"Meta_GUIPropertyLink",summary:"A GUIPropertyLink is a simple way of connecting Meta_Button, Meta_Slider, and Meta_ScrollBar toggle / change events to other node properties without using a Meta_EventHandler. This is a two-way link."},o="Meta_GUIPropertyLink",d={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"meta_guipropertylink",children:"Meta_GUIPropertyLink"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Module:"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(r.strong,{children:"/"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsxs)(r.p,{children:["A GUIPropertyLink is a simple way of connecting ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-button",children:"Meta_Button"}),", ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-slider",children:"Meta_Slider"}),", and ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-scroll-bar",children:"Meta_ScrollBar"})," toggle / change events to other node properties without using a ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-event-handler",children:"Meta_EventHandler"}),". This is a two-way link."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"#include <meta_gui.hpp>"})}),"\n",(0,i.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"enum"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Node, Idx_Property, Idx_Attribute }",(0,i.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,i.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Enumerator"}),(0,i.jsx)(r.th,{children:"Value"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Enabled"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Node"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"bool - Whether the link is enabled"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Property"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"link - The node to connect the gui control to"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Attribute"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"string - The name of the property on the node to connect to  int - Specifies the index within the property value, if it is an array-type property"})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"Property index."})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var t=n(96540);const i={},s=t.createContext(i);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);