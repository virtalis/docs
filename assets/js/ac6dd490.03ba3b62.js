"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[89506],{90932:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/trait-abstracttrait","title":"Trait_AbstractTrait","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/trait-abstracttrait.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/trait-abstracttrait","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/trait-abstracttrait","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/trait-abstracttrait.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Trait_AbstractTrait","summary":"Trait used to identify other traits, allowing all registered traits to be identified by Trait_AbstractTrait::IsType to distinguish them from regular metanodes for code that needs to know that."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_ZSpaceViewport","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-z-space-viewport"},"next":{"title":"_TextureInfo","permalink":"/visionary-render-programming/reference/c-api/classes/texture-info"}}');var n=r(74848),s=r(28453);const a={title:"Trait_AbstractTrait",summary:"Trait used to identify other traits, allowing all registered traits to be identified by Trait_AbstractTrait::IsType to distinguish them from regular metanodes for code that needs to know that."},o="Trait_AbstractTrait",c={},d=[{value:"Public Functions",id:"public-functions",level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",level:2},{value:"DEFINE_TRAIT_RESOURCES",id:"define-trait-resources",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"trait_abstracttrait",children:"Trait_AbstractTrait"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Module:"})," ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,n.jsx)(t.strong,{children:"/"})," ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,n.jsx)(t.p,{children:"Trait used to identify other traits, allowing all registered traits to be identified by Trait_AbstractTrait::IsType to distinguish them from regular metanodes for code that needs to know that."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"#include <meta_semantics.hpp>"})}),"\n",(0,n.jsx)(t.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Name"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"#define-trait-resources",children:"DEFINE_TRAIT_RESOURCES"})}),'("AbstractTrait" )']})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"public-functions-documentation",children:"Public Functions Documentation"}),"\n",(0,n.jsx)(t.h3,{id:"define-trait-resources",children:"DEFINE_TRAIT_RESOURCES"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'DEFINE_TRAIT_RESOURCES(\r\n    "AbstractTrait" \r\n)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var i=r(96540);const n={},s=i.createContext(n);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);