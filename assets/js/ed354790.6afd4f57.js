"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[27808],{97851:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track","title":"Meta_PropertyTrack","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_PropertyTrack","summary":"A property track is a collection of animations to apply to a property of a specified node."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_PropSemantics","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-prop-semantics"},"next":{"title":"Meta_RecycleBin","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-recycle-bin"}}');var i=n(74848),s=n(28453);const a={title:"Meta_PropertyTrack",summary:"A property track is a collection of animations to apply to a property of a specified node."},o="Meta_PropertyTrack",c={},d=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"meta_propertytrack",children:"Meta_PropertyTrack"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Module:"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(r.strong,{children:"/"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsxs)(r.p,{children:["A property track is a collection of animations to apply to a property of a specified node.  ",(0,i.jsx)(r.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"#include <meta_division.hpp>"})}),"\n",(0,i.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Name"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"enum"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_State, Idx_Target, Idx_Property }",(0,i.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,i.jsx)(r.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:"struct Meta_PropertyTrack;\n"})}),"\n",(0,i.jsx)(r.p,{children:"A property track is a collection of animations to apply to a property of a specified node."}),"\n",(0,i.jsxs)(r.p,{children:["Valid child types: ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation",children:"Meta_Animation"}),", ",(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-animation-link",children:"Meta_AnimationLink"})]}),"\n",(0,i.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Enumerator"}),(0,i.jsx)(r.th,{children:"Value"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_State"}),(0,i.jsx)(r.td,{}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-assembly-track#enum-state",children:"State"})," (int) - Can this track be recorded into and played, played only, or neither"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Target"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"link - A node with a property to animate"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Idx_Property"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"int - The index of the property to animate"})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"Property index."})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var t=n(96540);const i={},s=t.createContext(i);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);