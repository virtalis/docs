"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[6320],{72968:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"visionary-render-programming/scripts/metanodes/lod-and-geogroup","title":"LOD and GeoGroup","description":"Level of Detail (LOD) nodes control the visibility of geogroups based on camera distance. Geogroup nodes contain renderable meshes.","source":"@site/docs/visionary-render-programming/scripts/metanodes/lod-and-geogroup.mdx","sourceDirName":"visionary-render-programming/scripts/metanodes","slug":"/visionary-render-programming/scripts/metanodes/lod-and-geogroup","permalink":"/visionary-render-programming/scripts/metanodes/lod-and-geogroup","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/scripts/metanodes/lod-and-geogroup.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Light","permalink":"/visionary-render-programming/scripts/metanodes/light"},"next":{"title":"Material","permalink":"/visionary-render-programming/scripts/metanodes/material"}}');var o=n(74848),t=n(28453);const s={},i="LOD and GeoGroup",l={},a=[{value:"LOD",id:"lod",level:2},{value:"Properties",id:"properties",level:3},{value:"Example",id:"example",level:3},{value:"GeoGroup",id:"geogroup",level:2},{value:"Properties",id:"properties-1",level:3},{value:"Cull Face Modes",id:"cull-face-modes",level:4},{value:"Draw Modes",id:"draw-modes",level:4},{value:"Example",id:"example-1",level:3}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"lod-and-geogroup",children:"LOD and GeoGroup"})}),"\n",(0,o.jsx)(r.p,{children:"Level of Detail (LOD) nodes control the visibility of geogroups based on camera distance. Geogroup nodes contain renderable meshes."}),"\n",(0,o.jsx)(r.h2,{id:"lod",children:"LOD"}),"\n",(0,o.jsx)(r.h3,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Property"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Enabled"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Enabled or disabled. When disabled, no models under this LOD are rendered."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"InOut"}),(0,o.jsx)(r.td,{children:"number[2]"}),(0,o.jsxs)(r.td,{children:["Distance between which this LOD is rendered (rendered when view is at least ",(0,o.jsx)(r.code,{children:"In"})," metres away, no longer rendered when further than ",(0,o.jsx)(r.code,{children:"Out"})," metres away)"]})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"RefPoint"}),(0,o.jsx)(r.td,{children:"number[3]"}),(0,o.jsx)(r.td,{children:"Local coordinate from which the LOD distance is calculated"})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(r.p,{children:"Simple script example which prints to the Log window details of the LOD including the in-out distances and the LOD reference point."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-lua",children:'-- Drag/Drop section BEGINS - Do not edit between BEGINS and ENDS.\r\nlocal LODX = __Script.dragdrop.LODX\r\n-- Drag/Drop section ENDS\r\n\r\n-- Simply prints out the attributes of a LOD\r\nprint(LODX.Enabled)\r\nprint("In distance ", LODX.InOut[1], " Out distance ", LODX.InOut[2])\r\nprint("Ref pt ", LODX.RefPoint)\n'})}),"\n",(0,o.jsx)(r.h2,{id:"geogroup",children:"GeoGroup"}),"\n",(0,o.jsx)(r.h3,{id:"properties-1",children:"Properties"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Property"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Enabled"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Enabled or disabled. When disabled, child meshes are not rendered."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Material"}),(0,o.jsx)(r.td,{children:"vrnode"}),(0,o.jsx)(r.td,{children:"Link to a material to render this GeoGroup with"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"CullFace"}),(0,o.jsx)(r.td,{children:"number"}),(0,o.jsx)(r.td,{children:"Cull face mode. See the Cull Face mode table below."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"LockMaterial"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Indicates if the material can be overridden on the Visual level."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"DrawMode"}),(0,o.jsx)(r.td,{children:"number"}),(0,o.jsx)(r.td,{children:"Draw mode overriding the values in the GeoGroups. See the Draw Mode table below."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"BakedLighting"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Apply the GeoGroup's stored baked lighting. NOTE: The GeoGroup needs to contain baked lighting information for this property to have any effect. This is usually read from imported files."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"ShadowCaster"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Indicates that the GeoGroup should cast shadows when lit by a shadow casting light."})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"IgnoreCoverageLOD"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Indicates whether this GeoGroup should ignore the coverage LOD setting and render even when failing the test."})]})]})]}),"\n",(0,o.jsx)(r.h4,{id:"cull-face-modes",children:"Cull Face Modes"}),"\n",(0,o.jsx)(r.p,{children:"These modes control which faces of geometry in the model are rendered."}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Mode"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_CullFaceNone"})}),(0,o.jsx)(r.td,{children:"Does not cull any faces (both back and front are drawn)"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_CullFaceBack"})}),(0,o.jsx)(r.td,{children:"Culls back faces"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_CullFaceFront"})}),(0,o.jsx)(r.td,{children:"Culls front faces"})]})]})]}),"\n",(0,o.jsx)(r.h4,{id:"draw-modes",children:"Draw Modes"}),"\n",(0,o.jsx)(r.p,{children:"These modes control how the model is rendered"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Mode"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_DrawModeSolid"})}),(0,o.jsx)(r.td,{children:"Forces solid rendering (model faces are filled)"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_DrawModeLines"})}),(0,o.jsx)(r.td,{children:"Forces line rendering (model is drawn as wireframe)"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"__GeoGroup_DrawModePoints"})}),(0,o.jsx)(r.td,{children:"Forces point rendering (only the vertices are drawn)"})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(r.p,{children:"Simple script which checks the current DrawMode of a GeoGroup and changes it to the next possible Mode. This script would typically be called on a keypress event."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-lua",children:'-- Drag/Drop section BEGINS - Do not edit between BEGINS and ENDS.\r\nlocal Geo = __Script.dragdrop.Geo\r\n-- Drag/Drop section ENDS\r\n\r\n-- Geogroup example\r\n\r\n-- Simple check of current GeoGroup DrawMode\r\n-- then change it to another mode\r\nif Geo.DrawMode == __GeoGroup_DrawModeSolid then\r\n   print("__GeoGroup_DrawModeSolid")\r\n   Geo.DrawMode = __GeoGroup_DrawModeLines\r\nelseif Geo.DrawMode == __GeoGroup_DrawModeLines then\r\n   print("__GeoGroup_DrawModeLines")\r\n   Geo.DrawMode = __GeoGroup_DrawModePoints\r\nelseif Geo.DrawMode == __GeoGroup_DrawModePoints then\r\n   print("__GeoGroup_DrawModePoints")\r\n   Geo.DrawMode = __GeoGroup_DrawModeSolid\r\nend\n'})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var d=n(96540);const o={},t=d.createContext(o);function s(e){const r=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),d.createElement(t.Provider,{value:r},e.children)}}}]);