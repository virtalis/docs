"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[2907],{66659:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-point-cloud","title":"Meta_PointCloud","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-point-cloud.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-point-cloud","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-point-cloud","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-point-cloud.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_PointCloud","summary":"A PointCloud renders a file containing points, generated using the point cloud converter utility."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_Pivot","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-pivot"},"next":{"title":"Meta_PointerController","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-pointer-controller"}}');var i=t(74848),s=t(28453);const d={title:"Meta_PointCloud",summary:"A PointCloud renders a file containing points, generated using the point cloud converter utility."},o="Meta_PointCloud",l={},a=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"meta_pointcloud",children:"Meta_PointCloud"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Module:"})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(n.strong,{children:"/"})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsx)(n.p,{children:"A PointCloud renders a file containing points, generated using the point cloud converter utility."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"#include <meta_pointcloud.hpp>"})}),"\n",(0,i.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Name"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Filename, Idx_Brightness, Idx_UseColourAttribute, Idx_PointSize, Idx_LODScale, Idx_GradientFile, Idx_Gradient, Idx_GradientEnabled, Idx_IntensityMap, Idx_NormalChannel, Idx_AlphaThreshold }",(0,i.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Enabled"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bool - Enables the cloud rendering"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Filename"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"string - Path to the point cloud file"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Brightness"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - Scale the brightness of the points"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_UseColourAttribute"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bool - Colour the points according to their colour attribute in the points file"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_PointSize"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - The size each point should be drawn in the scene"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_LODScale"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - Scales the level of detail threshold"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_GradientFile"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"string - Path to a file to use as a gradient"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Gradient"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"link - Texture to use as a gradient instead of a file"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_GradientEnabled"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bool - Use the gradient to colour the points, mapped along the vertical axis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_IntensityMap"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bool - Use the red channel of the point cloud for gradient mapping"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_NormalChannel"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bool - If the point cloud contains normals, draw them"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_AlphaThreshold"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - determines if a point is visible based on it's alpha value"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Property index."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var r=t(96540);const i={},s=r.createContext(i);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);