"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[1190],{78160:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"visionary-render-programming/scripts/metanodes/settings","title":"Settings","description":"Visionary Render allows control over user and scene settings using the Lua API","source":"@site/docs/visionary-render-programming/scripts/metanodes/settings.mdx","sourceDirName":"visionary-render-programming/scripts/metanodes","slug":"/visionary-render-programming/scripts/metanodes/settings","permalink":"/visionary-render-programming/scripts/metanodes/settings","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/scripts/metanodes/settings.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Sequence","permalink":"/visionary-render-programming/scripts/metanodes/sequence"},"next":{"title":"Visual","permalink":"/visionary-render-programming/scripts/metanodes/visual"}}');var i=r(74848),s=r(28453),a=r(65537),l=r(79329);const c={},o="Settings",d={},u=[{value:"vrSettingRead",id:"vrsettingread",level:2},{value:"vrSettingWrite",id:"vrsettingwrite",level:2},{value:"vrSettingGet",id:"vrsettingget",level:2},{value:"Scene Overrides and Settings",id:"scene-overrides-and-settings",level:2},{value:"Add Override",id:"add-override",level:3},{value:"Remove Override",id:"remove-override",level:3},{value:"Add Scene Settings in Lua",id:"add-scene-settings-in-lua",level:3},{value:"Observe Settings",id:"observe-settings",level:2},{value:"vrAddSettingObserver",id:"vraddsettingobserver",level:3},{value:"vrRemoveObserver",id:"vrremoveobserver",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"settings",children:"Settings"})}),"\n",(0,i.jsx)(n.p,{children:"Visionary Render allows control over user and scene settings using the Lua API\r\nThe Lua API works transparently with Scene Overrides \u2013 the API functions for accessing setting values always apply to the value that is currently active, whether that is the scene override value or the user value."}),"\n",(0,i.jsx)(n.h2,{id:"vrsettingread",children:"vrSettingRead"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local clipPlanes = vrSettingRead("Renderer/Scene/ClipRange")\r\n\r\nprint(clipPlanes)\r\nprint(clipPlanes.x)\r\nprint(clipPlanes.y)\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\n0.100, 1000.000\r\n0.10000000149\r\n1000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"vrsettingwrite",children:"vrSettingWrite"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrSettingWrite("Renderer/Scene/ClipRange", {0.3, 500.0})\r\n\r\nlocal clipPlanes = vrSettingRead("Renderer/Scene/ClipRange")\r\nprint(clipPlanes)\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\n0.300, 500.000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"vrsettingget",children:"vrSettingGet"}),"\n",(0,i.jsx)(n.p,{children:"Lua can also get a handle to the setting and its value, which can be used for reading and writing."}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local clipPlanes = vrSettingGet("Renderer/Scene/ClipRange")\r\n\r\nprint(clipPlanes)\r\nprint(clipPlanes.Value)\r\nprint(clipPlanes.Value.x)\r\nprint(clipPlanes.Value.y)\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\nSetting: [000000004E90D2A0, path:Renderer/Scene/ClipRange]\r\n0.100, 1000.000\r\n0.10000000149\r\n1000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"scene-overrides-and-settings",children:"Scene Overrides and Settings"}),"\n",(0,i.jsx)(n.p,{children:"The Lua interface is capable of adding and removing scene overrides of user settings"}),"\n",(0,i.jsx)(n.h3,{id:"add-override",children:"Add Override"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrSettingAddToScene("Renderer/Scene/ClipRange", {0,0})\r\nvrSettingWrite("Renderer/Scene/ClipRange", {1.0, 200.0})\r\n\r\nprint(vrSettingRead("Renderer/Scene/ClipRange"))\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\n1.000, 200.000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.p,{children:"The first parameter to vrSettingAddToScene is the default value to assign if the setting does not exist in the system registry. (see Adding scene settings.) We then set the value of the setting, which applies it to the copy in the scene rather than the user setting."}),"\n",(0,i.jsx)(n.h3,{id:"remove-override",children:"Remove Override"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrSettingRemoveFromScene("Renderer/Scene/ClipRange")\r\n\r\nprint(vrSettingRead("Renderer/Scene/ClipRange"))\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\n0.300, 500.000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.p,{children:"The scene override has been removed and the value is read from the user setting."}),"\n",(0,i.jsx)(n.h3,{id:"add-scene-settings-in-lua",children:"Add Scene Settings in Lua"}),"\n",(0,i.jsx)(n.p,{children:"The Lua interface can also add new settings specifically for the scene providing the script. These settings are not saved in the user registry, only with the scene. They do, however, automatically trigger the generation of a new Settings category to allow instant user interaction with scene configuration settings."}),"\n",(0,i.jsx)(n.p,{children:"The same function is used for this, vrSettingAddToScene."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrSettingAddToScene("MyScene/CustomSetting", 5)\n'})}),"\n",(0,i.jsx)(n.p,{children:"This results in an additional category in the settings interface, and an interface control for editing the setting value."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:r(41167).A+"",width:"736",height:"337"})}),"\n",(0,i.jsx)(n.p,{children:"Removing this setting with vrSettingRemoveFromScene will remove this category from the settings window."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrSettingRemoveFromScene("MyScene/CustomSetting")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"observe-settings",children:"Observe Settings"}),"\n",(0,i.jsx)(n.p,{children:"If querying the setting regularly is not convenient, the values can be observed"}),"\n",(0,i.jsx)(n.h3,{id:"vraddsettingobserver",children:"vrAddSettingObserver"}),"\n",(0,i.jsx)(n.p,{children:"This function makes use of the capability of passing local Lua functions into the API to be called later. The following line of code provides a simple function to print the value of a setting whenever it changes. Whenever the Clip Planes setting in the Renderer/Scene category is changed (e.g. by the user interface), the script will print the new value of the setting."}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"script",label:"Script",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrAddSettingObserver("clipobs", function(value) print(value) end, "Renderer/Scene/ClipRange")\n'})})}),(0,i.jsx)(l.A,{value:"output",label:"Output",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Running...\r\n0.310, 500.000\r\n0.320, 500.000\r\n0.330, 500.000\r\n0.320, 500.000\r\n0.310, 500.000\r\n0.300, 500.000\r\nEnded.\n"})})})]}),"\n",(0,i.jsx)(n.p,{children:"This doesn\u2019t have to be an anonymous function, either, it can be a separate function defined locally or globally, and can also accept a string as the name of a global function."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local function printer(value) \r\n  print(value) \r\nend\r\n\r\nvrAddSettingObserver("clipobs", printer, "Renderer/Scene/ClipRange")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"vrremoveobserver",children:"vrRemoveObserver"}),"\n",(0,i.jsx)(n.p,{children:"As with all other Lua observers, a setting observer is removed using its key with a call to vrRemoveObserver"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'vrRemoveObserver("clipobs")\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},79329:(e,n,r)=>{r.d(n,{A:()=>a});r(96540);var t=r(34164);const i={tabItem:"tabItem_Ymn6"};var s=r(74848);function a({children:e,hidden:n,className:r}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,r),hidden:n,children:e})}},65537:(e,n,r)=>{r.d(n,{A:()=>y});var t=r(96540),i=r(34164),s=r(65627),a=r(56347),l=r(50372),c=r(30604),o=r(11861),d=r(78749);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function g({value:e,tabValues:n}){return n.some((n=>n.value===e))}function v({queryString:e=!1,groupId:n}){const r=(0,a.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function p(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=h(e),[a,c]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[o,u]=v({queryString:r,groupId:i}),[p,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,d.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),f=(()=>{const e=o??p;return g({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&c(f)}),[f]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var m=r(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function x({className:e,block:n,selectedValue:r,selectValue:t,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),o=e=>{const n=e.currentTarget,i=l.indexOf(n),s=a[i].value;s!==r&&(c(n),t(s))},d=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:a.map((({value:e,label:n,attributes:t})=>(0,b.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:o,...t,className:(0,i.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function j({lazy:e,children:n,selectedValue:r}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function S(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,b.jsx)(x,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,b.jsx)(S,{...e,children:u(e.children)},String(n))}},41167:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/custom-scene-setting-d95c0b6c07b694b3957ec232977f5208.png"},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);