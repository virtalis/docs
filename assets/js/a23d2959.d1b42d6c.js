"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[30978],{88305:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence","title":"Meta_Sequence","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_Sequence","summary":"A sequence is a collection of tracks that animate target nodes. Valid child types - Meta_AssemblyTrack, Meta_PropertyTrack, Meta_SequenceTrack."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_SequenceTrack","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track"},"next":{"title":"Meta_ShaderSampler","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-shader-sampler"}}');var r=t(74848),d=t(28453);const i={title:"Meta_Sequence",summary:"A sequence is a collection of tracks that animate target nodes. Valid child types - Meta_AssemblyTrack, Meta_PropertyTrack, Meta_SequenceTrack."},a="Meta_Sequence",c={},l=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum InitialState",id:"enum-initialstate",level:3},{value:"enum PlayMode",id:"enum-playmode",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"meta_sequence",children:"Meta_Sequence"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Module:"})," ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,r.jsx)(s.strong,{children:"/"})," ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,r.jsxs)(s.p,{children:["A sequence is a collection of tracks that animate target nodes Valid child types: ",(0,r.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-assembly-track",children:"Meta_AssemblyTrack"}),", ",(0,r.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-property-track",children:"Meta_PropertyTrack"}),", ",(0,r.jsx)(s.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track",children:"Meta_SequenceTrack"}),"."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,r.jsx)(s.h2,{id:"public-types",children:"Public Types"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Name"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"enum"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Position, Idx_Length, Idx_PlayMode, Idx_PlayCount, Idx_PlaySpeed, Idx_FixedPlaySpeed, Idx_PlayUser, Idx_InitialState, Idx_InitialPosition, Idx_DisableSceneVisuals, Idx_DisableActions, Idx_Looped, Idx_LoopStart, Idx_LoopEnd }",(0,r.jsx)("br",{}),"Property index."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"enum"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"#enum-initialstate",children:"InitialState"})})," { STATE_PAUSE, STATE_PLAY_FORWARDS, STATE_PLAY_BACKWARDS }",(0,r.jsx)("br",{}),"Values for Idx_InitialState."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"enum"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"#enum-playmode",children:"PlayMode"})})," { PLAY_FORWARDS, PLAY_BACKWARDS }",(0,r.jsx)("br",{}),"Values for Idx_PlayMode."]})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,r.jsx)(s.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Enumerator"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_Enabled"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"bool - If true, the animation actor will timestep this sequence's Idx_Position each frame until it reaches Idx_Length, at which point the sequence will be looped or disabled"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_Position"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - The current time in seconds that the sequence is set to"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_Length"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - The length of the sequence in seconds (as calculated by the animation actor)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_PlayMode"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"PlayMode (int) - Whether to play the sequence forwards or backwards when it is enabled"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_PlayCount"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"int - The number of times to play the sequence (or part of it, as defined by Idx_LoopStart and Idx_LoopEnd). If < 0, the sequence will loop forever"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_PlaySpeed"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - Playback rate (0.5 = half speed, 2.0 = double speed, etc.)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_FixedPlaySpeed"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"bool - If true, this sequence will ignore the global play speed setting"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_PlayUser"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"link - The last user to interact with this sequence. This is used when collaborating to make camera tracks affect the user who triggered the sequence"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_InitialState"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"InitialState (int) - The state of the sequence when the scene is loaded"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_InitialPosition"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - The start time in seconds of the sequence when the scene is loaded"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_DisableSceneVisuals"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"bool - If true, don't draw visuals in the 3D scene for this sequence. This can improve performance in sequences with lots of keyframes (such as mocap data)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_DisableActions"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"bool - If true, ignore any action frames in this sequence. This can improve performance slightly in sequences without action frames"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_Looped"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"bool - If true, the sequence just looped around at the previous timestep. This value will be reset at the next timestep, and can be queried to prevent actions from being executed whilst looping, etc."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_LoopStart"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - The start time in seconds of the looped part of the sequence"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Idx_LoopEnd"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"float - The end time in seconds of the looped part of the sequence. If zero, loop the whole sequence"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Property index."}),"\n",(0,r.jsx)(s.h3,{id:"enum-initialstate",children:"enum InitialState"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Enumerator"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"STATE_PAUSE"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["Sequence is paused when initially loaded from file (Symbols - C: ",(0,r.jsx)(s.code,{children:'"StatePause"'}),", Lua: ",(0,r.jsx)(s.code,{children:"__Sequence_StatePause"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"STATE_PLAY_FORWARDS"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["Sequence is playing fowards when initially loaded from file (Symbols - C: ",(0,r.jsx)(s.code,{children:'"StatePlayForwards"'}),", Lua: ",(0,r.jsx)(s.code,{children:"__Sequence_StatePlayForwards"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"STATE_PLAY_BACKWARDS"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["Sequence is playing backwards when initially loaded from file (Symbols - C: ",(0,r.jsx)(s.code,{children:'"StatePlayBackwards"'}),", Lua: ",(0,r.jsx)(s.code,{children:"__Sequence_StatePlayBackwards"}),")"]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Values for Idx_InitialState."}),"\n",(0,r.jsx)(s.h3,{id:"enum-playmode",children:"enum PlayMode"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Enumerator"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"PLAY_FORWARDS"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["Sequence plays forwards when enabled (Symbols - C: ",(0,r.jsx)(s.code,{children:'"PlayForwards"'}),", Lua: ",(0,r.jsx)(s.code,{children:"__Sequence_PlayForwards"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"PLAY_BACKWARDS"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{children:["Sequence plays backwards when enabled (Symbols - C: ",(0,r.jsx)(s.code,{children:'"PlayBackwards"'}),", Lua: ",(0,r.jsx)(s.code,{children:"__Sequence_PlayBackwards"}),")"]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Values for Idx_PlayMode."})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var n=t(96540);const r={},d=n.createContext(r);function i(e){const s=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(d.Provider,{value:s},e.children)}}}]);