"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[593],{5897:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-view","title":"Meta_View","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-view.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-view","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-view","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-view.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_View","summary":"a View can be inserted at any point in the scene, and will be rendered into either the framebuffer or any child RenderTarget\'s there may be."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_ViewShader","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-view-shader"},"next":{"title":"Meta_ViewpointList","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-viewpoint-list"}}');var t=i(74848),s=i(28453);const d={title:"Meta_View",summary:"a View can be inserted at any point in the scene, and will be rendered into either the framebuffer or any child RenderTarget's there may be."},a="Meta_View",c={},l=[{value:"Public Types",id:"public-types",level:2},{value:"Public Functions",id:"public-functions",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3},{value:"Public Functions Documentation",id:"public-functions-documentation",level:2},{value:"Meta_View",id:"meta_view-1",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"meta_view",children:"Meta_View"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Module:"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,t.jsx)(n.strong,{children:"/"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,t.jsx)(n.p,{children:"a View can be inserted at any point in the scene, and will be rendered into either the framebuffer or any child RenderTarget's there may be."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"#include <meta_division.hpp>"})}),"\n",(0,t.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Name"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"enum"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Projection, Idx_Viewport, Idx_Scene, Idx_LODScale }"]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Name"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#meta_view-1",children:"Meta_View"})}),"()"]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Enumerator"}),(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_Enabled"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_Projection"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"the projection matrix to use for the render."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_Viewport"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"the viewport to use for the render (x,y,width,height)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_Scene"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"link to a scenegraph node to render."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Idx_LODScale"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"scale to apply to camera distance when evaluating level-of-detail nodes. For example, if it's 0.0f the highest resolution lod will always be selected."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"public-functions-documentation",children:"Public Functions Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"meta_view-1",children:"Meta_View"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"inline Meta_View()\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var r=i(96540);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);