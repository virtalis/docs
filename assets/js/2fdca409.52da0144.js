"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[8626],{67031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"visionary-render-programming/reference/c-api/definitions/types","title":"Types","description":"Defines the data types used for object handle parameters to API functions.","source":"@site/docs/visionary-render-programming/reference/c-api/definitions/types.mdx","sourceDirName":"visionary-render-programming/reference/c-api/definitions","slug":"/visionary-render-programming/reference/c-api/definitions/types","permalink":"/visionary-render-programming/reference/c-api/definitions/types","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/definitions/types.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Types","summary":"Defines the data types used for object handle parameters to API functions."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Logging Flags","permalink":"/visionary-render-programming/reference/c-api/definitions/logging-flags"},"next":{"title":"Metanodes","permalink":"/visionary-render-programming/reference/c-api/modules/metanodes/"}}');var s=n(74848),d=n(28453);const i={title:"Types",summary:"Defines the data types used for object handle parameters to API functions."},a="Types",l={},c=[{value:"Classes",id:"classes",level:2},{value:"Types",id:"types-1",level:2},{value:"Types Documentation",id:"types-documentation",level:2},{value:"typedef HAuth",id:"typedef-hauth",level:3},{value:"typedef HFFIVar",id:"typedef-hffivar",level:3},{value:"typedef HMeta",id:"typedef-hmeta",level:3},{value:"typedef HMigration",id:"typedef-hmigration",level:3},{value:"typedef HNode",id:"typedef-hnode",level:3},{value:"typedef HUserSlot",id:"typedef-huserslot",level:3},{value:"typedef TextureInfo",id:"typedef-textureinfo",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"types",children:"Types"})}),"\n",(0,s.jsx)(t.p,{children:"Defines the data types used for object handle parameters to API functions."}),"\n",(0,s.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/classes/texture-info",children:"_TextureInfo"})})})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"types-1",children:"Types"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct SecurityContextHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-hauth",children:"HAuth"})})," ",(0,s.jsx)("br",{}),"A handle to a security context."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct FFIVarHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-hffivar",children:"HFFIVar"})})," ",(0,s.jsx)("br",{}),"A handle to a variable passed through the foreign function interface (FFI)"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct MetaHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-hmeta",children:"HMeta"})})," ",(0,s.jsx)("br",{}),"A handle to a VRTree metanode."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct MigrationHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-hmigration",children:"HMigration"})})," ",(0,s.jsx)("br",{}),"A handle to a migration description."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct NodeHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-hnode",children:"HNode"})})," ",(0,s.jsx)("br",{}),"A handle to a VRTree node."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct UserDataHandle *"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-huserslot",children:"HUserSlot"})})," ",(0,s.jsx)("br",{}),"A handle to a userdata slot on a VRTree node."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typedef struct _TextureInfo"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#typedef-textureinfo",children:"TextureInfo"})})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"types-documentation",children:"Types Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"typedef-hauth",children:"typedef HAuth"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct SecurityContextHandle* HAuth;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a security context."}),"\n",(0,s.jsx)(t.h3,{id:"typedef-hffivar",children:"typedef HFFIVar"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct FFIVarHandle* HFFIVar;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a variable passed through the foreign function interface (FFI)"}),"\n",(0,s.jsx)(t.h3,{id:"typedef-hmeta",children:"typedef HMeta"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct MetaHandle* HMeta;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a VRTree metanode."}),"\n",(0,s.jsx)(t.h3,{id:"typedef-hmigration",children:"typedef HMigration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct MigrationHandle* HMigration;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a migration description."}),"\n",(0,s.jsx)(t.h3,{id:"typedef-hnode",children:"typedef HNode"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct NodeHandle* HNode;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a VRTree node."}),"\n",(0,s.jsx)(t.h3,{id:"typedef-huserslot",children:"typedef HUserSlot"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct UserDataHandle* HUserSlot;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A handle to a userdata slot on a VRTree node."}),"\n",(0,s.jsx)(t.h3,{id:"typedef-textureinfo",children:"typedef TextureInfo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"typedef struct _TextureInfo  TextureInfo;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const s={},d=r.createContext(s);function i(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);