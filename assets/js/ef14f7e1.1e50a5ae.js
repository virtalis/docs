"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[26],{80402:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-value","title":"Meta_MetaValue","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-value.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-value","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-value","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-value.mdx","tags":[],"version":"current","frontMatter":{"title":"Meta_MetaValue","summary":"A MetaValue provides a description of a property on a metanode."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_MetaRoot","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-root"},"next":{"title":"Meta_ModelMarkerStyle","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-model-marker-style"}}');var s=r(74848),i=r(28453);const a={title:"Meta_MetaValue",summary:"A MetaValue provides a description of a property on a metanode."},d="Meta_MetaValue",o={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"meta_metavalue",children:"Meta_MetaValue"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Module:"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(t.strong,{children:"/"})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(t.p,{children:"A MetaValue provides a description of a property on a metanode."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"#include <meta_root.hpp>"})}),"\n",(0,s.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Name"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enum"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Offset, Idx_Type, Idx_Count, Idx_DataSize, Idx_InitData }",(0,s.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Enumerator"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Offset"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"int"})," - (internal) Byte offset into a node's value buffer where this property data is stored"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Type"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"int"})," - The type of value stored in this property"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_Count"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"int"})," - The number of values stored (e.g. 1 for a single value, 4 for an array of 4 values, etc)"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_DataSize"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"int"})," - The total number of bytes used by this property"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Idx_InitData"}),(0,s.jsx)(t.td,{}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"vector<char>"})," - The data to initialise this property with for new node instances"]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Property index."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>d});var n=r(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);