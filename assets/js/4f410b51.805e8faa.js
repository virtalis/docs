"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[91608],{19037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"visionary-render/renderer/dynamic-sections","title":"Dynamic Sections","description":"A Dynamic Section is a plane that can be used to clip geometry in your scenes. It removes all the geometry to one side of the plane and can be applied to standard geometry, point clouds and scene GUI. They permit designers to visually inspect sections of their products such as the internals of a wind turbine.","source":"@site/docs/visionary-render/renderer/dynamic-sections.mdx","sourceDirName":"visionary-render/renderer","slug":"/visionary-render/renderer/dynamic-sections","permalink":"/visionary-render/renderer/dynamic-sections","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render/renderer/dynamic-sections.mdx","tags":[],"version":"current","lastUpdatedAt":1741279868000,"frontMatter":{},"sidebar":"visionaryRenderSidebar","previous":{"title":"View Widget","permalink":"/visionary-render/windows/view-widget"},"next":{"title":"Lights","permalink":"/visionary-render/renderer/lights"}}');var s=n(74848),r=n(28453);const c={},o="Dynamic Sections",d={},a=[{value:"Create",id:"create",level:2},{value:"Properties",id:"properties",level:2},{value:"Settings",id:"settings",level:2}];function l(e){const t={admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"dynamic-sections",children:"Dynamic Sections"})}),"\n",(0,s.jsx)(t.p,{children:"A Dynamic Section is a plane that can be used to clip geometry in your scenes. It removes all the geometry to one side of the plane and can be applied to standard geometry, point clouds and scene GUI. They permit designers to visually inspect sections of their products such as the internals of a wind turbine."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(43640).A+"",width:"1380",height:"731"})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Visionary Render can support up to 6 dynamic sections at once."})}),"\n",(0,s.jsx)(t.h2,{id:"create",children:"Create"}),"\n",(0,s.jsxs)(t.p,{children:["To create a Dynamic Section, right-click on the Scenes node in the Data window and select ",(0,s.jsx)(t.strong,{children:"Create"})," > ",(0,s.jsx)(t.strong,{children:"Dynamic Section"})," from the context menu. This will create a Dynamic Section node beneath a Dynamic Section List called Sections."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(201).A+"",width:"318",height:"283"})}),"\n",(0,s.jsxs)(t.p,{children:["You can organise several Dynamic Sections in your scene beneath this list. Dynamic Sections can also be parented to Assemblies. To do this, right-click on an Assembly and select ",(0,s.jsx)(t.strong,{children:"Create"})," > ",(0,s.jsx)(t.strong,{children:"Dynamic Section"}),". When a Dynamic Section is parented to an Assembly it will only clip the parent Assembly and its children."]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(95118).A+"",width:"318",height:"283"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Enabled"}),(0,s.jsxs)(t.td,{children:["Simple flag to indicate whether a section is enabled. ",(0,s.jsx)(t.em,{children:"[default: true]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Visible"}),(0,s.jsxs)(t.td,{children:["Draw a plane in the scene to indicate the position and orientation of the section. ",(0,s.jsx)(t.em,{children:"[default: true]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Enable Caps"}),(0,s.jsxs)(t.td,{children:["Fill in the gaps in geometry caused by the section clipping it (i.e. cap it off). ",(0,s.jsx)(t.em,{children:"[default: false]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Alignment"}),(0,s.jsxs)(t.td,{children:["The initial plane alignment of the section. There are 4 options: XY, XZ, YZ and Custom. These just represent default values \u2013 the orientation of the section can be changed to a custom value from the properties of the parent Assembly (in which case, the Custom option will be automatically set). ",(0,s.jsx)(t.em,{children:"[default: XY]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Invert"}),(0,s.jsxs)(t.td,{children:["Swap the side of the plane to clip geometry from. ",(0,s.jsx)(t.em,{children:"[default: false]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Section Link"}),(0,s.jsxs)(t.td,{children:["The Assembly to apply the section to (including its children). Typically this will be the Scenes node so that the section is applied to the whole scene. ",(0,s.jsx)(t.em,{children:"[default: parent node]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Opacity"}),(0,s.jsxs)(t.td,{children:["The transparency of the section plane if the Visible property is enabled. ",(0,s.jsx)(t.em,{children:"[default: 0.5]"})]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"settings",children:"Settings"}),"\n",(0,s.jsxs)(t.p,{children:["Dynamic sections can be configured via ",(0,s.jsx)(t.strong,{children:"Settings"})," > ",(0,s.jsx)(t.strong,{children:"Dynamic Sections"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(80942).A+"",width:"652",height:"442"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Setting"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Colour"}),(0,s.jsxs)(t.td,{children:["The colour to apply to section planes. ",(0,s.jsx)(t.em,{children:"[default: white]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Selection Mode"}),(0,s.jsxs)(t.td,{children:["The selection behaviour of section planes. There are 3 options",":Disable"," \u2013 prevent section planes for being selectable.Plane \u2013 click anywhere on a section plane to select it.Edge of Plane \u2013 click near the edge of a section plane to select it. ",(0,s.jsx)(t.em,{children:"[default]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Assign To Scene Root"}),(0,s.jsxs)(t.td,{children:["Create sections with their Section Link property set to the Scenes node (to apply the section to the entire scene). Otherwise, new sections will be applied to their parent Assemblies. ",(0,s.jsx)(t.em,{children:"[default: false]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Size on Drop"}),(0,s.jsxs)(t.td,{children:["When enabled, moving sections will not update their visual bounds until the movement is complete. This can improve performance when clipping complex Assemblies by reducing the number of sizing calculations performed during dragging. ",(0,s.jsx)(t.em,{children:"[default: true]"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Opacity"}),(0,s.jsxs)(t.td,{children:["The default opacity to apply to new sections. ",(0,s.jsx)(t.em,{children:"[default: 0.5]"})]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},43640:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/overview-73057dd4fa22eeec1ae33f7bfb911385.png"},95118:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/properties-d102ee623bf2e1d5cc49857fcbf60757.png"},80942:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/settings-b873ca9ad6e73fc7f200195e52ba1458.png"},201:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/tree-7f67297ae8c7c0371eafe53c75f46036.png"},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);