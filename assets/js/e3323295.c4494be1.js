"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[45193],{39425:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-base","title":"Meta_MetaBase","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-base.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-base","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-base","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-base.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_MetaBase","summary":"If a MetaNode has a MetaBase child, the name of that child is the name of another metanode that this one is a clone of."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_MessageQueue","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-message-queue"},"next":{"title":"Meta_MetaDataBool","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-meta-data-bool"}}');var s=t(74848),r=t(28453);const o={title:"Meta_MetaBase",summary:"If a MetaNode has a MetaBase child, the name of that child is the name of another metanode that this one is a clone of."},i="Meta_MetaBase",c={},d=[];function m(e){const a={a:"a",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"meta_metabase",children:"Meta_MetaBase"})}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Module:"})," ",(0,s.jsx)(a.strong,{children:(0,s.jsx)(a.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(a.strong,{children:"/"})," ",(0,s.jsx)(a.strong,{children:(0,s.jsx)(a.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(a.p,{children:"If a MetaNode has a MetaBase child, the name of that child is the name of another metanode that this one is a clone of."}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"#include <meta_root.hpp>"})})]})}function l(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>i});var n=t(96540);const s={},r=n.createContext(s);function o(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);