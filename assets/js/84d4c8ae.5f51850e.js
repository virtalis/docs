"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[284],{24557:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"virtalis-hub-system-admin/configure/authentication","title":"Authentication with External Systems","description":"In addition to users of Virtalis Hub being able to upload files for importing via the Hub\u2019s user interface, Virtalis Hub can also download files from external locations. Examples are PLM systems such as Windchill or TeamCenter, which can be extended to notify Virtalis Hub of data changes.","source":"@site/docs/virtalis-hub-system-admin/configure/authentication.mdx","sourceDirName":"virtalis-hub-system-admin/configure","slug":"/virtalis-hub-system-admin/configure/authentication","permalink":"/virtalis-hub-system-admin/configure/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/virtalis-hub-system-admin/configure/authentication.mdx","tags":[],"version":"current","lastUpdatedAt":1740107398000,"frontMatter":{},"sidebar":"virtalisHubSystemAdminSidebar","previous":{"title":"Install the Translator Plugins","permalink":"/virtalis-hub-system-admin/setup/translator-plugin"},"next":{"title":"Automated Backup System","permalink":"/virtalis-hub-system-admin/configure/automated-backup"}}');var i=t(74848),s=t(28453);const o={},a="Authentication with External Systems",l={},c=[{value:"Supported Authentication Modes",id:"supported-authentication-modes",level:2},{value:"None",id:"none",level:3},{value:"Basic",id:"basic",level:3},{value:"Bearer Token",id:"bearer-token",level:3},{value:"CustomAuthHeader",id:"customauthheader",level:3},{value:"ServiceAccount",id:"serviceaccount",level:3},{value:"OAuth2ClientCredentials",id:"oauth2clientcredentials",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Translator Service",id:"translator-service",level:3},{value:"Job API",id:"job-api",level:2},{value:"Common Properties",id:"common-properties",level:2},{value:"Hostname",id:"hostname",level:3},{value:"AuthType",id:"authtype",level:3},{value:"Basic Mode Properties",id:"basic-mode-properties",level:3},{value:"ServiceAccount Mode Properties",id:"serviceaccount-mode-properties",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"authentication-with-external-systems",children:"Authentication with External Systems"})}),"\n",(0,i.jsx)(n.p,{children:"In addition to users of Virtalis Hub being able to upload files for importing via the Hub\u2019s user interface, Virtalis Hub can also download files from external locations. Examples are PLM systems such as Windchill or TeamCenter, which can be extended to notify Virtalis Hub of data changes."}),"\n",(0,i.jsx)(n.p,{children:"Often these URLs are protected, meaning that in order for the download to succeed, the authentication scheme and credentials must be configured. This section explains how to do this."}),"\n",(0,i.jsx)(n.h2,{id:"supported-authentication-modes",children:"Supported Authentication Modes"}),"\n",(0,i.jsx)(n.h3,{id:"none",children:"None"}),"\n",(0,i.jsx)(n.p,{children:"The resource is not protected and can be downloaded without any additional authentication steps"}),"\n",(0,i.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,i.jsx)(n.p,{children:"The resource is protected with basic authentication. For example, it will require a valid username and password, supplied by the site administrator"}),"\n",(0,i.jsx)(n.h3,{id:"bearer-token",children:"Bearer Token"}),"\n",(0,i.jsx)(n.p,{children:"The resource is protected by a bearer token. For example, if the bearer token \u201cMyBearerToken\u201d is provided, the authorisation header sent with the request will read \u201cAuthorisation: Bearer MyBearerToken\u201d."}),"\n",(0,i.jsx)(n.h3,{id:"customauthheader",children:"CustomAuthHeader"}),"\n",(0,i.jsx)(n.p,{children:"The resource is protected by a custom authorisation header. For example, if the header specified is \u201cMyAuthHeader\u201d and the token specified is \u201cMyAuthToken\u201d, the header sent with the request will read \u201cMyAuthHeader: MyAuthToken\u201d. Contrast this with Bearer mode, where the standard Authorisation header would be used instead."}),"\n",(0,i.jsx)(n.h3,{id:"serviceaccount",children:"ServiceAccount"}),"\n",(0,i.jsx)(n.p,{children:"The resource is protected by OAuth client credentials that are internal to Virtalis Hub. For example, using the hub-service account in your own instance of Keycloak to request an access token before presenting that token to the resource. This is used for downloading files from the internal ImportFolder service used when someone uses the Hub to upload a file."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This was previously called OAuth but has been renamed to better reflect its purpose and reduce ambiguity between this mode and the new OAuth2 mode described below."})}),"\n",(0,i.jsx)(n.h3,{id:"oauth2clientcredentials",children:"OAuth2ClientCredentials"}),"\n",(0,i.jsx)(n.p,{children:"Uses OAuth2\u2019s client credentials flow to download the file. This is used when the resource is protected by client credentials that are held in an external OAuth2-compatible identity system. For example, you may have your own instance of Keycloak or Microsoft Identity Server where the client protecting the resource is defined."}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"translator-service",children:"Translator Service"}),"\n",(0,i.jsx)(n.p,{children:"The Translator Service and Job API perform the download operation and, in order to make a successful request, the host name must be configured in the UrlSourceCredentials section belonging to the services. This is a list of host names and credentials; there should be one entry for each host. An example section from the configuration is shown below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"UrlSourceCredentials": [\r\n  {\r\n    // A server that has no authentication, files can be downloaded \r\n    "Hostname": "totallyinsecure.com",\r\n    "AuthType": "None"\r\n  },  \r\n  {\r\n    // The local Import Folder API used when the user imports a file via the Hub\r\n    "Hostname": "virtalis.platform.importfolder.api",\r\n    "AuthType": "ServiceAccount"\r\n  },\r\n  {\r\n    // A server that is protected by BASIC authentication\r\n    "Hostname": "rootwindchill.virtalis.local",\r\n    "AuthType": "Basic",\r\n    "BasicConfig": {               \r\n       "Username": "someuser",\r\n       "Password": "somepassword"\r\n    }\r\n  },\r\n  {\r\n    "Hostname": "afilesource-ccf-file-export-function-app.azurewebsites.net",\r\n    "AuthType": "OAuth2ClientCredentials",    \r\n    "OAuth2ClientCredentialsConfig": {\r\n      "ClientId": "<clientId>",\r\n      "ClientSecret": "<secret>",\r\n      "AccessTokenEndpoint": "https://login.microsoftonline.com/<tenantId>/oauth2/v2.0/token",\r\n      "Scope": "api://<scope-value>/.default"\r\n    }\r\n  }\r\n]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"job-api",children:"Job API"}),"\n",(0,i.jsx)(n.p,{children:"After a file has been imported, the Job API attempts to make a call back to the system that provided it as a way of letting it know that the import was successful. For this reason, the Job API also has a UrlSourceCredentials section in its secrets file. In the example below, there are two systems that support the callback functionality, one for localhost which represents the built-in Virtalis Hub callback (for when a user uploads a file through the Virtalis Hub user interface) and another for a provider in Microsoft Azure, which is protected by OAuth2 Client Credentials."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"UrlSourceCredentials": [\r\n  {\r\n    // A server that has no authentication, files can be downloaded \r\n    "Hostname": "totallyinsecure.com",\r\n    "AuthType": "None"\r\n  },  \r\n  {\r\n    // The local Import Folder API used when the user imports a file via the Hub\r\n    "Hostname": "virtalis.platform.importfolder.api",\r\n    "AuthType": "ServiceAccount"\r\n  },\r\n  {\r\n    // A server that is protected by BASIC authentication\r\n    "Hostname": "rootwindchill.virtalis.local",\r\n    "AuthType": "Basic",\r\n    "BasicConfig": {               \r\n       "Username": "someuser",\r\n       "Password": "somepassword"\r\n    }\r\n  },\r\n  {\r\n    "Hostname": "afilesource-ccf-file-export-function-app.azurewebsites.net",\r\n    "AuthType": "OAuth2ClientCredentials",    \r\n    "OAuth2ClientCredentialsConfig": {\r\n      "ClientId": "<clientId>",\r\n      "ClientSecret": "<secret>",\r\n      "AccessTokenEndpoint": "https://login.microsoftonline.com/<tenantId>/oauth2/v2.0/token",\r\n      "Scope": "api://<scope-value>/.default"\r\n    }\r\n  }\r\n]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"common-properties",children:"Common Properties"}),"\n",(0,i.jsx)(n.h3,{id:"hostname",children:"Hostname"}),"\n",(0,i.jsx)(n.p,{children:"When Virtalis Hub receives a message that includes a URL to download a file from, it will extract the hostname from it and then look for a matching section in TranslatorServiceSecrets. If no match is found, the message will be rejected. If a match is found, it will use the details in the matching section to configure the authentication required."}),"\n",(0,i.jsx)(n.h3,{id:"authtype",children:"AuthType"}),"\n",(0,i.jsx)(n.p,{children:"This is the authentication mode used by the external system."}),"\n",(0,i.jsx)(n.h3,{id:"basic-mode-properties",children:"Basic Mode Properties"}),"\n",(0,i.jsx)(n.p,{children:"These should be set in a \u201cBasicConfig\u201d section alongside the \u201cHostname\u201d and \u201cAuthType\u201d properties."}),"\n",(0,i.jsx)(n.p,{children:"Username\r\nThe username required to access the resource."}),"\n",(0,i.jsx)(n.p,{children:"Password\r\nThe password required to access the resource."}),"\n",(0,i.jsx)(n.p,{children:"Bearer Token Mode Properties\r\nThese should be set in a \u201cBearerTokenConfig\u201d section alongside the \u201cHostname\u201d and \u201cAuthType\u201d properties."}),"\n",(0,i.jsx)(n.p,{children:"BearerToken\r\nThe bearer token required to access the resource."}),"\n",(0,i.jsx)(n.p,{children:"Custom Auth Header Mode Properties\r\nThese should be set in a \u201cCustomAuthHeaderConfig\u201d section alongside the \u201cHostname\u201d and \u201cAuthType\u201d properties."}),"\n",(0,i.jsx)(n.p,{children:"AuthHeader\r\nThe custom auth header required to access the resource."}),"\n",(0,i.jsx)(n.p,{children:"AuthToken\r\nThe header value to specify."}),"\n",(0,i.jsx)(n.h3,{id:"serviceaccount-mode-properties",children:"ServiceAccount Mode Properties"}),"\n",(0,i.jsx)(n.p,{children:"There are no additional properties for this mode. Virtalis Hub is already configured internally with the correct credentials for requesting access tokens with the hub-service client."}),"\n",(0,i.jsx)(n.p,{children:"OAuth2ClientCredentials\r\nThese should be set in a \u201cOAuth2ClientCredentialsConfig\u201d section alongside the \u201cHostname\u201d and \u201cAuthType\u201d properties."}),"\n",(0,i.jsx)(n.p,{children:"ClientId\r\nThis is the name of a client that exists in the external system\u2019s identity server. In the example above, we have specified sunburn-client. A site administrator would be responsible for making sure this client exists."}),"\n",(0,i.jsx)(n.p,{children:"ClientSecret\r\nThis is the client secret for the above client."}),"\n",(0,i.jsx)(n.p,{children:"AccessTokenEndpoint\r\nThis is the endpoint Virtalis Hub needs to call when requesting an access token. A site administrator will need to provide this."}),"\n",(0,i.jsx)(n.p,{children:"If this is wrong, you will likely see an exception in the logs saying that an access token could not be retrieved, for example:"}),"\n",(0,i.jsx)(n.p,{children:"Failed to obtain an access token. Check that the source credentials for the named resource (including ClientId, ClientSecret and Scope) are valid in the target identity system"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This URL is also subject to the same checks for HTTP/HTTPS. If the URL is not over HTTPS you must explicitly allow insecure requests by setting AllowInsecureRequestUrls to true."})}),"\n",(0,i.jsx)(n.p,{children:"Scope (Optional)\r\nIf the resource requires a specific claim called \u2018scope\u2019 to be included in the request, you can specify it here. When Virtalis Hub requests the access token, it will also specify the scope and the resulting token will include it."}),"\n",(0,i.jsx)(n.p,{children:"AllowInsecureRequestUrls\r\nBy default, Virtalis Hub does not allow files to be downloaded over HTTP because this is insecure. If a file source is configured with HTTP (via a mapping in the UrlSourceCredentials configuration section) or if a URL for a configured host comes into Virtalis Hub in a queue message and it specifies HTTP rather than HTTPS, an exception will be thrown and the request will not be made."}),"\n",(0,i.jsx)(n.p,{children:"It may be necessary to allow HTTP in some cases however, and this can be done by explicitly setting AllowInsecureRequestUrls to true in the configuration for that specific URL source. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'  {\r\n    "Hostname": "virtalis.platform.importfolder.api",\r\n    "AuthType": "ServiceAccount",\r\n    "AllowInsecureRequestUrls": true\r\n  }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Mappings"}),"\n",(0,i.jsx)(n.p,{children:"If an external system provides a download URL that cannot be accessed by the Hub using the address provided, a Mapping section can be added to the URLSourceCredential section to change the following properties"}),"\n",(0,i.jsx)(n.p,{children:"\u2022 Protocol (for example, http, https)"}),"\n",(0,i.jsx)(n.p,{children:"\u2022 Hostname (for example, the hostname that Virtalis Hub is able to access the source at)"}),"\n",(0,i.jsx)(n.p,{children:"\u2022 Port (for example, the port number that Virtalis Hub can access the source on)"}),"\n",(0,i.jsx)(n.p,{children:"For example, a Windchill instance may see itself as having hostname windchill.test.local (and therefore generates a URL with that hostname). However, due to networking complications, Virtalis Hub may only be able to access the same instance via a different hostname such as windchill.testserver.local."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'  {\r\n    "Hostname": "windchill.test.local",\r\n    "AuthType": "Basic",\r\n    "AllowInsecureRequestUrls": false,\r\n    "Mapping": {\r\n      "Protocol": "https",\r\n      "Host": "windchill.testserver.local",\r\n      "Port": 1235\r\n    }\t\t\r\n  }\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this situation, an incoming downloadURL containing the hostname windchill.test.local will have the changes from the Mapping section applied to it before attempting to download data from that server, for example, it will be rewritten to use ",(0,i.jsx)(n.code,{children:"https://windchill.testserver.local:1235/<remainder-of-original-url>"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Managing External File Sources and File Source Certificates"}),"\n",(0,i.jsx)(n.p,{children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"The Virtalis Hub data processing pipeline can support integrations with third-party software by downloading files from external services. This section is designed to help a systems administrator manage those connections as well as any certificates required to make those connections happen."}),"\n",(0,i.jsx)(n.p,{children:"Set Up the Deployment Shell\r\nSubstitute and export the following variables:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"export HUB_NAMESPACE=<name of kubernetes namespace Virtalis Hub is deployed in>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Navigate to the directory containing Hub installation files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd /home/root/Hub/k8s\n"})}),"\n",(0,i.jsx)(n.p,{children:"Load previous configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:". ./load-install-config.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"Adding or Removing External File Sources"}),"\n",(0,i.jsx)(n.p,{children:"Check if the system has any external file sources already configured that can be appended to or deleted:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"echo $IMPORT_TRANSLATOR_SOURCE_CREDENTIALS\r\necho $JOB_API_SOURCE_CREDENTIALS\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.p,{children:"Current configuration for the Job API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'  {\r\n    "Hostname": "mynotauthenticatedserver.local",\r\n    "AuthType": "None",\r\n    "AllowInsecureRequestUrls": "false"\r\n  }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Adding an additional file source:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'read -r -d \'\' JOB_API_SOURCE_CREDENTIALS <<\'EOF\'\r\n  {\r\n    "Hostname": "mynotauthenticatedserver.local",\r\n    "AuthType": "None",\r\n    "AllowInsecureRequestUrls": "false"\r\n  },\r\n  {\r\n    "Hostname": "windchill.local",\r\n    "AuthType": "Basic",\r\n    "BasicConfig": {\r\n      "Username": "windchilluser",\r\n      "Password": "windchill"\r\n    },\r\n    "Mapping": {\r\n      "Protocol": "http",\r\n      "Host": "windchill.local"\r\n    },\r\n    "AllowInsecureRequestUrls": "true"\r\n  }\r\nEOF\r\nexport JOB_API_SOURCE_CREDENTIALS=$(echo -n ${JOB_API_SOURCE_CREDENTIALS} | tr -d \'\\n\')\n'})}),"\n",(0,i.jsx)(n.p,{children:"Removing all sources from the Job API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"unset JOB_API_SOURCE_CREDENTIALS\n"})}),"\n",(0,i.jsx)(n.p,{children:"Removing all sources from the import-translator"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"unset IMPORT_TRANSLATOR_SOURCE_CREDENTIALS\n"})}),"\n",(0,i.jsx)(n.p,{children:"Adding or Removing File Source Certificates"}),"\n",(0,i.jsx)(n.p,{children:"Check if the system has any external file sources already configured that can be appended to or deleted:"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.p,{children:"Current configuration for the import-translator:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\r\n  {"secretName": "example-cert-secret", "key": "example.crt"}\r\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Adding an additional file source:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'read -r -d \'\' IMPORT_TRANSLATOR_CERTIFICATES <<\'EOF\'\r\n[\r\n  {"secretName": "example-cert-secret", "key": "example.crt"},\r\n  {"secretName": "example-cert-secret2", "key": "example2.crt"}\r\n]\r\nEOF\r\nexport IMPORT_TRANSLATOR_CERTIFICATES=${IMPORT_TRANSLATOR_CERTIFICATES}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Removing all certificates from the import-translator:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"unset IMPORT_TRANSLATOR_CERTIFICATES\n"})}),"\n",(0,i.jsx)(n.p,{children:"Removing all certificates from the Job API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"unset JOB_API_SOURCE_CERTIFICATES\n"})}),"\n",(0,i.jsx)(n.p,{children:"Applying Changes"}),"\n",(0,i.jsx)(n.p,{children:"Run the scripts:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"./create-secrets.sh\r\n./install-hub.sh\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);