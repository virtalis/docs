"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[14105],{60907:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"visionary-render-programming/shaders/introduction","title":"Introduction","description":"The Script Editor can also be used to edit shaders. As an OpenGL-based application, Visionary Render supports the GLSL shading language. Visionary Render supports 2 types of shader: surface shaders and view shaders.","source":"@site/docs/visionary-render-programming/shaders/introduction.mdx","sourceDirName":"visionary-render-programming/shaders","slug":"/visionary-render-programming/shaders/introduction","permalink":"/visionary-render-programming/shaders/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/shaders/introduction.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Semantics","permalink":"/visionary-render-programming/plugins/advanced/semantics"},"next":{"title":"Surface Shaders","permalink":"/visionary-render-programming/shaders/surface-shaders"}}');var t=n(74848),i=n(28453);const a={sidebar_position:1},o="Introduction",d={},c=[];function p(e){const r={h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(r.p,{children:"The Script Editor can also be used to edit shaders. As an OpenGL-based application, Visionary Render supports the GLSL shading language. Visionary Render supports 2 types of shader: surface shaders and view shaders."})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var s=n(96540);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);