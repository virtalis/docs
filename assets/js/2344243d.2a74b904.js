"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[79793],{99151:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-texture","title":"Meta_Texture","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-texture.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-texture","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-texture","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-texture.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_Texture","summary":"A Texture contains image data that is referenced by materials."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_TextBox","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-text-box"},"next":{"title":"Meta_TexturedButtonStyle","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-textured-button-style"}}');var i=r(74848),s=r(28453);const d={title:"Meta_Texture",summary:"A Texture contains image data that is referenced by materials."},l="Meta_Texture",a={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum ColourSpace",id:"enum-colourspace",level:3},{value:"enum Content",id:"enum-content",level:3},{value:"enum Encoding",id:"enum-encoding",level:3},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum Magnify",id:"enum-magnify",level:3},{value:"enum Minify",id:"enum-minify",level:3},{value:"enum Wrap",id:"enum-wrap",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"meta_texture",children:"Meta_Texture"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Module:"})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(n.strong,{children:"/"})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsxs)(n.p,{children:["A Texture contains image data that is referenced by materials.  ",(0,i.jsx)(n.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,i.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Name"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-colourspace",children:"ColourSpace"})})," { ColourSpace_Default, ColourSpace_sRGB, ColourSpace_LinearRGB }",(0,i.jsx)("br",{}),"Values for Idx_ColourSpace."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-content",children:"Content"})})," { Content_Colours, Content_BumpMap, Content_NormalMap, Content_AlphaTest }",(0,i.jsx)("br",{}),"Values for Idx_Content."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-encoding",children:"Encoding"})})," { Encoding_RGB_XYZ, Encoding_RGB_XZY }",(0,i.jsx)("br",{}),"Values for Idx_Encoding."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Filename, Idx_Minify, Idx_Magnify, Idx_WrapU, Idx_WrapV, Idx_ColourSpace, Idx_DDSData, Idx_DDSModifiedTime, Idx_Content, Idx_Encoding, Idx_AnisotropicDegree, Idx_Transform, Idx_MapChannel, Idx_LODBias, Idx_AlphaRef }"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-magnify",children:"Magnify"})})," { Magnify_None = 9728, Magnify_Bilinear = 9729 }",(0,i.jsx)("br",{}),"Values for Idx_Magnify."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-minify",children:"Minify"})})," { Minify_None = 9728, Minify_Bilinear = 9729, Minify_Trilinear = 9987 }",(0,i.jsx)("br",{}),"Values for Idx_Minify."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enum"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#enum-wrap",children:"Wrap"})})," { Wrap_ClampWhite = 33069, Wrap_ClampEdge = 33071, Wrap_Repeat = 10497, Wrap_Mirrored = 33648 }",(0,i.jsx)("br",{}),"Values for Idx_WrapU and Idx_WrapV."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"struct Meta_Texture;\n"})}),"\n",(0,i.jsx)(n.p,{children:"A Texture contains image data that is referenced by materials."}),"\n",(0,i.jsx)(n.p,{children:"The texture data is expected to be provided in DDS format. Alternatively a script or plugin may use the following API functions to populate the DDSData automatically from an image file:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lua: vrReloadTextures"}),"\n",(0,i.jsx)(n.li,{children:"C: VRFileToDDSProperty"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The C API may also convert an arbitrary blob of pixel data to DDS using ",(0,i.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/core#vrblobtoddsproperty",children:"VRBlobToDDSProperty"})]}),"\n",(0,i.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(n.h3,{id:"enum-colourspace",children:"enum ColourSpace"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ColourSpace_Default"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Colours assumed to be in whichever colour space currently defined by the application (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ColourSpaceDefault"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ColourSpaceDefault"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ColourSpace_sRGB"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Colours are in the sRGB gamma-corrected colour space (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ColourSpacesRGB"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ColourSpacesRGB"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ColourSpace_LinearRGB"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Colours are in the linear colour space (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ColourSpaceLinearRGB"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ColourSpaceLinearRGB"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_ColourSpace."}),"\n",(0,i.jsx)(n.h3,{id:"enum-content",children:"enum Content"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content_Colours"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Texture contains colours (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ContentColours"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ContentColours"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content_BumpMap"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Texture contains either a greyscale height map, or RGB encoded tangent-space normals (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ContentBumpMap"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ContentBumpMap"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content_NormalMap"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Texture contains RGB encoded object-space normals (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ContentNormalMap"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ContentNormalMap"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content_AlphaTest"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Texture contains large transparent regions and will be alpha tested (Symbols - C: ",(0,i.jsx)(n.code,{children:'"ContentAlphaTest"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_ContentAlphaTest"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_Content."}),"\n",(0,i.jsx)(n.h3,{id:"enum-encoding",children:"enum Encoding"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Encoding_RGB_XYZ"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Green is the up vector (Symbols - C: ",(0,i.jsx)(n.code,{children:'"EncodingRGBXYZ"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_EncodingRGBXYZ"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Encoding_RGB_XZY"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Blue is the up vector (Symbols - C: ",(0,i.jsx)(n.code,{children:'"EncodingRGBXZY"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_EncodingRGBXZY"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_Encoding."}),"\n",(0,i.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Filename"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"string - File name of the texture. See main description for information about how this property is used."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Minify"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Minify (int) - The minify filter to apply to texels that when viewed are smaller than a pixel"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Magnify"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Magnify (int) - The magnify filter to apply to texels that when viewed are larger than a pixel"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_WrapU"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Wrap (int) - The wrapping mode to use when the U coordinate is outside of the 0.0 - 1.0 range"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_WrapV"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Wrap (int) - The wrapping mode to use when the V coordinate is outside of the 0.0 - 1.0 range"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_ColourSpace"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#enum-colourspace",children:"ColourSpace"})," (int) - The colour space of the texture. A non-default value may involve automatic internal conversion to the colour space used by the application."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_DDSData"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"vector<char>"})," - Raw DDS data (including DDS headers)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_DDSModifiedTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"int64 - The time the DDSData was last modified. Unix epoch (seconds since Jan 1 1970), stored as two 32-bit ints (LO,HI)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Content"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#enum-content",children:"Content"})," (int) - The usage that this data is intended for"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Encoding"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#enum-encoding",children:"Encoding"})," (int) - The encoding of the data when it is intended to be used for normal mapping"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_AnisotropicDegree"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"int - The degree of anisotropy to use when sampling the texture. A value of 1 means isotropic (fastest)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_Transform"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"mat4w - Transform to apply to texture coordinates"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_MapChannel"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"int - The texture channel to use from the mesh (see [Meta_VertexAttrib)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_LODBias"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - Adjust the mipmap level to make the texture appear sharper or smoother when viewed from a distance when in Trilinear filtering mode"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idx_AlphaRef"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"float - The alpha reference for mipmap generation when Content=AlphaTested"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"enum-magnify",children:"enum Magnify"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Magnify_None"}),(0,i.jsx)(n.td,{children:"9728"}),(0,i.jsxs)(n.td,{children:["No texture filtering (Symbols - C: ",(0,i.jsx)(n.code,{children:'"MagnifyNone"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_MagnifyNone"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Magnify_Bilinear"}),(0,i.jsx)(n.td,{children:"9729"}),(0,i.jsxs)(n.td,{children:["Bilinear texture filtering (Symbols - C: ",(0,i.jsx)(n.code,{children:'"MagnifyBilinear"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_MagnifyBilinear"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_Magnify."}),"\n",(0,i.jsx)(n.h3,{id:"enum-minify",children:"enum Minify"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Minify_None"}),(0,i.jsx)(n.td,{children:"9728"}),(0,i.jsxs)(n.td,{children:["No texture filtering (Symbols - C: ",(0,i.jsx)(n.code,{children:'"MinifyNone"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_MinifyNone"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Minify_Bilinear"}),(0,i.jsx)(n.td,{children:"9729"}),(0,i.jsxs)(n.td,{children:["Bilinear texture filtering (Symbols - C: ",(0,i.jsx)(n.code,{children:'"MinifyBilinear"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_MinifyBilinear"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Minify_Trilinear"}),(0,i.jsx)(n.td,{children:"9987"}),(0,i.jsxs)(n.td,{children:["Triliniear texture filtering (Symbols - C: ",(0,i.jsx)(n.code,{children:'"MinifyTrilinear"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_MinifyTrilinear"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_Minify."}),"\n",(0,i.jsx)(n.h3,{id:"enum-wrap",children:"enum Wrap"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enumerator"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Wrap_ClampWhite"}),(0,i.jsx)(n.td,{children:"33069"}),(0,i.jsxs)(n.td,{children:["Returns a white texel when texture coordinate outside texture area (Symbols - C: ",(0,i.jsx)(n.code,{children:'"WrapClampWhite"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_WrapClampWhite"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Wrap_ClampEdge"}),(0,i.jsx)(n.td,{children:"33071"}),(0,i.jsxs)(n.td,{children:["Return the texel from the nearest edge when texture coordinate outside texture area (Symbols - C: ",(0,i.jsx)(n.code,{children:'"WrapClampEdge"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_WrapClampEdge"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Wrap_Repeat"}),(0,i.jsx)(n.td,{children:"10497"}),(0,i.jsxs)(n.td,{children:["Wrap texture coordinate around when outside texture area, so the texture is tiled in this direction (Symbols - C: ",(0,i.jsx)(n.code,{children:'"WrapRepeat"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_WrapRepeat"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Wrap_Mirrored"}),(0,i.jsx)(n.td,{children:"33648"}),(0,i.jsxs)(n.td,{children:["Wrap texture coordinate around when outside texture area, mirroring the texture across boundaries (Symbols - C: ",(0,i.jsx)(n.code,{children:'"WrapMirrored"'}),", Lua: ",(0,i.jsx)(n.code,{children:"__Texture_WrapMirrored"}),")"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Values for Idx_WrapU and Idx_WrapV."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);