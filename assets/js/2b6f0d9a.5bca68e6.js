"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[59257],{11389:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-untargetted-viewport","title":"Meta_UntargettedViewport","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-untargetted-viewport.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-untargetted-viewport","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-untargetted-viewport","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-untargetted-viewport.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_UntargettedViewport","summary":"An UntargettedViewport represents a viewport occupying a specified rectangle of a window (range 0 to 1) which renders the 3D scene using the specified view and projection matrices."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_Typeface","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-typeface"},"next":{"title":"Meta_UserLink","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-user-link"}}');var i=r(74848),s=r(28453);const d={title:"Meta_UntargettedViewport",summary:"An UntargettedViewport represents a viewport occupying a specified rectangle of a window (range 0 to 1) which renders the 3D scene using the specified view and projection matrices."},a="Meta_UntargettedViewport",o={},c=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"meta_untargettedviewport",children:"Meta_UntargettedViewport"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Module:"})," ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,i.jsx)(t.strong,{children:"/"})," ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,i.jsx)(t.p,{children:"An UntargettedViewport represents a viewport occupying a specified rectangle of a window (range 0 to 1) which renders the 3D scene using the specified view and projection matrices."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"#include <meta_view.hpp>"})}),"\n",(0,i.jsx)(t.h2,{id:"public-types",children:"Public Types"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Name"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"enum"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Rectangle, Idx_Camera, Idx_ViewMatrix_Mono, Idx_ViewMatrix_Left, Idx_ViewMatrix_Right, Idx_ProjectionMatrix_Mono, Idx_ProjectionMatrix_Left, Idx_ProjectionMatrix_Right }",(0,i.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,i.jsx)(t.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Enumerator"}),(0,i.jsx)(t.th,{children:"Value"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_Enabled"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"bool - When enabled, viewport is drawn to the screen"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_Rectangle"}),(0,i.jsx)(t.td,{}),(0,i.jsxs)(t.td,{children:["vec4f - The viewport bounds, scaled on the screen by the ViewportLayout size. (e.g. layout size ",(0,i.jsx)(t.code,{children:"2.0, 1.0"}),", and child viewport width ",(0,i.jsx)(t.code,{children:"1.0"})," will fill half the screen with the viewport)"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_Camera"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"link - The camera from which the scene is rendered"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ViewMatrix_Mono"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - View matrix for mono"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ViewMatrix_Left"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - View matrix for the left eye"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ViewMatrix_Right"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - View matrix for the right eye"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ProjectionMatrix_Mono"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - Projection matrix for mono"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ProjectionMatrix_Left"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - Projection matrix for the left eye"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Idx_ProjectionMatrix_Right"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mat4w - Projection matrix for the right eye"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"Property index."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>a});var n=r(96540);const i={},s=n.createContext(i);function d(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);