"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[46843],{8362:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-entry","title":"Meta_ApplicationMenuEntry","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-entry.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-entry","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-entry","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-entry.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_ApplicationMenuEntry","summary":"An ApplicationMenuEntry is a menu entry that can appear in the context menu or main file menu."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_ApplicationMenuCustom","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-custom"},"next":{"title":"Meta_ApplicationMenuHeader","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-application-menu-header"}}');var r=t(74848),s=t(28453);const d={title:"Meta_ApplicationMenuEntry",summary:"An ApplicationMenuEntry is a menu entry that can appear in the context menu or main file menu."},o="Meta_ApplicationMenuEntry",l={},a=[{value:"Public Types",id:"public-types",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum AppMenuEntryType",id:"enum-appmenuentrytype",level:3},{value:"enum IDX",id:"enum-idx",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"meta_applicationmenuentry",children:"Meta_ApplicationMenuEntry"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Module:"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,r.jsx)(n.strong,{children:"/"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,r.jsxs)(n.p,{children:["An ApplicationMenuEntry is a menu entry that can appear in the context menu or main file menu.  ",(0,r.jsx)(n.a,{href:"#detailed-description",children:"More..."})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"#include <meta_gvxfactory.hpp>"})}),"\n",(0,r.jsx)(n.h2,{id:"public-types",children:"Public Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"enum"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"#enum-appmenuentrytype",children:"AppMenuEntryType"})})," { kApp = 0, kLua, kLuaBlock, kPropertyToggle, kAppSettingToggle, kLuaActivate, kFunction, kNotebookToggle, kSizingFrameToggle, kAppSettingIntToggle, kAppSettingIntFlip }",(0,r.jsx)("br",{}),"Values for Idx_Type."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"enum"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Create, Idx_Type, Idx_Caption, Idx_Command, Idx_Keys, Idx_UserString, Idx_StatusText, Idx_ImageFilename, Idx_OverlayImageFilename, Idx_ShortcutText, Idx_ClusterScope, Idx_ShowInfoLine, Idx_HelpTopic, Idx_SplitButton, Idx_Available, Idx_Permission, Idx_UseAlternateImage, Idx_ImageColour, Idx_Toggled }",(0,r.jsx)("br",{}),"Property index."]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"detailed-description",children:"Detailed Description"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"struct Meta_ApplicationMenuEntry;\n"})}),"\n",(0,r.jsx)(n.p,{children:"An ApplicationMenuEntry is a menu entry that can appear in the context menu or main file menu."}),"\n",(0,r.jsxs)(n.p,{children:["It should be inserted into the tree somewhere under ",(0,r.jsx)(n.code,{children:"<user>/ApplicationMenus/ContextMenu"})," or ",(0,r.jsx)(n.code,{children:"<user>/ApplicationMenus/MainMenu"})]}),"\n",(0,r.jsx)(n.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,r.jsx)(n.h3,{id:"enum-appmenuentrytype",children:"enum AppMenuEntryType"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Enumerator"}),(0,r.jsx)(n.th,{children:"Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kApp"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsxs)(n.td,{children:['Triggers an appCommand named by "Command", with parameter in "UserString" (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeApp"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeApp"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kLua"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Triggers a Lua function named in "Command", with parameter in "UserString" if any (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeLua"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeLua"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kLuaBlock"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Triggers the execution of a block of Lua code specified in "Command" (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeLuaBlock"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeLuaBlock"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kPropertyToggle"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Toggles the value of property named in "Command", on node at path in "UserString" (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypePropertyToggle"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypePropertyToggle"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kAppSettingToggle"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Toggles the value of a setting at path in "UserString" (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeSettingToggle"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeSettingToggle"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kLuaActivate"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["Triggers the Activate event if one is present on the menu entry itself (Symbols - C: ",(0,r.jsx)(n.code,{children:'"TypeActivate"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeActivate"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kFunction"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["Triggers a named function registered with the script engine; [VRRegisterEventFunction (Symbols - C: ",(0,r.jsx)(n.code,{children:'"TypeFunction"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeFunction"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kNotebookToggle"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["Displays a notebook frame, command is notebook name userstring is notebook pane. (Symbols - C: ",(0,r.jsx)(n.code,{children:'"TypeNotebookToggle"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeNotebookToggle"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kSizingFrameToggle"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Toggles the visibility of the frame specified in "UserString";this should be a path (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeSizingFrameToggle"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeSizingFrameToggle"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kAppSettingIntToggle"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Toggles the value of a setting at path in "UserString" between 0 and value specified in "Command" (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeSettingIntToggle"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeSettingIntToggle"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"kAppSettingIntFlip"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:['Sets the value of a setting at path in "UserString", if the setting is already set then flip it. (Symbols - C: ',(0,r.jsx)(n.code,{children:'"TypeSettingIntFlip"'}),", Lua: ",(0,r.jsx)(n.code,{children:"__ApplicationMenuEntry_TypeSettingIntFlip"}),")"]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Values for Idx_Type."}),"\n",(0,r.jsx)(n.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Enumerator"}),(0,r.jsx)(n.th,{children:"Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Create"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["string - Specifies the factory that should create the menu entry. For context menu items this should be empty. For main menu it should be ",(0,r.jsx)(n.code,{children:"VRMenuItem"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Type"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"#enum-appmenuentrytype",children:"AppMenuEntryType"})," (int) - Specifies the type of menu entry"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Caption"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Caption that should appear on the item"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Command"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Usage depends on the value of Idx_Type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Keys"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Key binding that triggers this action. Does not currently parse the string to create the binding - there would have to be a KeyPress event created, too"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_UserString"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Usage depends on the value of Idx_type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_StatusText"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Text to display in the menu entry tooltip (previously in the status bar)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_ImageFilename"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["string - Name of an icon file to display on the option, from the ",(0,r.jsx)(n.code,{children:"data"})," folder"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_OverlayImageFilename"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["string - Name of an image to overlay over the icon, from somewhere in the ",(0,r.jsx)(n.code,{children:"data"})," folder"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_ShortcutText"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Display-friendly representation of the contents of Idx_Keys"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_ClusterScope"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:'string - Specifies execution behaviour in a cluster; "all" executes on all cluster members, "slave" only on slaves, anything else (including the default value) only executes on the master'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_ShowInfoLine"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"bool - (for MainMenu) If enabled, shows the StatusText in a line below the caption, rather than on a tooltip"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_HelpTopic"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Specifies the section name of relevant documentation in the user manual for context sensitive help"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_SplitButton"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"bool - (for MainMenu) If enabled, splits the button into one that triggers the button action, and one that displays the child items"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Available"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"bool - When enabled, button is available to be clicked. Otherwise it is greyed out."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Permission"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Names of permissions required for the button to be visible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_UseAlternateImage"}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["bool - Idx_ImageFilename may be delimited by ",(0,r.jsx)(n.code,{children:";"})," to contain a second image to display when this is true"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_ImageColour"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"string - Name of colour to render the image in. This should reference an entry in theme.xml. Leave empty to render with white and so original image colour is maintained."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idx_Toggled"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:'bool - Whether the button appears toggled, but only when Type is not one of the "...Toggle" types.'})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Property index."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);