"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[96374],{37972:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track","title":"Meta_SequenceTrack","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence-track.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_SequenceTrack","summary":"A sequence track permits a sequence to be played at a specified time in another sequence."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_Separator","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-separator"},"next":{"title":"Meta_Sequence","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence"}}');var s=n(74848),a=n(28453);const i={title:"Meta_SequenceTrack",summary:"A sequence track permits a sequence to be played at a specified time in another sequence."},c="Meta_SequenceTrack",d={},o=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum IDX",id:"enum-idx",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"meta_sequencetrack",children:"Meta_SequenceTrack"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Module:"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,s.jsx)(r.strong,{children:"/"})," ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,s.jsx)(r.p,{children:"A sequence track permits a sequence to be played at a specified time in another sequence."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,s.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Name"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enum"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_State, Idx_Target, Idx_PlayCount, Idx_RelStart, Idx_Reverse }",(0,s.jsx)("br",{}),"Property index."]})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,s.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Enumerator"}),(0,s.jsx)(r.th,{children:"Value"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_State"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-assembly-track#enum-state",children:"State"})," (int) - Can this track be recorded into and played, played only, or neither"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Target"}),(0,s.jsx)(r.td,{}),(0,s.jsxs)(r.td,{children:["link - A ",(0,s.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-sequence",children:"Meta_Sequence"})," node to be linked to by this track"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_PlayCount"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"int - The number of times to play the target sequence"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_RelStart"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"float - The time in seconds to start playing the target sequence, relative to the parent sequence of this track"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Idx_Reverse"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"bool - If true, the target sequence will be played backwards"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Property index."})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var t=n(96540);const s={},a=t.createContext(s);function i(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);