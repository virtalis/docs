"use strict";(self.webpackChunkvirtalis_docs=self.webpackChunkvirtalis_docs||[]).push([[73135],{7486:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"visionary-render-programming/reference/c-api/classes/metanodes/meta-visual","title":"Meta_Visual","description":"Module: Metanodes / Definitions","source":"@site/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual.mdx","sourceDirName":"visionary-render-programming/reference/c-api/classes/metanodes","slug":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual","draft":false,"unlisted":false,"editUrl":"https://github.com/virtalis/docs/tree/master/docs/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual.mdx","tags":[],"version":"current","lastUpdatedAt":1730817102000,"frontMatter":{"title":"Meta_Visual","summary":"A Visual provides an instance of a Meta_Model, and is attached as a child of a Meta_Assembly to position it in the scene."},"sidebar":"visionaryRenderProgrammingSidebar","previous":{"title":"Meta_Viewport","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-viewport"},"next":{"title":"Meta_WaterMaterial","permalink":"/visionary-render-programming/reference/c-api/classes/metanodes/meta-water-material"}}');var n=s(74848),a=s(28453);const i={title:"Meta_Visual",summary:"A Visual provides an instance of a Meta_Model, and is attached as a child of a Meta_Assembly to position it in the scene."},l="Meta_Visual",t={},o=[{value:"Public Types",id:"public-types",level:2},{value:"Public Types Documentation",id:"public-types-documentation",level:2},{value:"enum CullFace",id:"enum-cullface",level:3},{value:"enum DrawMode",id:"enum-drawmode",level:3},{value:"enum IDX",id:"enum-idx",level:3},{value:"enum ShadowCaster",id:"enum-shadowcaster",level:3}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"meta_visual",children:"Meta_Visual"})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Module:"})," ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/",children:"Metanodes"})})," ",(0,n.jsx)(r.strong,{children:"/"})," ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/modules/metanodes/definitions",children:"Definitions"})})]}),"\n",(0,n.jsxs)(r.p,{children:["A Visual provides an instance of a ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-model",children:"Meta_Model"}),", and is attached as a child of a ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-assembly",children:"Meta_Assembly"})," to position it in the scene."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"#include <meta_importables.hpp>"})}),"\n",(0,n.jsx)(r.h2,{id:"public-types",children:"Public Types"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Name"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"enum"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"#enum-cullface",children:"CullFace"})})," { CullFace_Default = 0, CullFace_None = 1, CullFace_Front = 1028, CullFace_Back = 1029 }",(0,n.jsx)("br",{}),"Values for Idx_CullFace."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"enum"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"#enum-drawmode",children:"DrawMode"})})," { DrawMode_Default = 0, DrawMode_Points = 6912, DrawMode_Lines = 6913, DrawMode_Solid = 6914 }",(0,n.jsx)("br",{}),"Values for Idx_DrawMode."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"enum"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"#enum-idx",children:"IDX"})})," { Idx_Enabled, Idx_Model, Idx_Material, Idx_CullFace, Idx_DrawMode, Idx_ShadowCaster, Idx_RenderToCamera, Idx_Invert }",(0,n.jsx)("br",{}),"Property index."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"enum"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"#enum-shadowcaster",children:"ShadowCaster"})})," { ShadowCaster_PerGeoGroup, ShadowCaster_All, ShadowCaster_None }",(0,n.jsx)("br",{}),"Values for Idx_ShadowCaster."]})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"public-types-documentation",children:"Public Types Documentation"}),"\n",(0,n.jsx)(r.h3,{id:"enum-cullface",children:"enum CullFace"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Enumerator"}),(0,n.jsx)(r.th,{children:"Value"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CullFace_Default"}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsxs)(r.td,{children:["No override - use whatever CullFace is specified by the model's ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-geo-group",children:"Meta_GeoGroup"})," nodes (Symbols - C: ",(0,n.jsx)(r.code,{children:'"CullFaceNoOverride"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_CullFaceNoOverride"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CullFace_None"}),(0,n.jsx)(r.td,{children:"1"}),(0,n.jsxs)(r.td,{children:["Disable face culling (Symbols - C: ",(0,n.jsx)(r.code,{children:'"CullFaceNone"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_CullFaceNone"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CullFace_Front"}),(0,n.jsx)(r.td,{children:"1028"}),(0,n.jsxs)(r.td,{children:["Cull front faces (Symbols - C: ",(0,n.jsx)(r.code,{children:'"CullFaceFront"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_CullFaceFront"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CullFace_Back"}),(0,n.jsx)(r.td,{children:"1029"}),(0,n.jsxs)(r.td,{children:["Cull back faces (Symbols - C: ",(0,n.jsx)(r.code,{children:'"CullFaceBack"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_CullFaceBack"}),")"]})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Values for Idx_CullFace."}),"\n",(0,n.jsx)(r.h3,{id:"enum-drawmode",children:"enum DrawMode"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Enumerator"}),(0,n.jsx)(r.th,{children:"Value"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"DrawMode_Default"}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsxs)(r.td,{children:["No override - use whatever DrawMode is specified by the model's ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-geo-group",children:"Meta_GeoGroup"})," nodes (Symbols - C: ",(0,n.jsx)(r.code,{children:'"DrawModeNoOverride"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_DrawModeNoOverride"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"DrawMode_Points"}),(0,n.jsx)(r.td,{children:"6912"}),(0,n.jsxs)(r.td,{children:["Draw as points (Symbols - C: ",(0,n.jsx)(r.code,{children:'"DrawModePoints"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_DrawModePoints"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"DrawMode_Lines"}),(0,n.jsx)(r.td,{children:"6913"}),(0,n.jsxs)(r.td,{children:["Draw as lines (Symbols - C: ",(0,n.jsx)(r.code,{children:'"DrawModeLines"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_DrawModeLines"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"DrawMode_Solid"}),(0,n.jsx)(r.td,{children:"6914"}),(0,n.jsxs)(r.td,{children:["Draw as triangles (Symbols - C: ",(0,n.jsx)(r.code,{children:'"DrawModeSolid"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_DrawModeSolid"}),")"]})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Values for Idx_DrawMode."}),"\n",(0,n.jsx)(r.h3,{id:"enum-idx",children:"enum IDX"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Enumerator"}),(0,n.jsx)(r.th,{children:"Value"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_Enabled"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"bool - If true, model is drawn."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_Model"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["link - The ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-model",children:"Meta_Model"})," to draw if this is enabled."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_Material"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["link - The override material to pass to the models geogroups, which will use this material unless theirs is 'locked'. (",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-std-material",children:"Meta_StdMaterial"}),", ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-gui-material",children:"Meta_GUIMaterial"}),", Meta_WaterMaterial)"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_CullFace"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual#enum-cullface",children:"CullFace"})," (int) - The cull face mode to pass to the models geogroups."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_DrawMode"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-visual#enum-drawmode",children:"DrawMode"})," (int) - the polygon mode to pass to the models geogroups."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_ShadowCaster"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"ShadowCaster (int) - indicates to the model whether it should be drawn into shadowmaps or not."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_RenderToCamera"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"bool - indicates to the model whether it should be drawn into cameras or not."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Idx_Invert"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"bool - indicates to the models geogroups whether the polygon winding order should be reversed or not."})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Property index."}),"\n",(0,n.jsx)(r.h3,{id:"enum-shadowcaster",children:"enum ShadowCaster"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Enumerator"}),(0,n.jsx)(r.th,{children:"Value"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ShadowCaster_PerGeoGroup"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["No override - use whatever ShadowCaster mode is specified by the model's ",(0,n.jsx)(r.a,{href:"/visionary-render-programming/reference/c-api/classes/metanodes/meta-geo-group",children:"Meta_GeoGroup"})," nodes (Symbols - C: ",(0,n.jsx)(r.code,{children:'"ShadowCasterPerGeoGroup"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_ShadowCasterPerGeoGroup"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ShadowCaster_All"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["Force the model to cast shadows (Symbols - C: ",(0,n.jsx)(r.code,{children:'"ShadowCasterAll"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_ShadowCasterAll"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ShadowCaster_None"}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["Do not cast any shadows (Symbols - C: ",(0,n.jsx)(r.code,{children:'"ShadowCasterNone"'}),", Lua: ",(0,n.jsx)(r.code,{children:"__Visual_ShadowCasterNone"}),")"]})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Values for Idx_ShadowCaster."})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>l});var d=s(96540);const n={},a=d.createContext(n);function i(e){const r=d.useContext(a);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),d.createElement(a.Provider,{value:r},e.children)}}}]);